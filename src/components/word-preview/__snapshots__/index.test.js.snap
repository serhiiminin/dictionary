// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WordForm render 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <WordPreview
      loading={false}
      word={
        Object {
          "_id": "1",
          "examples": Array [
            Object {
              "id": "8",
              "value": "example",
            },
          ],
          "partOfSpeech": Array [
            Object {
              "id": "55",
              "value": "noun",
            },
          ],
          "synonyms": Array [
            Object {
              "id": "34",
              "value": "day",
            },
          ],
          "transcription": "transcription",
        }
      }
    >
      <div>
        <WithTheme(Fade)
          in={false}
        >
          <Fade
            in={false}
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                  "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                  "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                  "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                  "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                  "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                  "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                  "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                  "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                  "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                  "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                  "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                  "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                  "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                  "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                  "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                  "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                  "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                  "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                  "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                  "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                  "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                  "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                  "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": Object {
                  "unit": 8,
                },
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "lineHeight": "1.46429em",
                  },
                  "body2": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "lineHeight": "1.71429em",
                  },
                  "button": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "lineHeight": "1.375em",
                  },
                  "display1": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "lineHeight": "1.20588em",
                  },
                  "display2": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.8125rem",
                    "fontWeight": 400,
                    "lineHeight": "1.13333em",
                    "marginLeft": "-.02em",
                  },
                  "display3": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "-.02em",
                    "lineHeight": "1.30357em",
                    "marginLeft": "-.02em",
                  },
                  "display4": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "7rem",
                    "fontWeight": 300,
                    "letterSpacing": "-.04em",
                    "lineHeight": "1.14286em",
                    "marginLeft": "-.04em",
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "headline": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "lineHeight": "1.35417em",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subheading": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "lineHeight": "1.5em",
                  },
                  "title": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.3125rem",
                    "fontWeight": 500,
                    "lineHeight": "1.16667em",
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "tooltip": 1500,
                },
              }
            }
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={false}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
              unmountOnExit={false}
            >
              <WithStyles(LinearProgress)
                color="secondary"
                style={
                  Object {
                    "opacity": 0,
                    "willChange": "opacity",
                  }
                }
              >
                <LinearProgress
                  classes={
                    Object {
                      "bar": "MuiLinearProgress-bar-9",
                      "bar1Buffer": "MuiLinearProgress-bar1Buffer-14",
                      "bar1Determinate": "MuiLinearProgress-bar1Determinate-13",
                      "bar1Indeterminate": "MuiLinearProgress-bar1Indeterminate-12",
                      "bar2Buffer": "MuiLinearProgress-bar2Buffer-17",
                      "bar2Determinate": "MuiLinearProgress-bar2Determinate-16",
                      "bar2Indeterminate": "MuiLinearProgress-bar2Indeterminate-15",
                      "barColorPrimary": "MuiLinearProgress-barColorPrimary-10",
                      "barColorSecondary": "MuiLinearProgress-barColorSecondary-11",
                      "buffer": "MuiLinearProgress-buffer-4",
                      "colorPrimary": "MuiLinearProgress-colorPrimary-2",
                      "colorSecondary": "MuiLinearProgress-colorSecondary-3",
                      "dashed": "MuiLinearProgress-dashed-6",
                      "dashedColorPrimary": "MuiLinearProgress-dashedColorPrimary-7",
                      "dashedColorSecondary": "MuiLinearProgress-dashedColorSecondary-8",
                      "query": "MuiLinearProgress-query-5",
                      "root": "MuiLinearProgress-root-1",
                    }
                  }
                  color="secondary"
                  style={
                    Object {
                      "opacity": 0,
                      "willChange": "opacity",
                    }
                  }
                  variant="indeterminate"
                >
                  <div
                    className="MuiLinearProgress-root-1 MuiLinearProgress-colorSecondary-3"
                    role="progressbar"
                    style={
                      Object {
                        "opacity": 0,
                        "willChange": "opacity",
                      }
                    }
                  >
                    <div
                      className="MuiLinearProgress-bar-9 MuiLinearProgress-barColorSecondary-11 MuiLinearProgress-bar1Indeterminate-12"
                      style={Object {}}
                    />
                    <div
                      className="MuiLinearProgress-bar-9 MuiLinearProgress-barColorSecondary-11 MuiLinearProgress-bar2Indeterminate-15"
                      style={Object {}}
                    />
                  </div>
                </LinearProgress>
              </WithStyles(LinearProgress)>
            </Transition>
          </Fade>
        </WithTheme(Fade)>
        <InputsBlock
          control={false}
          onAddItem={[Function]}
          title="Main information"
        >
          <styled.div>
            <div
              className="sc-iwsKbI jlGPhA"
            >
              <styled.div>
                <div
                  className="sc-gZMcBi dSWEPn"
                >
                  <styled.h3>
                    <h3
                      className="sc-gqjmRU iXXjRT"
                    >
                      Main information
                    </h3>
                  </styled.h3>
                  <div />
                </div>
              </styled.div>
              <styled.div>
                <div
                  className="sc-VigVT eKfhmf"
                >
                  <Image
                    height={200}
                    src=""
                    width={300}
                  >
                    <styled.div
                      backgroundImage=""
                      height={200}
                      width={300}
                    >
                      <div
                        className="sc-dnqmqq cRhLsQ"
                        height={200}
                        width={300}
                      />
                    </styled.div>
                  </Image>
                  <LineExplanation
                    label="English"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          English:
                        </div>
                        <div />
                      </div>
                    </styled.div>
                  </LineExplanation>
                  <LineExplanation
                    label="Ukrainian"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          Ukrainian:
                        </div>
                        <div />
                      </div>
                    </styled.div>
                  </LineExplanation>
                  <LineExplanation
                    label="Transcription"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          Transcription:
                        </div>
                        <div>
                          [transcription]
                        </div>
                      </div>
                    </styled.div>
                  </LineExplanation>
                  <LineExplanation
                    label="Part of speech"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          Part of speech:
                        </div>
                        <div>
                          <ListOfSearchableWords
                            items={
                              Array [
                                "noun",
                              ]
                            }
                          >
                            <SearchableWord
                              delimiter={false}
                              key="994219f8-0a69-4c4c-893d-746ce654b06c"
                              word="noun"
                            >
                              <Styled(Component)
                                word="noun"
                              >
                                <Component
                                  className="sc-dxgOiQ ccClCr"
                                  word="noun"
                                >
                                  <Link
                                    replace={false}
                                    to="/search-words?query=noun"
                                  >
                                    <a
                                      href="/search-words?query=noun"
                                      onClick={[Function]}
                                    >
                                      noun
                                    </a>
                                  </Link>
                                </Component>
                              </Styled(Component)>
                            </SearchableWord>
                          </ListOfSearchableWords>
                        </div>
                      </div>
                    </styled.div>
                  </LineExplanation>
                  <LineExplanation
                    label="Synonyms"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          Synonyms:
                        </div>
                        <div>
                          <ListOfSearchableWords
                            items={
                              Array [
                                "day",
                              ]
                            }
                          >
                            <SearchableWord
                              delimiter={false}
                              key="ac7e4c22-f958-4bba-aeb0-f19e72bc1afb"
                              word="day"
                            >
                              <Styled(Component)
                                word="day"
                              >
                                <Component
                                  className="sc-dxgOiQ ccClCr"
                                  word="day"
                                >
                                  <Link
                                    replace={false}
                                    to="/search-words?query=day"
                                  >
                                    <a
                                      href="/search-words?query=day"
                                      onClick={[Function]}
                                    >
                                      day
                                    </a>
                                  </Link>
                                </Component>
                              </Styled(Component)>
                            </SearchableWord>
                          </ListOfSearchableWords>
                        </div>
                      </div>
                    </styled.div>
                  </LineExplanation>
                  <LineExplanation
                    label="Antonyms"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          Antonyms:
                        </div>
                        <div>
                          <ListOfSearchableWords
                            items={Array []}
                          />
                        </div>
                      </div>
                    </styled.div>
                  </LineExplanation>
                  <LineExplanation
                    label="Similar to"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          Similar to:
                        </div>
                        <div>
                          <ListOfSearchableWords
                            items={Array []}
                          />
                        </div>
                      </div>
                    </styled.div>
                  </LineExplanation>
                </div>
              </styled.div>
            </div>
          </styled.div>
        </InputsBlock>
        <InputsBlock
          control={false}
          onAddItem={[Function]}
          title="Examples"
        >
          <styled.div>
            <div
              className="sc-iwsKbI jlGPhA"
            >
              <styled.div>
                <div
                  className="sc-gZMcBi dSWEPn"
                >
                  <styled.h3>
                    <h3
                      className="sc-gqjmRU iXXjRT"
                    >
                      Examples
                    </h3>
                  </styled.h3>
                  <div />
                </div>
              </styled.div>
              <styled.div>
                <div
                  className="sc-VigVT eKfhmf"
                >
                  <LineExplanation
                    key="8"
                    label={null}
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM itznSm"
                      >
                        <div>
                          example
                        </div>
                      </div>
                    </styled.div>
                  </LineExplanation>
                </div>
              </styled.div>
            </div>
          </styled.div>
        </InputsBlock>
      </div>
    </WordPreview>
  </Router>
</BrowserRouter>
`;
