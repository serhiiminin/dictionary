// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectWithOptions render with no options 1`] = `
<SelectWithOptions
  classes={Object {}}
  label={null}
  onChange={[Function]}
  options={Array []}
  value=""
>
  <SelectBlock
    label={null}
    onChange={[Function]}
    value=""
  >
    <WithStyles(FormControl)
      color="primary"
    >
      <FormControl
        classes={
          Object {
            "fullWidth": "MuiFormControl-fullWidth-4",
            "marginDense": "MuiFormControl-marginDense-3",
            "marginNormal": "MuiFormControl-marginNormal-2",
            "root": "MuiFormControl-root-1",
          }
        }
        color="primary"
        component="div"
        disabled={false}
        error={false}
        fullWidth={false}
        margin="none"
        required={false}
      >
        <div
          className="MuiFormControl-root-1"
          color="primary"
        >
          <WithStyles(Select)
            onChange={[Function]}
            value=""
          >
            <Select
              IconComponent={[Function]}
              autoWidth={false}
              classes={
                Object {
                  "disabled": "MuiSelect-disabled-8",
                  "icon": "MuiSelect-icon-9",
                  "root": "MuiSelect-root-5",
                  "select": "MuiSelect-select-6",
                  "selectMenu": "MuiSelect-selectMenu-7",
                }
              }
              displayEmpty={false}
              input={<WithStyles(Input) />}
              multiple={false}
              native={false}
              onChange={[Function]}
              value=""
            >
              <WithStyles(Input)
                inputComponent={[Function]}
                inputProps={
                  Object {
                    "IconComponent": [Function],
                    "MenuProps": undefined,
                    "SelectDisplayProps": undefined,
                    "autoWidth": false,
                    "children": <WithStyles(MenuItem)
                      disabled={true}
                      value=""
                    >
                      There are no appropriate options
                    </WithStyles(MenuItem)>,
                    "classes": Object {
                      "disabled": "MuiSelect-disabled-8",
                      "icon": "MuiSelect-icon-9",
                      "root": "MuiSelect-root-5",
                      "select": "MuiSelect-select-6",
                      "selectMenu": "MuiSelect-selectMenu-7",
                    },
                    "displayEmpty": false,
                    "multiple": false,
                    "onClose": undefined,
                    "onOpen": undefined,
                    "open": undefined,
                    "renderValue": undefined,
                    "type": undefined,
                  }
                }
                onChange={[Function]}
                value=""
              >
                <Input
                  classes={
                    Object {
                      "disabled": "MuiInput-disabled-13",
                      "error": "MuiInput-error-15",
                      "focused": "MuiInput-focused-12",
                      "formControl": "MuiInput-formControl-11",
                      "fullWidth": "MuiInput-fullWidth-17",
                      "input": "MuiInput-input-18",
                      "inputMarginDense": "MuiInput-inputMarginDense-19",
                      "inputMultiline": "MuiInput-inputMultiline-20",
                      "inputType": "MuiInput-inputType-21",
                      "inputTypeSearch": "MuiInput-inputTypeSearch-22",
                      "multiline": "MuiInput-multiline-16",
                      "root": "MuiInput-root-10",
                      "underline": "MuiInput-underline-14",
                    }
                  }
                  disableUnderline={false}
                  fullWidth={false}
                  inputComponent={[Function]}
                  inputProps={
                    Object {
                      "IconComponent": [Function],
                      "MenuProps": undefined,
                      "SelectDisplayProps": undefined,
                      "autoWidth": false,
                      "children": <WithStyles(MenuItem)
                        disabled={true}
                        value=""
                      >
                        There are no appropriate options
                      </WithStyles(MenuItem)>,
                      "classes": Object {
                        "disabled": "MuiSelect-disabled-8",
                        "icon": "MuiSelect-icon-9",
                        "root": "MuiSelect-root-5",
                        "select": "MuiSelect-select-6",
                        "selectMenu": "MuiSelect-selectMenu-7",
                      },
                      "displayEmpty": false,
                      "multiple": false,
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": undefined,
                      "type": undefined,
                    }
                  }
                  multiline={false}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <div
                    className="MuiInput-root-10 MuiInput-formControl-11 MuiInput-underline-14"
                  >
                    <SelectInput
                      IconComponent={[Function]}
                      aria-invalid={false}
                      autoWidth={false}
                      className="MuiInput-input-18"
                      classes={
                        Object {
                          "disabled": "MuiSelect-disabled-8",
                          "icon": "MuiSelect-icon-9",
                          "root": "MuiSelect-root-5",
                          "select": "MuiSelect-select-6",
                          "selectMenu": "MuiSelect-selectMenu-7",
                        }
                      }
                      disabled={false}
                      displayEmpty={false}
                      inputRef={[Function]}
                      multiple={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      value=""
                    >
                      <div
                        className="MuiSelect-root-5"
                      >
                        <div
                          aria-haspopup="true"
                          aria-owns={null}
                          aria-pressed="false"
                          className="MuiSelect-select-6 MuiSelect-selectMenu-7 MuiInput-input-18"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <span
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "&#8203;",
                              }
                            }
                          />
                        </div>
                        <input
                          type="hidden"
                          value=""
                        />
                        <pure(ArrowDropDown)
                          className="MuiSelect-icon-9"
                        >
                          <ArrowDropDown
                            className="MuiSelect-icon-9"
                          >
                            <WithStyles(SvgIcon)
                              className="MuiSelect-icon-9"
                            >
                              <SvgIcon
                                className="MuiSelect-icon-9"
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction-26",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled-28",
                                    "colorError": "MuiSvgIcon-colorError-27",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary-24",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary-25",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-29",
                                    "root": "MuiSvgIcon-root-23",
                                  }
                                }
                                color="inherit"
                                component="svg"
                                fontSize="default"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-23 MuiSelect-icon-9"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </SvgIcon>
                            </WithStyles(SvgIcon)>
                          </ArrowDropDown>
                        </pure(ArrowDropDown)>
                        <WithStyles(Menu)
                          MenuListProps={
                            Object {
                              "role": "listbox",
                            }
                          }
                          PaperProps={
                            Object {
                              "style": Object {
                                "minWidth": null,
                              },
                            }
                          }
                          anchorEl={null}
                          id="menu-"
                          onClose={[Function]}
                          open={false}
                        >
                          <Menu
                            MenuListProps={
                              Object {
                                "role": "listbox",
                              }
                            }
                            PaperProps={
                              Object {
                                "style": Object {
                                  "minWidth": null,
                                },
                              }
                            }
                            anchorEl={null}
                            classes={
                              Object {
                                "paper": "MuiMenu-paper-30",
                              }
                            }
                            disableAutoFocusItem={false}
                            id="menu-"
                            onClose={[Function]}
                            open={false}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                  "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                  "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                  "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                  "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                  "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                  "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                  "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                  "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                  "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                  "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                  "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                  "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                  "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                  "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                  "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                  "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                  "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                  "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                  "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                  "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                  "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                  "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                  "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": Object {
                                  "unit": 8,
                                },
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.46429em",
                                  },
                                  "body2": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.71429em",
                                  },
                                  "button": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.375em",
                                  },
                                  "display1": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.20588em",
                                  },
                                  "display2": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.8125rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.13333em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display3": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "-.02em",
                                    "lineHeight": "1.30357em",
                                    "marginLeft": "-.02em",
                                  },
                                  "display4": Object {
                                    "color": "rgba(0, 0, 0, 0.54)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "7rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-.04em",
                                    "lineHeight": "1.14286em",
                                    "marginLeft": "-.04em",
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "headline": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.35417em",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subheading": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "lineHeight": "1.5em",
                                  },
                                  "title": Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.3125rem",
                                    "fontWeight": 500,
                                    "lineHeight": "1.16667em",
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            transitionDuration="auto"
                          >
                            <WithStyles(Popover)
                              PaperProps={
                                Object {
                                  "classes": Object {
                                    "root": "MuiMenu-paper-30",
                                  },
                                  "style": Object {
                                    "minWidth": null,
                                  },
                                }
                              }
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              getContentAnchorEl={[Function]}
                              id="menu-"
                              onClose={[Function]}
                              onEnter={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "left",
                                  "vertical": "top",
                                }
                              }
                              transitionDuration="auto"
                            >
                              <Popover
                                PaperProps={
                                  Object {
                                    "classes": Object {
                                      "root": "MuiMenu-paper-30",
                                    },
                                    "style": Object {
                                      "minWidth": null,
                                    },
                                  }
                                }
                                TransitionComponent={[Function]}
                                anchorEl={null}
                                anchorOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                anchorReference="anchorEl"
                                classes={
                                  Object {
                                    "paper": "MuiPopover-paper-31",
                                  }
                                }
                                elevation={8}
                                getContentAnchorEl={[Function]}
                                id="menu-"
                                marginThreshold={16}
                                onClose={[Function]}
                                onEnter={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                transitionDuration="auto"
                              >
                                <WithStyles(Modal)
                                  BackdropProps={
                                    Object {
                                      "invisible": true,
                                    }
                                  }
                                  id="menu-"
                                  onClose={[Function]}
                                  open={false}
                                >
                                  <Modal
                                    BackdropComponent={[Function]}
                                    BackdropProps={
                                      Object {
                                        "invisible": true,
                                      }
                                    }
                                    classes={
                                      Object {
                                        "hidden": "MuiModal-hidden-33",
                                        "root": "MuiModal-root-32",
                                      }
                                    }
                                    disableAutoFocus={false}
                                    disableBackdropClick={false}
                                    disableEnforceFocus={false}
                                    disableEscapeKeyDown={false}
                                    disablePortal={false}
                                    disableRestoreFocus={false}
                                    hideBackdrop={false}
                                    id="menu-"
                                    keepMounted={false}
                                    manager={
                                      ModalManager {
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "modals": Array [],
                                      }
                                    }
                                    onClose={[Function]}
                                    open={false}
                                  />
                                </WithStyles(Modal)>
                              </Popover>
                            </WithStyles(Popover)>
                          </Menu>
                        </WithStyles(Menu)>
                      </div>
                    </SelectInput>
                  </div>
                </Input>
              </WithStyles(Input)>
            </Select>
          </WithStyles(Select)>
        </div>
      </FormControl>
    </WithStyles(FormControl)>
  </SelectBlock>
</SelectWithOptions>
`;
