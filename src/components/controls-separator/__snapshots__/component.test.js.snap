// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Controls separator align right 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ControlsSeparator
    align="right"
>
    <button
        type="button"
    >
        anything
    </button>
    <button
        type="button"
    >
        everything
    </button>
</ControlsSeparator>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "right",
      "children": Array [
        <button
          type="button"
>
          anything
</button>,
        <button
          type="button"
>
          everything
</button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "anything",
          "type": "button",
        },
        "ref": null,
        "rendered": "anything",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "everything",
          "type": "button",
        },
        "ref": null,
        "rendered": "everything",
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  display: grid;
  align-content: center;
  grid-auto-flow: column;
  padding: ",
          [Function],
          " 0;
  justify-content: ",
          [Function],
          ";
  column-gap: 0.5rem;
  row-gap: 0.5rem;
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "right",
        "children": Array [
          <button
            type="button"
>
            anything
</button>,
          <button
            type="button"
>
            everything
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "anything",
            "type": "button",
          },
          "ref": null,
          "rendered": "anything",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "everything",
            "type": "button",
          },
          "ref": null,
          "rendered": "everything",
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
  display: grid;
  align-content: center;
  grid-auto-flow: column;
  padding: ",
            [Function],
            " 0;
  justify-content: ",
            [Function],
            ";
  column-gap: 0.5rem;
  row-gap: 0.5rem;
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Controls separator render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ControlsSeparator
    align="left"
>
    <button
        type="button"
    >
        anything
    </button>
    <button
        type="button"
    >
        everything
    </button>
</ControlsSeparator>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "left",
      "children": Array [
        <button
          type="button"
>
          anything
</button>,
        <button
          type="button"
>
          everything
</button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "anything",
          "type": "button",
        },
        "ref": null,
        "rendered": "anything",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "everything",
          "type": "button",
        },
        "ref": null,
        "rendered": "everything",
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  display: grid;
  align-content: center;
  grid-auto-flow: column;
  padding: ",
          [Function],
          " 0;
  justify-content: ",
          [Function],
          ";
  column-gap: 0.5rem;
  row-gap: 0.5rem;
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "left",
        "children": Array [
          <button
            type="button"
>
            anything
</button>,
          <button
            type="button"
>
            everything
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "anything",
            "type": "button",
          },
          "ref": null,
          "rendered": "anything",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "everything",
            "type": "button",
          },
          "ref": null,
          "rendered": "everything",
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
  display: grid;
  align-content: center;
  grid-auto-flow: column;
  padding: ",
            [Function],
            " 0;
  justify-content: ",
            [Function],
            ";
  column-gap: 0.5rem;
  row-gap: 0.5rem;
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
