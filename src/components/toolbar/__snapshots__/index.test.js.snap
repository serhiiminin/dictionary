// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toolbar components ToolbarButtonsWrapper 1`] = `
<div
  className="sc-eHgmQL inuoyV"
>
  anything
</div>
`;

exports[`Toolbar render 1`] = `
<Toolbar
  checkAllControl={null}
  isAnyChecked={false}
  onChangeSortBy={[Function]}
  onChangeSortDirection={[Function]}
  sortBy="dateCreated"
  sortDirection="ascend"
>
  <WithStyles(List)>
    <List
      classes={
        Object {
          "dense": "MuiList-dense-3",
          "padding": "MuiList-padding-2",
          "root": "MuiList-root-1",
          "subheader": "MuiList-subheader-4",
        }
      }
      component="ul"
      dense={false}
      disablePadding={false}
    >
      <ul
        className="MuiList-root-1 MuiList-padding-2"
      >
        <WithStyles(ListItem)
          divider={true}
        >
          <ListItem
            ContainerComponent="li"
            button={false}
            classes={
              Object {
                "button": "MuiListItem-button-13",
                "container": "MuiListItem-container-6",
                "default": "MuiListItem-default-8",
                "dense": "MuiListItem-dense-9",
                "disabled": "MuiListItem-disabled-10",
                "divider": "MuiListItem-divider-11",
                "focusVisible": "MuiListItem-focusVisible-7",
                "gutters": "MuiListItem-gutters-12",
                "root": "MuiListItem-root-5",
                "secondaryAction": "MuiListItem-secondaryAction-14",
              }
            }
            dense={false}
            disableGutters={false}
            disabled={false}
            divider={true}
          >
            <li
              className="MuiListItem-root-5 MuiListItem-default-8 MuiListItem-gutters-12 MuiListItem-divider-11"
              disabled={false}
            >
              <div
                key=".0"
              />
              <styled.div
                key=".1"
              >
                <div
                  className="sc-eHgmQL inuoyV"
                >
                  <Styled(Component)
                    classes={Object {}}
                    color="primary"
                    isActive={false}
                    mini={true}
                    onClick={[Function]}
                    title="Sort direction"
                    variant="contained"
                  >
                    <Component
                      className="sc-bwzfXH fTMPew"
                      classes={Object {}}
                      color="primary"
                      isActive={false}
                      mini={true}
                      onClick={[Function]}
                      title="Sort direction"
                      variant="contained"
                    >
                      <WithStyles(Button)
                        className="sc-bwzfXH fTMPew"
                        classes={Object {}}
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        title="Sort direction"
                        variant="contained"
                      >
                        <Button
                          className="sc-bwzfXH fTMPew"
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit-36",
                              "contained": "MuiButton-contained-26",
                              "containedPrimary": "MuiButton-containedPrimary-27",
                              "containedSecondary": "MuiButton-containedSecondary-28",
                              "disabled": "MuiButton-disabled-35",
                              "extendedFab": "MuiButton-extendedFab-33",
                              "fab": "MuiButton-fab-32",
                              "flat": "MuiButton-flat-20",
                              "flatPrimary": "MuiButton-flatPrimary-21",
                              "flatSecondary": "MuiButton-flatSecondary-22",
                              "focusVisible": "MuiButton-focusVisible-34",
                              "fullWidth": "MuiButton-fullWidth-40",
                              "label": "MuiButton-label-16",
                              "mini": "MuiButton-mini-37",
                              "outlined": "MuiButton-outlined-23",
                              "outlinedPrimary": "MuiButton-outlinedPrimary-24",
                              "outlinedSecondary": "MuiButton-outlinedSecondary-25",
                              "raised": "MuiButton-raised-29",
                              "raisedPrimary": "MuiButton-raisedPrimary-30",
                              "raisedSecondary": "MuiButton-raisedSecondary-31",
                              "root": "MuiButton-root-15",
                              "sizeLarge": "MuiButton-sizeLarge-39",
                              "sizeSmall": "MuiButton-sizeSmall-38",
                              "text": "MuiButton-text-17",
                              "textPrimary": "MuiButton-textPrimary-18",
                              "textSecondary": "MuiButton-textSecondary-19",
                            }
                          }
                          color="primary"
                          component="button"
                          disableFocusRipple={false}
                          disabled={false}
                          fullWidth={false}
                          mini={true}
                          onClick={[Function]}
                          size="medium"
                          title="Sort direction"
                          type="button"
                          variant="contained"
                        >
                          <WithStyles(ButtonBase)
                            className="MuiButton-root-15 MuiButton-contained-26 MuiButton-containedPrimary-27 MuiButton-raised-29 MuiButton-raisedPrimary-30 sc-bwzfXH fTMPew"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-34"
                            onClick={[Function]}
                            title="Sort direction"
                            type="button"
                          >
                            <ButtonBase
                              centerRipple={false}
                              className="MuiButton-root-15 MuiButton-contained-26 MuiButton-containedPrimary-27 MuiButton-raised-29 MuiButton-raisedPrimary-30 sc-bwzfXH fTMPew"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-42",
                                  "focusVisible": "MuiButtonBase-focusVisible-43",
                                  "root": "MuiButtonBase-root-41",
                                }
                              }
                              component="button"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-34"
                              onClick={[Function]}
                              tabIndex="0"
                              title="Sort direction"
                              type="button"
                            >
                              <button
                                className="MuiButtonBase-root-41 MuiButton-root-15 MuiButton-contained-26 MuiButton-containedPrimary-27 MuiButton-raised-29 MuiButton-raisedPrimary-30 sc-bwzfXH fTMPew"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex="0"
                                title="Sort direction"
                                type="button"
                              >
                                <span
                                  className="MuiButton-label-16"
                                >
                                  <pure(KeyboardArrowUp)>
                                    <KeyboardArrowUp>
                                      <WithStyles(SvgIcon)>
                                        <SvgIcon
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-47",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-49",
                                              "colorError": "MuiSvgIcon-colorError-48",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-45",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-46",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-50",
                                              "root": "MuiSvgIcon-root-44",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-44"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"
                                            />
                                            <path
                                              d="M0 0h24v24H0z"
                                              fill="none"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </KeyboardArrowUp>
                                  </pure(KeyboardArrowUp)>
                                </span>
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-55",
                                        "childLeaving": "MuiTouchRipple-childLeaving-56",
                                        "childPulsate": "MuiTouchRipple-childPulsate-57",
                                        "ripple": "MuiTouchRipple-ripple-52",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-54",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-53",
                                        "root": "MuiTouchRipple-root-51",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-51"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-51"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </button>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </Button>
                      </WithStyles(Button)>
                    </Component>
                  </Styled(Component)>
                  <div>
                    <SelectWithOptions
                      label="Sort by"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "key": "en",
                            "title": "English",
                          },
                          Object {
                            "key": "ua",
                            "title": "Ukrainian",
                          },
                          Object {
                            "key": "dateCreated",
                            "title": "Was added",
                          },
                          Object {
                            "key": "timesLearnt",
                            "title": "Was learnt times",
                          },
                          Object {
                            "key": "dateLastLearnt",
                            "title": "Was learnt last time",
                          },
                        ]
                      }
                      value="dateCreated"
                    >
                      <Styled(Component)
                        label="Sort by"
                        onChange={[Function]}
                        value="dateCreated"
                      >
                        <Component
                          className="sc-ckVGcZ bdHgxt"
                          label="Sort by"
                          onChange={[Function]}
                          value="dateCreated"
                        >
                          <SelectBlock
                            className="sc-ckVGcZ bdHgxt"
                            label="Sort by"
                            onChange={[Function]}
                            value="dateCreated"
                          >
                            <WithStyles(FormControl)
                              color="primary"
                            >
                              <FormControl
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth-61",
                                    "marginDense": "MuiFormControl-marginDense-60",
                                    "marginNormal": "MuiFormControl-marginNormal-59",
                                    "root": "MuiFormControl-root-58",
                                  }
                                }
                                color="primary"
                                component="div"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                margin="none"
                                required={false}
                              >
                                <div
                                  className="MuiFormControl-root-58"
                                  color="primary"
                                >
                                  <WithStyles(InputLabel)
                                    htmlFor="Sort by"
                                  >
                                    <InputLabel
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated-66",
                                          "formControl": "MuiInputLabel-formControl-63",
                                          "marginDense": "MuiInputLabel-marginDense-64",
                                          "root": "MuiInputLabel-root-62",
                                          "shrink": "MuiInputLabel-shrink-65",
                                        }
                                      }
                                      disableAnimation={false}
                                      htmlFor="Sort by"
                                    >
                                      <WithStyles(FormLabel)
                                        className="MuiInputLabel-root-62 MuiInputLabel-formControl-63 MuiInputLabel-animated-66 MuiInputLabel-shrink-65"
                                        data-shrink={true}
                                        htmlFor="Sort by"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-62 MuiInputLabel-formControl-63 MuiInputLabel-animated-66 MuiInputLabel-shrink-65"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-73",
                                              "disabled": "MuiFormLabel-disabled-69",
                                              "error": "MuiFormLabel-error-70",
                                              "filled": "MuiFormLabel-filled-71",
                                              "focused": "MuiFormLabel-focused-68",
                                              "required": "MuiFormLabel-required-72",
                                              "root": "MuiFormLabel-root-67",
                                            }
                                          }
                                          component="label"
                                          data-shrink={true}
                                          htmlFor="Sort by"
                                        >
                                          <label
                                            className="MuiFormLabel-root-67 MuiFormLabel-filled-71 MuiInputLabel-root-62 MuiInputLabel-formControl-63 MuiInputLabel-animated-66 MuiInputLabel-shrink-65"
                                            data-shrink={true}
                                            htmlFor="Sort by"
                                          >
                                            Sort by
                                          </label>
                                        </FormLabel>
                                      </WithStyles(FormLabel)>
                                    </InputLabel>
                                  </WithStyles(InputLabel)>
                                  <WithStyles(Select)
                                    className="sc-ckVGcZ bdHgxt"
                                    onChange={[Function]}
                                    value="dateCreated"
                                  >
                                    <Select
                                      IconComponent={[Function]}
                                      autoWidth={false}
                                      className="sc-ckVGcZ bdHgxt"
                                      classes={
                                        Object {
                                          "disabled": "MuiSelect-disabled-77",
                                          "icon": "MuiSelect-icon-78",
                                          "root": "MuiSelect-root-74",
                                          "select": "MuiSelect-select-75",
                                          "selectMenu": "MuiSelect-selectMenu-76",
                                        }
                                      }
                                      displayEmpty={false}
                                      input={<WithStyles(Input) />}
                                      multiple={false}
                                      native={false}
                                      onChange={[Function]}
                                      value="dateCreated"
                                    >
                                      <WithStyles(Input)
                                        className="sc-ckVGcZ bdHgxt"
                                        inputComponent={[Function]}
                                        inputProps={
                                          Object {
                                            "IconComponent": [Function],
                                            "MenuProps": undefined,
                                            "SelectDisplayProps": undefined,
                                            "autoWidth": false,
                                            "children": Array [
                                              <WithStyles(MenuItem)
                                                value="en"
                                              >
                                                English
                                              </WithStyles(MenuItem)>,
                                              <WithStyles(MenuItem)
                                                value="ua"
                                              >
                                                Ukrainian
                                              </WithStyles(MenuItem)>,
                                              <WithStyles(MenuItem)
                                                value="dateCreated"
                                              >
                                                Was added
                                              </WithStyles(MenuItem)>,
                                              <WithStyles(MenuItem)
                                                value="timesLearnt"
                                              >
                                                Was learnt times
                                              </WithStyles(MenuItem)>,
                                              <WithStyles(MenuItem)
                                                value="dateLastLearnt"
                                              >
                                                Was learnt last time
                                              </WithStyles(MenuItem)>,
                                            ],
                                            "classes": Object {
                                              "disabled": "MuiSelect-disabled-77",
                                              "icon": "MuiSelect-icon-78",
                                              "root": "MuiSelect-root-74",
                                              "select": "MuiSelect-select-75",
                                              "selectMenu": "MuiSelect-selectMenu-76",
                                            },
                                            "displayEmpty": false,
                                            "multiple": false,
                                            "onClose": undefined,
                                            "onOpen": undefined,
                                            "open": undefined,
                                            "renderValue": undefined,
                                            "type": undefined,
                                          }
                                        }
                                        onChange={[Function]}
                                        value="dateCreated"
                                      >
                                        <Input
                                          className="sc-ckVGcZ bdHgxt"
                                          classes={
                                            Object {
                                              "disabled": "MuiInput-disabled-82",
                                              "error": "MuiInput-error-84",
                                              "focused": "MuiInput-focused-81",
                                              "formControl": "MuiInput-formControl-80",
                                              "fullWidth": "MuiInput-fullWidth-86",
                                              "input": "MuiInput-input-87",
                                              "inputMarginDense": "MuiInput-inputMarginDense-88",
                                              "inputMultiline": "MuiInput-inputMultiline-89",
                                              "inputType": "MuiInput-inputType-90",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch-91",
                                              "multiline": "MuiInput-multiline-85",
                                              "root": "MuiInput-root-79",
                                              "underline": "MuiInput-underline-83",
                                            }
                                          }
                                          disableUnderline={false}
                                          fullWidth={false}
                                          inputComponent={[Function]}
                                          inputProps={
                                            Object {
                                              "IconComponent": [Function],
                                              "MenuProps": undefined,
                                              "SelectDisplayProps": undefined,
                                              "autoWidth": false,
                                              "children": Array [
                                                <WithStyles(MenuItem)
                                                  value="en"
                                                >
                                                  English
                                                </WithStyles(MenuItem)>,
                                                <WithStyles(MenuItem)
                                                  value="ua"
                                                >
                                                  Ukrainian
                                                </WithStyles(MenuItem)>,
                                                <WithStyles(MenuItem)
                                                  value="dateCreated"
                                                >
                                                  Was added
                                                </WithStyles(MenuItem)>,
                                                <WithStyles(MenuItem)
                                                  value="timesLearnt"
                                                >
                                                  Was learnt times
                                                </WithStyles(MenuItem)>,
                                                <WithStyles(MenuItem)
                                                  value="dateLastLearnt"
                                                >
                                                  Was learnt last time
                                                </WithStyles(MenuItem)>,
                                              ],
                                              "classes": Object {
                                                "disabled": "MuiSelect-disabled-77",
                                                "icon": "MuiSelect-icon-78",
                                                "root": "MuiSelect-root-74",
                                                "select": "MuiSelect-select-75",
                                                "selectMenu": "MuiSelect-selectMenu-76",
                                              },
                                              "displayEmpty": false,
                                              "multiple": false,
                                              "onClose": undefined,
                                              "onOpen": undefined,
                                              "open": undefined,
                                              "renderValue": undefined,
                                              "type": undefined,
                                            }
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="dateCreated"
                                        >
                                          <div
                                            className="MuiInput-root-79 MuiInput-formControl-80 MuiInput-underline-83 sc-ckVGcZ bdHgxt"
                                          >
                                            <SelectInput
                                              IconComponent={[Function]}
                                              aria-invalid={false}
                                              autoWidth={false}
                                              className="MuiInput-input-87"
                                              classes={
                                                Object {
                                                  "disabled": "MuiSelect-disabled-77",
                                                  "icon": "MuiSelect-icon-78",
                                                  "root": "MuiSelect-root-74",
                                                  "select": "MuiSelect-select-75",
                                                  "selectMenu": "MuiSelect-selectMenu-76",
                                                }
                                              }
                                              disabled={false}
                                              displayEmpty={false}
                                              inputRef={[Function]}
                                              multiple={false}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              value="dateCreated"
                                            >
                                              <div
                                                className="MuiSelect-root-74"
                                              >
                                                <div
                                                  aria-haspopup="true"
                                                  aria-owns={null}
                                                  aria-pressed="false"
                                                  className="MuiSelect-select-75 MuiSelect-selectMenu-76 MuiInput-input-87"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  Was added
                                                </div>
                                                <input
                                                  type="hidden"
                                                  value="dateCreated"
                                                />
                                                <pure(ArrowDropDown)
                                                  className="MuiSelect-icon-78"
                                                >
                                                  <ArrowDropDown
                                                    className="MuiSelect-icon-78"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiSelect-icon-78"
                                                    >
                                                      <SvgIcon
                                                        className="MuiSelect-icon-78"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction-47",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-49",
                                                            "colorError": "MuiSvgIcon-colorError-48",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-45",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary-46",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-50",
                                                            "root": "MuiSvgIcon-root-44",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="svg"
                                                        fontSize="default"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-44 MuiSelect-icon-78"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </ArrowDropDown>
                                                </pure(ArrowDropDown)>
                                                <WithStyles(Menu)
                                                  MenuListProps={
                                                    Object {
                                                      "role": "listbox",
                                                    }
                                                  }
                                                  PaperProps={
                                                    Object {
                                                      "style": Object {
                                                        "minWidth": null,
                                                      },
                                                    }
                                                  }
                                                  anchorEl={null}
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  open={false}
                                                >
                                                  <Menu
                                                    MenuListProps={
                                                      Object {
                                                        "role": "listbox",
                                                      }
                                                    }
                                                    PaperProps={
                                                      Object {
                                                        "style": Object {
                                                          "minWidth": null,
                                                        },
                                                      }
                                                    }
                                                    anchorEl={null}
                                                    classes={
                                                      Object {
                                                        "paper": "MuiMenu-paper-92",
                                                      }
                                                    }
                                                    disableAutoFocusItem={false}
                                                    id="menu-"
                                                    onClose={[Function]}
                                                    open={false}
                                                    theme={
                                                      Object {
                                                        "breakpoints": Object {
                                                          "between": [Function],
                                                          "down": [Function],
                                                          "keys": Array [
                                                            "xs",
                                                            "sm",
                                                            "md",
                                                            "lg",
                                                            "xl",
                                                          ],
                                                          "only": [Function],
                                                          "up": [Function],
                                                          "values": Object {
                                                            "lg": 1280,
                                                            "md": 960,
                                                            "sm": 600,
                                                            "xl": 1920,
                                                            "xs": 0,
                                                          },
                                                          "width": [Function],
                                                        },
                                                        "direction": "ltr",
                                                        "mixins": Object {
                                                          "gutters": [Function],
                                                          "toolbar": Object {
                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                              "minHeight": 48,
                                                            },
                                                            "@media (min-width:600px)": Object {
                                                              "minHeight": 64,
                                                            },
                                                            "minHeight": 56,
                                                          },
                                                        },
                                                        "overrides": Object {},
                                                        "palette": Object {
                                                          "action": Object {
                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                            "hover": "rgba(0, 0, 0, 0.08)",
                                                            "hoverOpacity": 0.08,
                                                            "selected": "rgba(0, 0, 0, 0.14)",
                                                          },
                                                          "augmentColor": [Function],
                                                          "background": Object {
                                                            "default": "#fafafa",
                                                            "paper": "#fff",
                                                          },
                                                          "common": Object {
                                                            "black": "#000",
                                                            "white": "#fff",
                                                          },
                                                          "contrastThreshold": 3,
                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                          "error": Object {
                                                            "contrastText": "#fff",
                                                            "dark": "#d32f2f",
                                                            "light": "#e57373",
                                                            "main": "#f44336",
                                                          },
                                                          "getContrastText": [Function],
                                                          "grey": Object {
                                                            "100": "#f5f5f5",
                                                            "200": "#eeeeee",
                                                            "300": "#e0e0e0",
                                                            "400": "#bdbdbd",
                                                            "50": "#fafafa",
                                                            "500": "#9e9e9e",
                                                            "600": "#757575",
                                                            "700": "#616161",
                                                            "800": "#424242",
                                                            "900": "#212121",
                                                            "A100": "#d5d5d5",
                                                            "A200": "#aaaaaa",
                                                            "A400": "#303030",
                                                            "A700": "#616161",
                                                          },
                                                          "primary": Object {
                                                            "contrastText": "#fff",
                                                            "dark": "#303f9f",
                                                            "light": "#7986cb",
                                                            "main": "#3f51b5",
                                                          },
                                                          "secondary": Object {
                                                            "contrastText": "#fff",
                                                            "dark": "#c51162",
                                                            "light": "#ff4081",
                                                            "main": "#f50057",
                                                          },
                                                          "text": Object {
                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                          },
                                                          "tonalOffset": 0.2,
                                                          "type": "light",
                                                        },
                                                        "props": Object {},
                                                        "shadows": Array [
                                                          "none",
                                                          "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                                          "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                                          "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                                          "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                                          "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                                          "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                                          "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                                          "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                                          "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                                          "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                                          "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                                          "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                                          "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                                          "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                                          "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                                          "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                                          "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                                          "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                                          "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                                          "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                                          "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                                          "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                                          "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                                          "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                                        ],
                                                        "shape": Object {
                                                          "borderRadius": 4,
                                                        },
                                                        "spacing": Object {
                                                          "unit": 8,
                                                        },
                                                        "transitions": Object {
                                                          "create": [Function],
                                                          "duration": Object {
                                                            "complex": 375,
                                                            "enteringScreen": 225,
                                                            "leavingScreen": 195,
                                                            "short": 250,
                                                            "shorter": 200,
                                                            "shortest": 150,
                                                            "standard": 300,
                                                          },
                                                          "easing": Object {
                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                          },
                                                          "getAutoHeightDuration": [Function],
                                                        },
                                                        "typography": Object {
                                                          "body1": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.46429em",
                                                          },
                                                          "body2": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 500,
                                                            "lineHeight": "1.71429em",
                                                          },
                                                          "button": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.875rem",
                                                            "fontWeight": 500,
                                                            "textTransform": "uppercase",
                                                          },
                                                          "caption": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "0.75rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.375em",
                                                          },
                                                          "display1": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "2.125rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.20588em",
                                                          },
                                                          "display2": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "2.8125rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.13333em",
                                                            "marginLeft": "-.02em",
                                                          },
                                                          "display3": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "3.5rem",
                                                            "fontWeight": 400,
                                                            "letterSpacing": "-.02em",
                                                            "lineHeight": "1.30357em",
                                                            "marginLeft": "-.02em",
                                                          },
                                                          "display4": Object {
                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "7rem",
                                                            "fontWeight": 300,
                                                            "letterSpacing": "-.04em",
                                                            "lineHeight": "1.14286em",
                                                            "marginLeft": "-.04em",
                                                          },
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": 14,
                                                          "fontWeightLight": 300,
                                                          "fontWeightMedium": 500,
                                                          "fontWeightRegular": 400,
                                                          "headline": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1.5rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.35417em",
                                                          },
                                                          "pxToRem": [Function],
                                                          "round": [Function],
                                                          "subheading": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1rem",
                                                            "fontWeight": 400,
                                                            "lineHeight": "1.5em",
                                                          },
                                                          "title": Object {
                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": "1.3125rem",
                                                            "fontWeight": 500,
                                                            "lineHeight": "1.16667em",
                                                          },
                                                        },
                                                        "zIndex": Object {
                                                          "appBar": 1100,
                                                          "drawer": 1200,
                                                          "mobileStepper": 1000,
                                                          "modal": 1300,
                                                          "snackbar": 1400,
                                                          "tooltip": 1500,
                                                        },
                                                      }
                                                    }
                                                    transitionDuration="auto"
                                                  >
                                                    <WithStyles(Popover)
                                                      PaperProps={
                                                        Object {
                                                          "classes": Object {
                                                            "root": "MuiMenu-paper-92",
                                                          },
                                                          "style": Object {
                                                            "minWidth": null,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={null}
                                                      anchorOrigin={
                                                        Object {
                                                          "horizontal": "left",
                                                          "vertical": "top",
                                                        }
                                                      }
                                                      getContentAnchorEl={[Function]}
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      onEnter={[Function]}
                                                      open={false}
                                                      transformOrigin={
                                                        Object {
                                                          "horizontal": "left",
                                                          "vertical": "top",
                                                        }
                                                      }
                                                      transitionDuration="auto"
                                                    >
                                                      <Popover
                                                        PaperProps={
                                                          Object {
                                                            "classes": Object {
                                                              "root": "MuiMenu-paper-92",
                                                            },
                                                            "style": Object {
                                                              "minWidth": null,
                                                            },
                                                          }
                                                        }
                                                        TransitionComponent={[Function]}
                                                        anchorEl={null}
                                                        anchorOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        anchorReference="anchorEl"
                                                        classes={
                                                          Object {
                                                            "paper": "MuiPopover-paper-93",
                                                          }
                                                        }
                                                        elevation={8}
                                                        getContentAnchorEl={[Function]}
                                                        id="menu-"
                                                        marginThreshold={16}
                                                        onClose={[Function]}
                                                        onEnter={[Function]}
                                                        open={false}
                                                        transformOrigin={
                                                          Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                                        }
                                                        transitionDuration="auto"
                                                      >
                                                        <WithStyles(Modal)
                                                          BackdropProps={
                                                            Object {
                                                              "invisible": true,
                                                            }
                                                          }
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                        >
                                                          <Modal
                                                            BackdropComponent={[Function]}
                                                            BackdropProps={
                                                              Object {
                                                                "invisible": true,
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "hidden": "MuiModal-hidden-95",
                                                                "root": "MuiModal-root-94",
                                                              }
                                                            }
                                                            disableAutoFocus={false}
                                                            disableBackdropClick={false}
                                                            disableEnforceFocus={false}
                                                            disableEscapeKeyDown={false}
                                                            disablePortal={false}
                                                            disableRestoreFocus={false}
                                                            hideBackdrop={false}
                                                            id="menu-"
                                                            keepMounted={false}
                                                            manager={
                                                              ModalManager {
                                                                "containers": Array [],
                                                                "data": Array [],
                                                                "handleContainerOverflow": true,
                                                                "hideSiblingNodes": true,
                                                                "modals": Array [],
                                                              }
                                                            }
                                                            onClose={[Function]}
                                                            open={false}
                                                          />
                                                        </WithStyles(Modal)>
                                                      </Popover>
                                                    </WithStyles(Popover)>
                                                  </Menu>
                                                </WithStyles(Menu)>
                                              </div>
                                            </SelectInput>
                                          </div>
                                        </Input>
                                      </WithStyles(Input)>
                                    </Select>
                                  </WithStyles(Select)>
                                </div>
                              </FormControl>
                            </WithStyles(FormControl)>
                          </SelectBlock>
                        </Component>
                      </Styled(Component)>
                    </SelectWithOptions>
                  </div>
                </div>
              </styled.div>
            </li>
          </ListItem>
        </WithStyles(ListItem)>
      </ul>
    </List>
  </WithStyles(List)>
</Toolbar>
`;
