// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WordItemInList loading 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <WordItemInList
      isChecked={false}
      linkToWord=""
      loading={true}
      onWordCheck={[Function]}
      word={
        Object {
          "_id": "_id",
          "dateCreated": "2000-02-02",
          "dateLastLearnt": "2000-02-02",
          "en": "en",
          "transcription": "transcription",
          "uk": "uk",
        }
      }
    >
      <Styled(Component)
        alignItems="center"
        container={true}
        isChecked={false}
        isLoading={true}
        spacing={16}
      >
        <Component
          alignItems="center"
          className="sc-bdVaJa fJRvxM"
          container={true}
          isChecked={false}
          isLoading={true}
          spacing={16}
        >
          <WithStyles(Grid)
            alignItems="center"
            className="sc-bdVaJa fJRvxM"
            container={true}
            spacing={16}
          >
            <Grid
              alignContent="stretch"
              alignItems="center"
              className="sc-bdVaJa fJRvxM"
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                  "container": "MuiGrid-container-1",
                  "direction-xs-column": "MuiGrid-direction-xs-column-4",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                  "grid-lg-1": "MuiGrid-grid-lg-1-72",
                  "grid-lg-10": "MuiGrid-grid-lg-10-81",
                  "grid-lg-11": "MuiGrid-grid-lg-11-82",
                  "grid-lg-12": "MuiGrid-grid-lg-12-83",
                  "grid-lg-2": "MuiGrid-grid-lg-2-73",
                  "grid-lg-3": "MuiGrid-grid-lg-3-74",
                  "grid-lg-4": "MuiGrid-grid-lg-4-75",
                  "grid-lg-5": "MuiGrid-grid-lg-5-76",
                  "grid-lg-6": "MuiGrid-grid-lg-6-77",
                  "grid-lg-7": "MuiGrid-grid-lg-7-78",
                  "grid-lg-8": "MuiGrid-grid-lg-8-79",
                  "grid-lg-9": "MuiGrid-grid-lg-9-80",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                  "grid-lg-true": "MuiGrid-grid-lg-true-71",
                  "grid-md-1": "MuiGrid-grid-md-1-58",
                  "grid-md-10": "MuiGrid-grid-md-10-67",
                  "grid-md-11": "MuiGrid-grid-md-11-68",
                  "grid-md-12": "MuiGrid-grid-md-12-69",
                  "grid-md-2": "MuiGrid-grid-md-2-59",
                  "grid-md-3": "MuiGrid-grid-md-3-60",
                  "grid-md-4": "MuiGrid-grid-md-4-61",
                  "grid-md-5": "MuiGrid-grid-md-5-62",
                  "grid-md-6": "MuiGrid-grid-md-6-63",
                  "grid-md-7": "MuiGrid-grid-md-7-64",
                  "grid-md-8": "MuiGrid-grid-md-8-65",
                  "grid-md-9": "MuiGrid-grid-md-9-66",
                  "grid-md-auto": "MuiGrid-grid-md-auto-56",
                  "grid-md-true": "MuiGrid-grid-md-true-57",
                  "grid-sm-1": "MuiGrid-grid-sm-1-44",
                  "grid-sm-10": "MuiGrid-grid-sm-10-53",
                  "grid-sm-11": "MuiGrid-grid-sm-11-54",
                  "grid-sm-12": "MuiGrid-grid-sm-12-55",
                  "grid-sm-2": "MuiGrid-grid-sm-2-45",
                  "grid-sm-3": "MuiGrid-grid-sm-3-46",
                  "grid-sm-4": "MuiGrid-grid-sm-4-47",
                  "grid-sm-5": "MuiGrid-grid-sm-5-48",
                  "grid-sm-6": "MuiGrid-grid-sm-6-49",
                  "grid-sm-7": "MuiGrid-grid-sm-7-50",
                  "grid-sm-8": "MuiGrid-grid-sm-8-51",
                  "grid-sm-9": "MuiGrid-grid-sm-9-52",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                  "grid-sm-true": "MuiGrid-grid-sm-true-43",
                  "grid-xl-1": "MuiGrid-grid-xl-1-86",
                  "grid-xl-10": "MuiGrid-grid-xl-10-95",
                  "grid-xl-11": "MuiGrid-grid-xl-11-96",
                  "grid-xl-12": "MuiGrid-grid-xl-12-97",
                  "grid-xl-2": "MuiGrid-grid-xl-2-87",
                  "grid-xl-3": "MuiGrid-grid-xl-3-88",
                  "grid-xl-4": "MuiGrid-grid-xl-4-89",
                  "grid-xl-5": "MuiGrid-grid-xl-5-90",
                  "grid-xl-6": "MuiGrid-grid-xl-6-91",
                  "grid-xl-7": "MuiGrid-grid-xl-7-92",
                  "grid-xl-8": "MuiGrid-grid-xl-8-93",
                  "grid-xl-9": "MuiGrid-grid-xl-9-94",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                  "grid-xl-true": "MuiGrid-grid-xl-true-85",
                  "grid-xs-1": "MuiGrid-grid-xs-1-30",
                  "grid-xs-10": "MuiGrid-grid-xs-10-39",
                  "grid-xs-11": "MuiGrid-grid-xs-11-40",
                  "grid-xs-12": "MuiGrid-grid-xs-12-41",
                  "grid-xs-2": "MuiGrid-grid-xs-2-31",
                  "grid-xs-3": "MuiGrid-grid-xs-3-32",
                  "grid-xs-4": "MuiGrid-grid-xs-4-33",
                  "grid-xs-5": "MuiGrid-grid-xs-5-34",
                  "grid-xs-6": "MuiGrid-grid-xs-6-35",
                  "grid-xs-7": "MuiGrid-grid-xs-7-36",
                  "grid-xs-8": "MuiGrid-grid-xs-8-37",
                  "grid-xs-9": "MuiGrid-grid-xs-9-38",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                  "grid-xs-true": "MuiGrid-grid-xs-true-29",
                  "item": "MuiGrid-item-2",
                  "justify-xs-center": "MuiGrid-justify-xs-center-18",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                  "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                  "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                  "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                  "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                }
              }
              component="div"
              container={true}
              direction="row"
              item={false}
              justify="flex-start"
              lg={false}
              md={false}
              sm={false}
              spacing={16}
              wrap="wrap"
              xl={false}
              xs={false}
              zeroMinWidth={false}
            >
              <div
                className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-center-9 sc-bdVaJa fJRvxM"
              >
                <WithStyles(Grid)
                  item={true}
                  xs={1}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="stretch"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                        "container": "MuiGrid-container-1",
                        "direction-xs-column": "MuiGrid-direction-xs-column-4",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                        "grid-lg-1": "MuiGrid-grid-lg-1-72",
                        "grid-lg-10": "MuiGrid-grid-lg-10-81",
                        "grid-lg-11": "MuiGrid-grid-lg-11-82",
                        "grid-lg-12": "MuiGrid-grid-lg-12-83",
                        "grid-lg-2": "MuiGrid-grid-lg-2-73",
                        "grid-lg-3": "MuiGrid-grid-lg-3-74",
                        "grid-lg-4": "MuiGrid-grid-lg-4-75",
                        "grid-lg-5": "MuiGrid-grid-lg-5-76",
                        "grid-lg-6": "MuiGrid-grid-lg-6-77",
                        "grid-lg-7": "MuiGrid-grid-lg-7-78",
                        "grid-lg-8": "MuiGrid-grid-lg-8-79",
                        "grid-lg-9": "MuiGrid-grid-lg-9-80",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                        "grid-lg-true": "MuiGrid-grid-lg-true-71",
                        "grid-md-1": "MuiGrid-grid-md-1-58",
                        "grid-md-10": "MuiGrid-grid-md-10-67",
                        "grid-md-11": "MuiGrid-grid-md-11-68",
                        "grid-md-12": "MuiGrid-grid-md-12-69",
                        "grid-md-2": "MuiGrid-grid-md-2-59",
                        "grid-md-3": "MuiGrid-grid-md-3-60",
                        "grid-md-4": "MuiGrid-grid-md-4-61",
                        "grid-md-5": "MuiGrid-grid-md-5-62",
                        "grid-md-6": "MuiGrid-grid-md-6-63",
                        "grid-md-7": "MuiGrid-grid-md-7-64",
                        "grid-md-8": "MuiGrid-grid-md-8-65",
                        "grid-md-9": "MuiGrid-grid-md-9-66",
                        "grid-md-auto": "MuiGrid-grid-md-auto-56",
                        "grid-md-true": "MuiGrid-grid-md-true-57",
                        "grid-sm-1": "MuiGrid-grid-sm-1-44",
                        "grid-sm-10": "MuiGrid-grid-sm-10-53",
                        "grid-sm-11": "MuiGrid-grid-sm-11-54",
                        "grid-sm-12": "MuiGrid-grid-sm-12-55",
                        "grid-sm-2": "MuiGrid-grid-sm-2-45",
                        "grid-sm-3": "MuiGrid-grid-sm-3-46",
                        "grid-sm-4": "MuiGrid-grid-sm-4-47",
                        "grid-sm-5": "MuiGrid-grid-sm-5-48",
                        "grid-sm-6": "MuiGrid-grid-sm-6-49",
                        "grid-sm-7": "MuiGrid-grid-sm-7-50",
                        "grid-sm-8": "MuiGrid-grid-sm-8-51",
                        "grid-sm-9": "MuiGrid-grid-sm-9-52",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                        "grid-sm-true": "MuiGrid-grid-sm-true-43",
                        "grid-xl-1": "MuiGrid-grid-xl-1-86",
                        "grid-xl-10": "MuiGrid-grid-xl-10-95",
                        "grid-xl-11": "MuiGrid-grid-xl-11-96",
                        "grid-xl-12": "MuiGrid-grid-xl-12-97",
                        "grid-xl-2": "MuiGrid-grid-xl-2-87",
                        "grid-xl-3": "MuiGrid-grid-xl-3-88",
                        "grid-xl-4": "MuiGrid-grid-xl-4-89",
                        "grid-xl-5": "MuiGrid-grid-xl-5-90",
                        "grid-xl-6": "MuiGrid-grid-xl-6-91",
                        "grid-xl-7": "MuiGrid-grid-xl-7-92",
                        "grid-xl-8": "MuiGrid-grid-xl-8-93",
                        "grid-xl-9": "MuiGrid-grid-xl-9-94",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                        "grid-xl-true": "MuiGrid-grid-xl-true-85",
                        "grid-xs-1": "MuiGrid-grid-xs-1-30",
                        "grid-xs-10": "MuiGrid-grid-xs-10-39",
                        "grid-xs-11": "MuiGrid-grid-xs-11-40",
                        "grid-xs-12": "MuiGrid-grid-xs-12-41",
                        "grid-xs-2": "MuiGrid-grid-xs-2-31",
                        "grid-xs-3": "MuiGrid-grid-xs-3-32",
                        "grid-xs-4": "MuiGrid-grid-xs-4-33",
                        "grid-xs-5": "MuiGrid-grid-xs-5-34",
                        "grid-xs-6": "MuiGrid-grid-xs-6-35",
                        "grid-xs-7": "MuiGrid-grid-xs-7-36",
                        "grid-xs-8": "MuiGrid-grid-xs-8-37",
                        "grid-xs-9": "MuiGrid-grid-xs-9-38",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                        "grid-xs-true": "MuiGrid-grid-xs-true-29",
                        "item": "MuiGrid-item-2",
                        "justify-xs-center": "MuiGrid-justify-xs-center-18",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                      }
                    }
                    component="div"
                    container={false}
                    direction="row"
                    item={true}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={0}
                    wrap="wrap"
                    xl={false}
                    xs={1}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-item-2 MuiGrid-grid-xs-1-30"
                    >
                      <WithStyles(Checkbox)
                        checked={false}
                        disabled={true}
                        onChange={[Function]}
                      >
                        <Checkbox
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          classes={
                            Object {
                              "checked": "MuiCheckbox-checked-99",
                              "colorPrimary": "MuiCheckbox-colorPrimary-101",
                              "colorSecondary": "MuiCheckbox-colorSecondary-102",
                              "disabled": "MuiCheckbox-disabled-100",
                              "root": "MuiCheckbox-root-98",
                            }
                          }
                          color="secondary"
                          disabled={true}
                          icon={<pure(CheckBoxOutlineBlank) />}
                          indeterminate={false}
                          indeterminateIcon={<pure(IndeterminateCheckBox) />}
                          onChange={[Function]}
                        >
                          <WithStyles(SwitchBase)
                            checked={false}
                            checkedIcon={<pure(CheckBox) />}
                            classes={
                              Object {
                                "checked": "MuiCheckbox-checked-99",
                                "disabled": "MuiCheckbox-disabled-100",
                                "root": "MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102",
                              }
                            }
                            disabled={true}
                            icon={<pure(CheckBoxOutlineBlank) />}
                            onChange={[Function]}
                            type="checkbox"
                          >
                            <SwitchBase
                              checked={false}
                              checkedIcon={<pure(CheckBox) />}
                              classes={
                                Object {
                                  "checked": "MuiSwitchBase-checked-104 MuiCheckbox-checked-99",
                                  "disabled": "MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100",
                                  "input": "MuiSwitchBase-input-106",
                                  "root": "MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102",
                                }
                              }
                              disabled={true}
                              icon={<pure(CheckBoxOutlineBlank) />}
                              onChange={[Function]}
                              type="checkbox"
                            >
                              <WithStyles(IconButton)
                                className="MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102 MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100"
                                component="span"
                                disabled={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <IconButton
                                  className="MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102 MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit-108",
                                      "colorPrimary": "MuiIconButton-colorPrimary-109",
                                      "colorSecondary": "MuiIconButton-colorSecondary-110",
                                      "disabled": "MuiIconButton-disabled-111",
                                      "label": "MuiIconButton-label-112",
                                      "root": "MuiIconButton-root-107",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  disabled={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <WithStyles(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root-107 MuiIconButton-disabled-111 MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102 MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100"
                                    component="span"
                                    disabled={true}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ButtonBase
                                      centerRipple={true}
                                      className="MuiIconButton-root-107 MuiIconButton-disabled-111 MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102 MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100"
                                      classes={
                                        Object {
                                          "disabled": "MuiButtonBase-disabled-114",
                                          "focusVisible": "MuiButtonBase-focusVisible-115",
                                          "root": "MuiButtonBase-root-113",
                                        }
                                      }
                                      component="span"
                                      disableRipple={false}
                                      disableTouchRipple={false}
                                      disabled={true}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                      type="button"
                                    >
                                      <span
                                        className="MuiButtonBase-root-113 MuiButtonBase-disabled-114 MuiIconButton-root-107 MuiIconButton-disabled-111 MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102 MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex="-1"
                                      >
                                        <span
                                          className="MuiIconButton-label-112"
                                        >
                                          <pure(CheckBoxOutlineBlank)>
                                            <CheckBoxOutlineBlank>
                                              <WithStyles(SvgIcon)>
                                                <SvgIcon
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction-119",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                      "colorError": "MuiSvgIcon-colorError-120",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                      "root": "MuiSvgIcon-root-116",
                                                    }
                                                  }
                                                  color="inherit"
                                                  component="svg"
                                                  fontSize="default"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root-116"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                    />
                                                  </svg>
                                                </SvgIcon>
                                              </WithStyles(SvgIcon)>
                                            </CheckBoxOutlineBlank>
                                          </pure(CheckBoxOutlineBlank)>
                                          <input
                                            checked={false}
                                            className="MuiSwitchBase-input-106"
                                            disabled={true}
                                            onChange={[Function]}
                                            type="checkbox"
                                          />
                                        </span>
                                      </span>
                                    </ButtonBase>
                                  </WithStyles(ButtonBase)>
                                </IconButton>
                              </WithStyles(IconButton)>
                            </SwitchBase>
                          </WithStyles(SwitchBase)>
                        </Checkbox>
                      </WithStyles(Checkbox)>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
                <Styled(WithStyles(Grid))
                  item={true}
                  xs={7}
                >
                  <WithStyles(Grid)
                    className="sc-bwzfXH iNNlGz"
                    item={true}
                    xs={7}
                  >
                    <Grid
                      alignContent="stretch"
                      alignItems="stretch"
                      className="sc-bwzfXH iNNlGz"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={false}
                      direction="row"
                      item={true}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={0}
                      wrap="wrap"
                      xl={false}
                      xs={7}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-item-2 MuiGrid-grid-xs-7-36 sc-bwzfXH iNNlGz"
                      >
                        <WithStyles(ListItemText)
                          primary={
                            <WithTheme(Fade)
                              in={true}
                            >
                              <WithStyles(CircularProgress)
                                color="secondary"
                                size={20}
                              />
                            </WithTheme(Fade)>
                          }
                          secondary="Last learnt: 19 years ago"
                        >
                          <ListItemText
                            classes={
                              Object {
                                "dense": "MuiListItemText-dense-132",
                                "inset": "MuiListItemText-inset-131",
                                "primary": "MuiListItemText-primary-133",
                                "root": "MuiListItemText-root-130",
                                "secondary": "MuiListItemText-secondary-134",
                                "textDense": "MuiListItemText-textDense-135",
                              }
                            }
                            disableTypography={false}
                            inset={false}
                            primary={
                              <WithTheme(Fade)
                                in={true}
                              >
                                <WithStyles(CircularProgress)
                                  color="secondary"
                                  size={20}
                                />
                              </WithTheme(Fade)>
                            }
                            secondary="Last learnt: 19 years ago"
                          >
                            <div
                              className="MuiListItemText-root-130"
                            >
                              <WithStyles(Typography)
                                className="MuiListItemText-primary-133"
                                component="span"
                                variant="subheading"
                              >
                                <Typography
                                  align="inherit"
                                  className="MuiListItemText-primary-133"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter-149",
                                      "alignJustify": "MuiTypography-alignJustify-151",
                                      "alignLeft": "MuiTypography-alignLeft-148",
                                      "alignRight": "MuiTypography-alignRight-150",
                                      "body1": "MuiTypography-body1-145",
                                      "body2": "MuiTypography-body2-144",
                                      "button": "MuiTypography-button-147",
                                      "caption": "MuiTypography-caption-146",
                                      "colorError": "MuiTypography-colorError-160",
                                      "colorInherit": "MuiTypography-colorInherit-155",
                                      "colorPrimary": "MuiTypography-colorPrimary-156",
                                      "colorSecondary": "MuiTypography-colorSecondary-157",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-158",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-159",
                                      "display1": "MuiTypography-display1-140",
                                      "display2": "MuiTypography-display2-139",
                                      "display3": "MuiTypography-display3-138",
                                      "display4": "MuiTypography-display4-137",
                                      "gutterBottom": "MuiTypography-gutterBottom-153",
                                      "headline": "MuiTypography-headline-141",
                                      "noWrap": "MuiTypography-noWrap-152",
                                      "paragraph": "MuiTypography-paragraph-154",
                                      "root": "MuiTypography-root-136",
                                      "subheading": "MuiTypography-subheading-143",
                                      "title": "MuiTypography-title-142",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  gutterBottom={false}
                                  headlineMapping={
                                    Object {
                                      "body1": "p",
                                      "body2": "aside",
                                      "display1": "h1",
                                      "display2": "h1",
                                      "display3": "h1",
                                      "display4": "h1",
                                      "headline": "h1",
                                      "subheading": "h3",
                                      "title": "h2",
                                    }
                                  }
                                  noWrap={false}
                                  paragraph={false}
                                  variant="subheading"
                                >
                                  <span
                                    className="MuiTypography-root-136 MuiTypography-subheading-143 MuiListItemText-primary-133"
                                  >
                                    <WithTheme(Fade)
                                      in={true}
                                    >
                                      <Fade
                                        in={true}
                                        theme={
                                          Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "hover": "rgba(0, 0, 0, 0.08)",
                                                "hoverOpacity": 0.08,
                                                "selected": "rgba(0, 0, 0, 0.14)",
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": Object {
                                              "unit": 8,
                                            },
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "lineHeight": "1.46429em",
                                              },
                                              "body2": Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "lineHeight": "1.71429em",
                                              },
                                              "button": Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "color": "rgba(0, 0, 0, 0.54)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "lineHeight": "1.375em",
                                              },
                                              "display1": Object {
                                                "color": "rgba(0, 0, 0, 0.54)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "lineHeight": "1.20588em",
                                              },
                                              "display2": Object {
                                                "color": "rgba(0, 0, 0, 0.54)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.8125rem",
                                                "fontWeight": 400,
                                                "lineHeight": "1.13333em",
                                                "marginLeft": "-.02em",
                                              },
                                              "display3": Object {
                                                "color": "rgba(0, 0, 0, 0.54)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "-.02em",
                                                "lineHeight": "1.30357em",
                                                "marginLeft": "-.02em",
                                              },
                                              "display4": Object {
                                                "color": "rgba(0, 0, 0, 0.54)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "7rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-.04em",
                                                "lineHeight": "1.14286em",
                                                "marginLeft": "-.04em",
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "headline": Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "lineHeight": "1.35417em",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subheading": Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "lineHeight": "1.5em",
                                              },
                                              "title": Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.3125rem",
                                                "fontWeight": 500,
                                                "lineHeight": "1.16667em",
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "tooltip": 1500,
                                            },
                                          }
                                        }
                                        timeout={
                                          Object {
                                            "enter": 225,
                                            "exit": 195,
                                          }
                                        }
                                      >
                                        <Transition
                                          appear={true}
                                          enter={true}
                                          exit={true}
                                          in={true}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                          unmountOnExit={false}
                                        >
                                          <WithStyles(CircularProgress)
                                            color="secondary"
                                            size={20}
                                            style={
                                              Object {
                                                "opacity": 1,
                                                "willChange": "opacity",
                                              }
                                            }
                                          >
                                            <CircularProgress
                                              classes={
                                                Object {
                                                  "circle": "MuiCircularProgress-circle-193",
                                                  "circleIndeterminate": "MuiCircularProgress-circleIndeterminate-195",
                                                  "circleStatic": "MuiCircularProgress-circleStatic-194",
                                                  "colorPrimary": "MuiCircularProgress-colorPrimary-190",
                                                  "colorSecondary": "MuiCircularProgress-colorSecondary-191",
                                                  "indeterminate": "MuiCircularProgress-indeterminate-189",
                                                  "root": "MuiCircularProgress-root-187",
                                                  "static": "MuiCircularProgress-static-188",
                                                  "svg": "MuiCircularProgress-svg-192",
                                                }
                                              }
                                              color="secondary"
                                              size={20}
                                              style={
                                                Object {
                                                  "opacity": 1,
                                                  "willChange": "opacity",
                                                }
                                              }
                                              thickness={3.6}
                                              value={0}
                                              variant="indeterminate"
                                            >
                                              <div
                                                className="MuiCircularProgress-root-187 MuiCircularProgress-colorSecondary-191 MuiCircularProgress-indeterminate-189"
                                                role="progressbar"
                                                style={
                                                  Object {
                                                    "height": 20,
                                                    "opacity": 1,
                                                    "width": 20,
                                                    "willChange": "opacity",
                                                  }
                                                }
                                              >
                                                <svg
                                                  className="MuiCircularProgress-svg-192"
                                                  viewBox="22 22 44 44"
                                                >
                                                  <circle
                                                    className="MuiCircularProgress-circle-193 MuiCircularProgress-circleIndeterminate-195"
                                                    cx={44}
                                                    cy={44}
                                                    fill="none"
                                                    r={20.2}
                                                    strokeWidth={3.6}
                                                    style={Object {}}
                                                  />
                                                </svg>
                                              </div>
                                            </CircularProgress>
                                          </WithStyles(CircularProgress)>
                                        </Transition>
                                      </Fade>
                                    </WithTheme(Fade)>
                                  </span>
                                </Typography>
                              </WithStyles(Typography)>
                              <WithStyles(Typography)
                                className="MuiListItemText-secondary-134"
                                color="textSecondary"
                                variant="body1"
                              >
                                <Typography
                                  align="inherit"
                                  className="MuiListItemText-secondary-134"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter-149",
                                      "alignJustify": "MuiTypography-alignJustify-151",
                                      "alignLeft": "MuiTypography-alignLeft-148",
                                      "alignRight": "MuiTypography-alignRight-150",
                                      "body1": "MuiTypography-body1-145",
                                      "body2": "MuiTypography-body2-144",
                                      "button": "MuiTypography-button-147",
                                      "caption": "MuiTypography-caption-146",
                                      "colorError": "MuiTypography-colorError-160",
                                      "colorInherit": "MuiTypography-colorInherit-155",
                                      "colorPrimary": "MuiTypography-colorPrimary-156",
                                      "colorSecondary": "MuiTypography-colorSecondary-157",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-158",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-159",
                                      "display1": "MuiTypography-display1-140",
                                      "display2": "MuiTypography-display2-139",
                                      "display3": "MuiTypography-display3-138",
                                      "display4": "MuiTypography-display4-137",
                                      "gutterBottom": "MuiTypography-gutterBottom-153",
                                      "headline": "MuiTypography-headline-141",
                                      "noWrap": "MuiTypography-noWrap-152",
                                      "paragraph": "MuiTypography-paragraph-154",
                                      "root": "MuiTypography-root-136",
                                      "subheading": "MuiTypography-subheading-143",
                                      "title": "MuiTypography-title-142",
                                    }
                                  }
                                  color="textSecondary"
                                  gutterBottom={false}
                                  headlineMapping={
                                    Object {
                                      "body1": "p",
                                      "body2": "aside",
                                      "display1": "h1",
                                      "display2": "h1",
                                      "display3": "h1",
                                      "display4": "h1",
                                      "headline": "h1",
                                      "subheading": "h3",
                                      "title": "h2",
                                    }
                                  }
                                  noWrap={false}
                                  paragraph={false}
                                  variant="body1"
                                >
                                  <p
                                    className="MuiTypography-root-136 MuiTypography-body1-145 MuiTypography-colorTextSecondary-159 MuiListItemText-secondary-134"
                                  >
                                    Last learnt: 19 years ago
                                  </p>
                                </Typography>
                              </WithStyles(Typography)>
                            </div>
                          </ListItemText>
                        </WithStyles(ListItemText)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </Styled(WithStyles(Grid))>
                <WithStyles(Grid)
                  item={true}
                  xs={3}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="stretch"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                        "container": "MuiGrid-container-1",
                        "direction-xs-column": "MuiGrid-direction-xs-column-4",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                        "grid-lg-1": "MuiGrid-grid-lg-1-72",
                        "grid-lg-10": "MuiGrid-grid-lg-10-81",
                        "grid-lg-11": "MuiGrid-grid-lg-11-82",
                        "grid-lg-12": "MuiGrid-grid-lg-12-83",
                        "grid-lg-2": "MuiGrid-grid-lg-2-73",
                        "grid-lg-3": "MuiGrid-grid-lg-3-74",
                        "grid-lg-4": "MuiGrid-grid-lg-4-75",
                        "grid-lg-5": "MuiGrid-grid-lg-5-76",
                        "grid-lg-6": "MuiGrid-grid-lg-6-77",
                        "grid-lg-7": "MuiGrid-grid-lg-7-78",
                        "grid-lg-8": "MuiGrid-grid-lg-8-79",
                        "grid-lg-9": "MuiGrid-grid-lg-9-80",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                        "grid-lg-true": "MuiGrid-grid-lg-true-71",
                        "grid-md-1": "MuiGrid-grid-md-1-58",
                        "grid-md-10": "MuiGrid-grid-md-10-67",
                        "grid-md-11": "MuiGrid-grid-md-11-68",
                        "grid-md-12": "MuiGrid-grid-md-12-69",
                        "grid-md-2": "MuiGrid-grid-md-2-59",
                        "grid-md-3": "MuiGrid-grid-md-3-60",
                        "grid-md-4": "MuiGrid-grid-md-4-61",
                        "grid-md-5": "MuiGrid-grid-md-5-62",
                        "grid-md-6": "MuiGrid-grid-md-6-63",
                        "grid-md-7": "MuiGrid-grid-md-7-64",
                        "grid-md-8": "MuiGrid-grid-md-8-65",
                        "grid-md-9": "MuiGrid-grid-md-9-66",
                        "grid-md-auto": "MuiGrid-grid-md-auto-56",
                        "grid-md-true": "MuiGrid-grid-md-true-57",
                        "grid-sm-1": "MuiGrid-grid-sm-1-44",
                        "grid-sm-10": "MuiGrid-grid-sm-10-53",
                        "grid-sm-11": "MuiGrid-grid-sm-11-54",
                        "grid-sm-12": "MuiGrid-grid-sm-12-55",
                        "grid-sm-2": "MuiGrid-grid-sm-2-45",
                        "grid-sm-3": "MuiGrid-grid-sm-3-46",
                        "grid-sm-4": "MuiGrid-grid-sm-4-47",
                        "grid-sm-5": "MuiGrid-grid-sm-5-48",
                        "grid-sm-6": "MuiGrid-grid-sm-6-49",
                        "grid-sm-7": "MuiGrid-grid-sm-7-50",
                        "grid-sm-8": "MuiGrid-grid-sm-8-51",
                        "grid-sm-9": "MuiGrid-grid-sm-9-52",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                        "grid-sm-true": "MuiGrid-grid-sm-true-43",
                        "grid-xl-1": "MuiGrid-grid-xl-1-86",
                        "grid-xl-10": "MuiGrid-grid-xl-10-95",
                        "grid-xl-11": "MuiGrid-grid-xl-11-96",
                        "grid-xl-12": "MuiGrid-grid-xl-12-97",
                        "grid-xl-2": "MuiGrid-grid-xl-2-87",
                        "grid-xl-3": "MuiGrid-grid-xl-3-88",
                        "grid-xl-4": "MuiGrid-grid-xl-4-89",
                        "grid-xl-5": "MuiGrid-grid-xl-5-90",
                        "grid-xl-6": "MuiGrid-grid-xl-6-91",
                        "grid-xl-7": "MuiGrid-grid-xl-7-92",
                        "grid-xl-8": "MuiGrid-grid-xl-8-93",
                        "grid-xl-9": "MuiGrid-grid-xl-9-94",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                        "grid-xl-true": "MuiGrid-grid-xl-true-85",
                        "grid-xs-1": "MuiGrid-grid-xs-1-30",
                        "grid-xs-10": "MuiGrid-grid-xs-10-39",
                        "grid-xs-11": "MuiGrid-grid-xs-11-40",
                        "grid-xs-12": "MuiGrid-grid-xs-12-41",
                        "grid-xs-2": "MuiGrid-grid-xs-2-31",
                        "grid-xs-3": "MuiGrid-grid-xs-3-32",
                        "grid-xs-4": "MuiGrid-grid-xs-4-33",
                        "grid-xs-5": "MuiGrid-grid-xs-5-34",
                        "grid-xs-6": "MuiGrid-grid-xs-6-35",
                        "grid-xs-7": "MuiGrid-grid-xs-7-36",
                        "grid-xs-8": "MuiGrid-grid-xs-8-37",
                        "grid-xs-9": "MuiGrid-grid-xs-9-38",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                        "grid-xs-true": "MuiGrid-grid-xs-true-29",
                        "item": "MuiGrid-item-2",
                        "justify-xs-center": "MuiGrid-justify-xs-center-18",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                      }
                    }
                    component="div"
                    container={false}
                    direction="row"
                    item={true}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={0}
                    wrap="wrap"
                    xl={false}
                    xs={3}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-item-2 MuiGrid-grid-xs-3-32"
                    >
                      <styled.div>
                        <div
                          className="sc-bxivhb gRBOxh"
                        >
                          19 years ago
                        </div>
                      </styled.div>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  xs={1}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="stretch"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                        "container": "MuiGrid-container-1",
                        "direction-xs-column": "MuiGrid-direction-xs-column-4",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                        "grid-lg-1": "MuiGrid-grid-lg-1-72",
                        "grid-lg-10": "MuiGrid-grid-lg-10-81",
                        "grid-lg-11": "MuiGrid-grid-lg-11-82",
                        "grid-lg-12": "MuiGrid-grid-lg-12-83",
                        "grid-lg-2": "MuiGrid-grid-lg-2-73",
                        "grid-lg-3": "MuiGrid-grid-lg-3-74",
                        "grid-lg-4": "MuiGrid-grid-lg-4-75",
                        "grid-lg-5": "MuiGrid-grid-lg-5-76",
                        "grid-lg-6": "MuiGrid-grid-lg-6-77",
                        "grid-lg-7": "MuiGrid-grid-lg-7-78",
                        "grid-lg-8": "MuiGrid-grid-lg-8-79",
                        "grid-lg-9": "MuiGrid-grid-lg-9-80",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                        "grid-lg-true": "MuiGrid-grid-lg-true-71",
                        "grid-md-1": "MuiGrid-grid-md-1-58",
                        "grid-md-10": "MuiGrid-grid-md-10-67",
                        "grid-md-11": "MuiGrid-grid-md-11-68",
                        "grid-md-12": "MuiGrid-grid-md-12-69",
                        "grid-md-2": "MuiGrid-grid-md-2-59",
                        "grid-md-3": "MuiGrid-grid-md-3-60",
                        "grid-md-4": "MuiGrid-grid-md-4-61",
                        "grid-md-5": "MuiGrid-grid-md-5-62",
                        "grid-md-6": "MuiGrid-grid-md-6-63",
                        "grid-md-7": "MuiGrid-grid-md-7-64",
                        "grid-md-8": "MuiGrid-grid-md-8-65",
                        "grid-md-9": "MuiGrid-grid-md-9-66",
                        "grid-md-auto": "MuiGrid-grid-md-auto-56",
                        "grid-md-true": "MuiGrid-grid-md-true-57",
                        "grid-sm-1": "MuiGrid-grid-sm-1-44",
                        "grid-sm-10": "MuiGrid-grid-sm-10-53",
                        "grid-sm-11": "MuiGrid-grid-sm-11-54",
                        "grid-sm-12": "MuiGrid-grid-sm-12-55",
                        "grid-sm-2": "MuiGrid-grid-sm-2-45",
                        "grid-sm-3": "MuiGrid-grid-sm-3-46",
                        "grid-sm-4": "MuiGrid-grid-sm-4-47",
                        "grid-sm-5": "MuiGrid-grid-sm-5-48",
                        "grid-sm-6": "MuiGrid-grid-sm-6-49",
                        "grid-sm-7": "MuiGrid-grid-sm-7-50",
                        "grid-sm-8": "MuiGrid-grid-sm-8-51",
                        "grid-sm-9": "MuiGrid-grid-sm-9-52",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                        "grid-sm-true": "MuiGrid-grid-sm-true-43",
                        "grid-xl-1": "MuiGrid-grid-xl-1-86",
                        "grid-xl-10": "MuiGrid-grid-xl-10-95",
                        "grid-xl-11": "MuiGrid-grid-xl-11-96",
                        "grid-xl-12": "MuiGrid-grid-xl-12-97",
                        "grid-xl-2": "MuiGrid-grid-xl-2-87",
                        "grid-xl-3": "MuiGrid-grid-xl-3-88",
                        "grid-xl-4": "MuiGrid-grid-xl-4-89",
                        "grid-xl-5": "MuiGrid-grid-xl-5-90",
                        "grid-xl-6": "MuiGrid-grid-xl-6-91",
                        "grid-xl-7": "MuiGrid-grid-xl-7-92",
                        "grid-xl-8": "MuiGrid-grid-xl-8-93",
                        "grid-xl-9": "MuiGrid-grid-xl-9-94",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                        "grid-xl-true": "MuiGrid-grid-xl-true-85",
                        "grid-xs-1": "MuiGrid-grid-xs-1-30",
                        "grid-xs-10": "MuiGrid-grid-xs-10-39",
                        "grid-xs-11": "MuiGrid-grid-xs-11-40",
                        "grid-xs-12": "MuiGrid-grid-xs-12-41",
                        "grid-xs-2": "MuiGrid-grid-xs-2-31",
                        "grid-xs-3": "MuiGrid-grid-xs-3-32",
                        "grid-xs-4": "MuiGrid-grid-xs-4-33",
                        "grid-xs-5": "MuiGrid-grid-xs-5-34",
                        "grid-xs-6": "MuiGrid-grid-xs-6-35",
                        "grid-xs-7": "MuiGrid-grid-xs-7-36",
                        "grid-xs-8": "MuiGrid-grid-xs-8-37",
                        "grid-xs-9": "MuiGrid-grid-xs-9-38",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                        "grid-xs-true": "MuiGrid-grid-xs-true-29",
                        "item": "MuiGrid-item-2",
                        "justify-xs-center": "MuiGrid-justify-xs-center-18",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                      }
                    }
                    component="div"
                    container={false}
                    direction="row"
                    item={true}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={0}
                    wrap="wrap"
                    xl={false}
                    xs={1}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-item-2 MuiGrid-grid-xs-1-30"
                    >
                      <withRouter(ButtonWithRouter)
                        disabled={true}
                        title="Edit"
                        to="/words-list/_id/edit?"
                      >
                        <Route>
                          <ButtonWithRouter
                            disabled={true}
                            history={
                              Object {
                                "action": "POP",
                                "block": [Function],
                                "createHref": [Function],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              }
                            }
                            location={
                              Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              }
                            }
                            match={
                              Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              }
                            }
                            title="Edit"
                            to="/words-list/_id/edit?"
                          >
                            <ButtonControl
                              color="primary"
                              component={[Function]}
                              disabled={true}
                              history={
                                Object {
                                  "action": "POP",
                                  "block": [Function],
                                  "createHref": [Function],
                                  "go": [Function],
                                  "goBack": [Function],
                                  "goForward": [Function],
                                  "length": 1,
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                }
                              }
                              isActive={false}
                              match={
                                Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                }
                              }
                              title="Edit"
                              to="/words-list/_id/edit?"
                            >
                              <Styled(Component)
                                classes={Object {}}
                                color="primary"
                                component={[Function]}
                                disabled={true}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "createHref": [Function],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                isActive={false}
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                mini={true}
                                title="Edit"
                                to="/words-list/_id/edit?"
                                variant="fab"
                              >
                                <Component
                                  className="sc-EHOje kwotwU"
                                  classes={Object {}}
                                  color="primary"
                                  component={[Function]}
                                  disabled={true}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "createHref": [Function],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  isActive={false}
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  mini={true}
                                  title="Edit"
                                  to="/words-list/_id/edit?"
                                  variant="fab"
                                >
                                  <WithStyles(Button)
                                    className="sc-EHOje kwotwU"
                                    classes={Object {}}
                                    color="primary"
                                    component={[Function]}
                                    disabled={true}
                                    history={
                                      Object {
                                        "action": "POP",
                                        "block": [Function],
                                        "createHref": [Function],
                                        "go": [Function],
                                        "goBack": [Function],
                                        "goForward": [Function],
                                        "length": 1,
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      }
                                    }
                                    match={
                                      Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      }
                                    }
                                    mini={true}
                                    title="Edit"
                                    to="/words-list/_id/edit?"
                                    variant="fab"
                                  >
                                    <Button
                                      className="sc-EHOje kwotwU"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit-182",
                                          "contained": "MuiButton-contained-172",
                                          "containedPrimary": "MuiButton-containedPrimary-173",
                                          "containedSecondary": "MuiButton-containedSecondary-174",
                                          "disabled": "MuiButton-disabled-181",
                                          "extendedFab": "MuiButton-extendedFab-179",
                                          "fab": "MuiButton-fab-178",
                                          "flat": "MuiButton-flat-166",
                                          "flatPrimary": "MuiButton-flatPrimary-167",
                                          "flatSecondary": "MuiButton-flatSecondary-168",
                                          "focusVisible": "MuiButton-focusVisible-180",
                                          "fullWidth": "MuiButton-fullWidth-186",
                                          "label": "MuiButton-label-162",
                                          "mini": "MuiButton-mini-183",
                                          "outlined": "MuiButton-outlined-169",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary-170",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary-171",
                                          "raised": "MuiButton-raised-175",
                                          "raisedPrimary": "MuiButton-raisedPrimary-176",
                                          "raisedSecondary": "MuiButton-raisedSecondary-177",
                                          "root": "MuiButton-root-161",
                                          "sizeLarge": "MuiButton-sizeLarge-185",
                                          "sizeSmall": "MuiButton-sizeSmall-184",
                                          "text": "MuiButton-text-163",
                                          "textPrimary": "MuiButton-textPrimary-164",
                                          "textSecondary": "MuiButton-textSecondary-165",
                                        }
                                      }
                                      color="primary"
                                      component={[Function]}
                                      disableFocusRipple={false}
                                      disabled={true}
                                      fullWidth={false}
                                      history={
                                        Object {
                                          "action": "POP",
                                          "block": [Function],
                                          "createHref": [Function],
                                          "go": [Function],
                                          "goBack": [Function],
                                          "goForward": [Function],
                                          "length": 1,
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        }
                                      }
                                      match={
                                        Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        }
                                      }
                                      mini={true}
                                      size="medium"
                                      title="Edit"
                                      to="/words-list/_id/edit?"
                                      type="button"
                                      variant="fab"
                                    >
                                      <WithStyles(ButtonBase)
                                        className="MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 MuiButton-disabled-181 sc-EHOje kwotwU"
                                        component={[Function]}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName="MuiButton-focusVisible-180"
                                        history={
                                          Object {
                                            "action": "POP",
                                            "block": [Function],
                                            "createHref": [Function],
                                            "go": [Function],
                                            "goBack": [Function],
                                            "goForward": [Function],
                                            "length": 1,
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "pathname": "/",
                                              "search": "",
                                              "state": undefined,
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          }
                                        }
                                        match={
                                          Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          }
                                        }
                                        title="Edit"
                                        to="/words-list/_id/edit?"
                                        type="button"
                                      >
                                        <ButtonBase
                                          centerRipple={false}
                                          className="MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 MuiButton-disabled-181 sc-EHOje kwotwU"
                                          classes={
                                            Object {
                                              "disabled": "MuiButtonBase-disabled-114",
                                              "focusVisible": "MuiButtonBase-focusVisible-115",
                                              "root": "MuiButtonBase-root-113",
                                            }
                                          }
                                          component={[Function]}
                                          disableRipple={false}
                                          disableTouchRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName="MuiButton-focusVisible-180"
                                          history={
                                            Object {
                                              "action": "POP",
                                              "block": [Function],
                                              "createHref": [Function],
                                              "go": [Function],
                                              "goBack": [Function],
                                              "goForward": [Function],
                                              "length": 1,
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "pathname": "/",
                                                "search": "",
                                                "state": undefined,
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            }
                                          }
                                          match={
                                            Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            }
                                          }
                                          tabIndex="0"
                                          title="Edit"
                                          to="/words-list/_id/edit?"
                                          type="button"
                                        >
                                          <Link
                                            className="MuiButtonBase-root-113 MuiButtonBase-disabled-114 MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 MuiButton-disabled-181 sc-EHOje kwotwU"
                                            history={
                                              Object {
                                                "action": "POP",
                                                "block": [Function],
                                                "createHref": [Function],
                                                "go": [Function],
                                                "goBack": [Function],
                                                "goForward": [Function],
                                                "length": 1,
                                                "listen": [Function],
                                                "location": Object {
                                                  "hash": "",
                                                  "pathname": "/",
                                                  "search": "",
                                                  "state": undefined,
                                                },
                                                "push": [Function],
                                                "replace": [Function],
                                              }
                                            }
                                            match={
                                              Object {
                                                "isExact": true,
                                                "params": Object {},
                                                "path": "/",
                                                "url": "/",
                                              }
                                            }
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            replace={false}
                                            role="button"
                                            tabIndex="-1"
                                            title="Edit"
                                            to="/words-list/_id/edit?"
                                          >
                                            <a
                                              className="MuiButtonBase-root-113 MuiButtonBase-disabled-114 MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 MuiButton-disabled-181 sc-EHOje kwotwU"
                                              history={
                                                Object {
                                                  "action": "POP",
                                                  "block": [Function],
                                                  "createHref": [Function],
                                                  "go": [Function],
                                                  "goBack": [Function],
                                                  "goForward": [Function],
                                                  "length": 1,
                                                  "listen": [Function],
                                                  "location": Object {
                                                    "hash": "",
                                                    "pathname": "/",
                                                    "search": "",
                                                    "state": undefined,
                                                  },
                                                  "push": [Function],
                                                  "replace": [Function],
                                                }
                                              }
                                              href="/words-list/_id/edit"
                                              match={
                                                Object {
                                                  "isExact": true,
                                                  "params": Object {},
                                                  "path": "/",
                                                  "url": "/",
                                                }
                                              }
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex="-1"
                                              title="Edit"
                                            >
                                              <span
                                                className="MuiButton-label-162"
                                              >
                                                <pure(Edit)>
                                                  <Edit>
                                                    <WithStyles(SvgIcon)>
                                                      <SvgIcon
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-120",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                            "root": "MuiSvgIcon-root-116",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="svg"
                                                        fontSize="default"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-116"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                          <path
                                                            d="M0 0h24v24H0z"
                                                            fill="none"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                            </a>
                                          </Link>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Button>
                                  </WithStyles(Button)>
                                </Component>
                              </Styled(Component)>
                            </ButtonControl>
                          </ButtonWithRouter>
                        </Route>
                      </withRouter(ButtonWithRouter)>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
              </div>
            </Grid>
          </WithStyles(Grid)>
        </Component>
      </Styled(Component)>
    </WordItemInList>
  </Router>
</BrowserRouter>
`;

exports[`WordItemInList render 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <WordItemInList
      isChecked={false}
      linkToWord=""
      loading={false}
      onWordCheck={[Function]}
      word={
        Object {
          "_id": "_id",
          "dateCreated": "2000-02-02",
          "dateLastLearnt": "2000-02-02",
          "en": "en",
          "transcription": "transcription",
          "uk": "uk",
        }
      }
    >
      <Styled(Component)
        alignItems="center"
        container={true}
        isChecked={false}
        isLoading={false}
        spacing={16}
      >
        <Component
          alignItems="center"
          className="sc-bdVaJa eYFlKX"
          container={true}
          isChecked={false}
          isLoading={false}
          spacing={16}
        >
          <WithStyles(Grid)
            alignItems="center"
            className="sc-bdVaJa eYFlKX"
            container={true}
            spacing={16}
          >
            <Grid
              alignContent="stretch"
              alignItems="center"
              className="sc-bdVaJa eYFlKX"
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                  "container": "MuiGrid-container-1",
                  "direction-xs-column": "MuiGrid-direction-xs-column-4",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                  "grid-lg-1": "MuiGrid-grid-lg-1-72",
                  "grid-lg-10": "MuiGrid-grid-lg-10-81",
                  "grid-lg-11": "MuiGrid-grid-lg-11-82",
                  "grid-lg-12": "MuiGrid-grid-lg-12-83",
                  "grid-lg-2": "MuiGrid-grid-lg-2-73",
                  "grid-lg-3": "MuiGrid-grid-lg-3-74",
                  "grid-lg-4": "MuiGrid-grid-lg-4-75",
                  "grid-lg-5": "MuiGrid-grid-lg-5-76",
                  "grid-lg-6": "MuiGrid-grid-lg-6-77",
                  "grid-lg-7": "MuiGrid-grid-lg-7-78",
                  "grid-lg-8": "MuiGrid-grid-lg-8-79",
                  "grid-lg-9": "MuiGrid-grid-lg-9-80",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                  "grid-lg-true": "MuiGrid-grid-lg-true-71",
                  "grid-md-1": "MuiGrid-grid-md-1-58",
                  "grid-md-10": "MuiGrid-grid-md-10-67",
                  "grid-md-11": "MuiGrid-grid-md-11-68",
                  "grid-md-12": "MuiGrid-grid-md-12-69",
                  "grid-md-2": "MuiGrid-grid-md-2-59",
                  "grid-md-3": "MuiGrid-grid-md-3-60",
                  "grid-md-4": "MuiGrid-grid-md-4-61",
                  "grid-md-5": "MuiGrid-grid-md-5-62",
                  "grid-md-6": "MuiGrid-grid-md-6-63",
                  "grid-md-7": "MuiGrid-grid-md-7-64",
                  "grid-md-8": "MuiGrid-grid-md-8-65",
                  "grid-md-9": "MuiGrid-grid-md-9-66",
                  "grid-md-auto": "MuiGrid-grid-md-auto-56",
                  "grid-md-true": "MuiGrid-grid-md-true-57",
                  "grid-sm-1": "MuiGrid-grid-sm-1-44",
                  "grid-sm-10": "MuiGrid-grid-sm-10-53",
                  "grid-sm-11": "MuiGrid-grid-sm-11-54",
                  "grid-sm-12": "MuiGrid-grid-sm-12-55",
                  "grid-sm-2": "MuiGrid-grid-sm-2-45",
                  "grid-sm-3": "MuiGrid-grid-sm-3-46",
                  "grid-sm-4": "MuiGrid-grid-sm-4-47",
                  "grid-sm-5": "MuiGrid-grid-sm-5-48",
                  "grid-sm-6": "MuiGrid-grid-sm-6-49",
                  "grid-sm-7": "MuiGrid-grid-sm-7-50",
                  "grid-sm-8": "MuiGrid-grid-sm-8-51",
                  "grid-sm-9": "MuiGrid-grid-sm-9-52",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                  "grid-sm-true": "MuiGrid-grid-sm-true-43",
                  "grid-xl-1": "MuiGrid-grid-xl-1-86",
                  "grid-xl-10": "MuiGrid-grid-xl-10-95",
                  "grid-xl-11": "MuiGrid-grid-xl-11-96",
                  "grid-xl-12": "MuiGrid-grid-xl-12-97",
                  "grid-xl-2": "MuiGrid-grid-xl-2-87",
                  "grid-xl-3": "MuiGrid-grid-xl-3-88",
                  "grid-xl-4": "MuiGrid-grid-xl-4-89",
                  "grid-xl-5": "MuiGrid-grid-xl-5-90",
                  "grid-xl-6": "MuiGrid-grid-xl-6-91",
                  "grid-xl-7": "MuiGrid-grid-xl-7-92",
                  "grid-xl-8": "MuiGrid-grid-xl-8-93",
                  "grid-xl-9": "MuiGrid-grid-xl-9-94",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                  "grid-xl-true": "MuiGrid-grid-xl-true-85",
                  "grid-xs-1": "MuiGrid-grid-xs-1-30",
                  "grid-xs-10": "MuiGrid-grid-xs-10-39",
                  "grid-xs-11": "MuiGrid-grid-xs-11-40",
                  "grid-xs-12": "MuiGrid-grid-xs-12-41",
                  "grid-xs-2": "MuiGrid-grid-xs-2-31",
                  "grid-xs-3": "MuiGrid-grid-xs-3-32",
                  "grid-xs-4": "MuiGrid-grid-xs-4-33",
                  "grid-xs-5": "MuiGrid-grid-xs-5-34",
                  "grid-xs-6": "MuiGrid-grid-xs-6-35",
                  "grid-xs-7": "MuiGrid-grid-xs-7-36",
                  "grid-xs-8": "MuiGrid-grid-xs-8-37",
                  "grid-xs-9": "MuiGrid-grid-xs-9-38",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                  "grid-xs-true": "MuiGrid-grid-xs-true-29",
                  "item": "MuiGrid-item-2",
                  "justify-xs-center": "MuiGrid-justify-xs-center-18",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                  "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                  "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                  "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                  "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                }
              }
              component="div"
              container={true}
              direction="row"
              item={false}
              justify="flex-start"
              lg={false}
              md={false}
              sm={false}
              spacing={16}
              wrap="wrap"
              xl={false}
              xs={false}
              zeroMinWidth={false}
            >
              <div
                className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-center-9 sc-bdVaJa eYFlKX"
              >
                <WithStyles(Grid)
                  item={true}
                  xs={1}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="stretch"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                        "container": "MuiGrid-container-1",
                        "direction-xs-column": "MuiGrid-direction-xs-column-4",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                        "grid-lg-1": "MuiGrid-grid-lg-1-72",
                        "grid-lg-10": "MuiGrid-grid-lg-10-81",
                        "grid-lg-11": "MuiGrid-grid-lg-11-82",
                        "grid-lg-12": "MuiGrid-grid-lg-12-83",
                        "grid-lg-2": "MuiGrid-grid-lg-2-73",
                        "grid-lg-3": "MuiGrid-grid-lg-3-74",
                        "grid-lg-4": "MuiGrid-grid-lg-4-75",
                        "grid-lg-5": "MuiGrid-grid-lg-5-76",
                        "grid-lg-6": "MuiGrid-grid-lg-6-77",
                        "grid-lg-7": "MuiGrid-grid-lg-7-78",
                        "grid-lg-8": "MuiGrid-grid-lg-8-79",
                        "grid-lg-9": "MuiGrid-grid-lg-9-80",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                        "grid-lg-true": "MuiGrid-grid-lg-true-71",
                        "grid-md-1": "MuiGrid-grid-md-1-58",
                        "grid-md-10": "MuiGrid-grid-md-10-67",
                        "grid-md-11": "MuiGrid-grid-md-11-68",
                        "grid-md-12": "MuiGrid-grid-md-12-69",
                        "grid-md-2": "MuiGrid-grid-md-2-59",
                        "grid-md-3": "MuiGrid-grid-md-3-60",
                        "grid-md-4": "MuiGrid-grid-md-4-61",
                        "grid-md-5": "MuiGrid-grid-md-5-62",
                        "grid-md-6": "MuiGrid-grid-md-6-63",
                        "grid-md-7": "MuiGrid-grid-md-7-64",
                        "grid-md-8": "MuiGrid-grid-md-8-65",
                        "grid-md-9": "MuiGrid-grid-md-9-66",
                        "grid-md-auto": "MuiGrid-grid-md-auto-56",
                        "grid-md-true": "MuiGrid-grid-md-true-57",
                        "grid-sm-1": "MuiGrid-grid-sm-1-44",
                        "grid-sm-10": "MuiGrid-grid-sm-10-53",
                        "grid-sm-11": "MuiGrid-grid-sm-11-54",
                        "grid-sm-12": "MuiGrid-grid-sm-12-55",
                        "grid-sm-2": "MuiGrid-grid-sm-2-45",
                        "grid-sm-3": "MuiGrid-grid-sm-3-46",
                        "grid-sm-4": "MuiGrid-grid-sm-4-47",
                        "grid-sm-5": "MuiGrid-grid-sm-5-48",
                        "grid-sm-6": "MuiGrid-grid-sm-6-49",
                        "grid-sm-7": "MuiGrid-grid-sm-7-50",
                        "grid-sm-8": "MuiGrid-grid-sm-8-51",
                        "grid-sm-9": "MuiGrid-grid-sm-9-52",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                        "grid-sm-true": "MuiGrid-grid-sm-true-43",
                        "grid-xl-1": "MuiGrid-grid-xl-1-86",
                        "grid-xl-10": "MuiGrid-grid-xl-10-95",
                        "grid-xl-11": "MuiGrid-grid-xl-11-96",
                        "grid-xl-12": "MuiGrid-grid-xl-12-97",
                        "grid-xl-2": "MuiGrid-grid-xl-2-87",
                        "grid-xl-3": "MuiGrid-grid-xl-3-88",
                        "grid-xl-4": "MuiGrid-grid-xl-4-89",
                        "grid-xl-5": "MuiGrid-grid-xl-5-90",
                        "grid-xl-6": "MuiGrid-grid-xl-6-91",
                        "grid-xl-7": "MuiGrid-grid-xl-7-92",
                        "grid-xl-8": "MuiGrid-grid-xl-8-93",
                        "grid-xl-9": "MuiGrid-grid-xl-9-94",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                        "grid-xl-true": "MuiGrid-grid-xl-true-85",
                        "grid-xs-1": "MuiGrid-grid-xs-1-30",
                        "grid-xs-10": "MuiGrid-grid-xs-10-39",
                        "grid-xs-11": "MuiGrid-grid-xs-11-40",
                        "grid-xs-12": "MuiGrid-grid-xs-12-41",
                        "grid-xs-2": "MuiGrid-grid-xs-2-31",
                        "grid-xs-3": "MuiGrid-grid-xs-3-32",
                        "grid-xs-4": "MuiGrid-grid-xs-4-33",
                        "grid-xs-5": "MuiGrid-grid-xs-5-34",
                        "grid-xs-6": "MuiGrid-grid-xs-6-35",
                        "grid-xs-7": "MuiGrid-grid-xs-7-36",
                        "grid-xs-8": "MuiGrid-grid-xs-8-37",
                        "grid-xs-9": "MuiGrid-grid-xs-9-38",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                        "grid-xs-true": "MuiGrid-grid-xs-true-29",
                        "item": "MuiGrid-item-2",
                        "justify-xs-center": "MuiGrid-justify-xs-center-18",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                      }
                    }
                    component="div"
                    container={false}
                    direction="row"
                    item={true}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={0}
                    wrap="wrap"
                    xl={false}
                    xs={1}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-item-2 MuiGrid-grid-xs-1-30"
                    >
                      <WithStyles(Checkbox)
                        checked={false}
                        disabled={false}
                        onChange={[Function]}
                      >
                        <Checkbox
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          classes={
                            Object {
                              "checked": "MuiCheckbox-checked-99",
                              "colorPrimary": "MuiCheckbox-colorPrimary-101",
                              "colorSecondary": "MuiCheckbox-colorSecondary-102",
                              "disabled": "MuiCheckbox-disabled-100",
                              "root": "MuiCheckbox-root-98",
                            }
                          }
                          color="secondary"
                          disabled={false}
                          icon={<pure(CheckBoxOutlineBlank) />}
                          indeterminate={false}
                          indeterminateIcon={<pure(IndeterminateCheckBox) />}
                          onChange={[Function]}
                        >
                          <WithStyles(SwitchBase)
                            checked={false}
                            checkedIcon={<pure(CheckBox) />}
                            classes={
                              Object {
                                "checked": "MuiCheckbox-checked-99",
                                "disabled": "MuiCheckbox-disabled-100",
                                "root": "MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102",
                              }
                            }
                            disabled={false}
                            icon={<pure(CheckBoxOutlineBlank) />}
                            onChange={[Function]}
                            type="checkbox"
                          >
                            <SwitchBase
                              checked={false}
                              checkedIcon={<pure(CheckBox) />}
                              classes={
                                Object {
                                  "checked": "MuiSwitchBase-checked-104 MuiCheckbox-checked-99",
                                  "disabled": "MuiSwitchBase-disabled-105 MuiCheckbox-disabled-100",
                                  "input": "MuiSwitchBase-input-106",
                                  "root": "MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102",
                                }
                              }
                              disabled={false}
                              icon={<pure(CheckBoxOutlineBlank) />}
                              onChange={[Function]}
                              type="checkbox"
                            >
                              <WithStyles(IconButton)
                                className="MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102"
                                component="span"
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <IconButton
                                  className="MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit-108",
                                      "colorPrimary": "MuiIconButton-colorPrimary-109",
                                      "colorSecondary": "MuiIconButton-colorSecondary-110",
                                      "disabled": "MuiIconButton-disabled-111",
                                      "label": "MuiIconButton-label-112",
                                      "root": "MuiIconButton-root-107",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <WithStyles(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root-107 MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102"
                                    component="span"
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ButtonBase
                                      centerRipple={true}
                                      className="MuiIconButton-root-107 MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102"
                                      classes={
                                        Object {
                                          "disabled": "MuiButtonBase-disabled-114",
                                          "focusVisible": "MuiButtonBase-focusVisible-115",
                                          "root": "MuiButtonBase-root-113",
                                        }
                                      }
                                      component="span"
                                      disableRipple={false}
                                      disableTouchRipple={false}
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                      type="button"
                                    >
                                      <span
                                        className="MuiButtonBase-root-113 MuiIconButton-root-107 MuiSwitchBase-root-103 MuiCheckbox-root-98 MuiCheckbox-colorSecondary-102"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label-112"
                                        >
                                          <pure(CheckBoxOutlineBlank)>
                                            <CheckBoxOutlineBlank>
                                              <WithStyles(SvgIcon)>
                                                <SvgIcon
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction-119",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                      "colorError": "MuiSvgIcon-colorError-120",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                      "root": "MuiSvgIcon-root-116",
                                                    }
                                                  }
                                                  color="inherit"
                                                  component="svg"
                                                  fontSize="default"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root-116"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                    />
                                                  </svg>
                                                </SvgIcon>
                                              </WithStyles(SvgIcon)>
                                            </CheckBoxOutlineBlank>
                                          </pure(CheckBoxOutlineBlank)>
                                          <input
                                            checked={false}
                                            className="MuiSwitchBase-input-106"
                                            disabled={false}
                                            onChange={[Function]}
                                            type="checkbox"
                                          />
                                        </span>
                                        <WithStyles(TouchRipple)
                                          center={true}
                                          innerRef={[Function]}
                                        >
                                          <TouchRipple
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child-127",
                                                "childLeaving": "MuiTouchRipple-childLeaving-128",
                                                "childPulsate": "MuiTouchRipple-childPulsate-129",
                                                "ripple": "MuiTouchRipple-ripple-124",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-126",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible-125",
                                                "root": "MuiTouchRipple-root-123",
                                              }
                                            }
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              className="MuiTouchRipple-root-123"
                                              component="span"
                                              enter={true}
                                              exit={true}
                                            >
                                              <span
                                                className="MuiTouchRipple-root-123"
                                              />
                                            </TransitionGroup>
                                          </TouchRipple>
                                        </WithStyles(TouchRipple)>
                                      </span>
                                    </ButtonBase>
                                  </WithStyles(ButtonBase)>
                                </IconButton>
                              </WithStyles(IconButton)>
                            </SwitchBase>
                          </WithStyles(SwitchBase)>
                        </Checkbox>
                      </WithStyles(Checkbox)>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
                <Styled(WithStyles(Grid))
                  item={true}
                  xs={7}
                >
                  <WithStyles(Grid)
                    className="sc-bwzfXH iNNlGz"
                    item={true}
                    xs={7}
                  >
                    <Grid
                      alignContent="stretch"
                      alignItems="stretch"
                      className="sc-bwzfXH iNNlGz"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={false}
                      direction="row"
                      item={true}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={0}
                      wrap="wrap"
                      xl={false}
                      xs={7}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-item-2 MuiGrid-grid-xs-7-36 sc-bwzfXH iNNlGz"
                      >
                        <WithStyles(ListItemText)
                          primary={
                            <React.Fragment>
                              <Styled(Component)
                                to=""
                              >
                                en
                              </Styled(Component)>
                                - [transcription]
                            </React.Fragment>
                          }
                          secondary="Last learnt: 19 years ago"
                        >
                          <ListItemText
                            classes={
                              Object {
                                "dense": "MuiListItemText-dense-132",
                                "inset": "MuiListItemText-inset-131",
                                "primary": "MuiListItemText-primary-133",
                                "root": "MuiListItemText-root-130",
                                "secondary": "MuiListItemText-secondary-134",
                                "textDense": "MuiListItemText-textDense-135",
                              }
                            }
                            disableTypography={false}
                            inset={false}
                            primary={
                              <React.Fragment>
                                <Styled(Component)
                                  to=""
                                >
                                  en
                                </Styled(Component)>
                                  - [transcription]
                              </React.Fragment>
                            }
                            secondary="Last learnt: 19 years ago"
                          >
                            <div
                              className="MuiListItemText-root-130"
                            >
                              <WithStyles(Typography)
                                className="MuiListItemText-primary-133"
                                component="span"
                                variant="subheading"
                              >
                                <Typography
                                  align="inherit"
                                  className="MuiListItemText-primary-133"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter-149",
                                      "alignJustify": "MuiTypography-alignJustify-151",
                                      "alignLeft": "MuiTypography-alignLeft-148",
                                      "alignRight": "MuiTypography-alignRight-150",
                                      "body1": "MuiTypography-body1-145",
                                      "body2": "MuiTypography-body2-144",
                                      "button": "MuiTypography-button-147",
                                      "caption": "MuiTypography-caption-146",
                                      "colorError": "MuiTypography-colorError-160",
                                      "colorInherit": "MuiTypography-colorInherit-155",
                                      "colorPrimary": "MuiTypography-colorPrimary-156",
                                      "colorSecondary": "MuiTypography-colorSecondary-157",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-158",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-159",
                                      "display1": "MuiTypography-display1-140",
                                      "display2": "MuiTypography-display2-139",
                                      "display3": "MuiTypography-display3-138",
                                      "display4": "MuiTypography-display4-137",
                                      "gutterBottom": "MuiTypography-gutterBottom-153",
                                      "headline": "MuiTypography-headline-141",
                                      "noWrap": "MuiTypography-noWrap-152",
                                      "paragraph": "MuiTypography-paragraph-154",
                                      "root": "MuiTypography-root-136",
                                      "subheading": "MuiTypography-subheading-143",
                                      "title": "MuiTypography-title-142",
                                    }
                                  }
                                  color="default"
                                  component="span"
                                  gutterBottom={false}
                                  headlineMapping={
                                    Object {
                                      "body1": "p",
                                      "body2": "aside",
                                      "display1": "h1",
                                      "display2": "h1",
                                      "display3": "h1",
                                      "display4": "h1",
                                      "headline": "h1",
                                      "subheading": "h3",
                                      "title": "h2",
                                    }
                                  }
                                  noWrap={false}
                                  paragraph={false}
                                  variant="subheading"
                                >
                                  <span
                                    className="MuiTypography-root-136 MuiTypography-subheading-143 MuiListItemText-primary-133"
                                  >
                                    <Styled(Component)
                                      to=""
                                    >
                                      <Component
                                        className="sc-htpNat gKXxfi"
                                        to=""
                                      >
                                        <Link
                                          className="sc-htpNat gKXxfi"
                                          replace={false}
                                          to=""
                                        >
                                          <a
                                            className="sc-htpNat gKXxfi"
                                            href="/"
                                            onClick={[Function]}
                                          >
                                            en
                                          </a>
                                        </Link>
                                      </Component>
                                    </Styled(Component)>
                                      - [transcription]
                                  </span>
                                </Typography>
                              </WithStyles(Typography)>
                              <WithStyles(Typography)
                                className="MuiListItemText-secondary-134"
                                color="textSecondary"
                                variant="body1"
                              >
                                <Typography
                                  align="inherit"
                                  className="MuiListItemText-secondary-134"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter-149",
                                      "alignJustify": "MuiTypography-alignJustify-151",
                                      "alignLeft": "MuiTypography-alignLeft-148",
                                      "alignRight": "MuiTypography-alignRight-150",
                                      "body1": "MuiTypography-body1-145",
                                      "body2": "MuiTypography-body2-144",
                                      "button": "MuiTypography-button-147",
                                      "caption": "MuiTypography-caption-146",
                                      "colorError": "MuiTypography-colorError-160",
                                      "colorInherit": "MuiTypography-colorInherit-155",
                                      "colorPrimary": "MuiTypography-colorPrimary-156",
                                      "colorSecondary": "MuiTypography-colorSecondary-157",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-158",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-159",
                                      "display1": "MuiTypography-display1-140",
                                      "display2": "MuiTypography-display2-139",
                                      "display3": "MuiTypography-display3-138",
                                      "display4": "MuiTypography-display4-137",
                                      "gutterBottom": "MuiTypography-gutterBottom-153",
                                      "headline": "MuiTypography-headline-141",
                                      "noWrap": "MuiTypography-noWrap-152",
                                      "paragraph": "MuiTypography-paragraph-154",
                                      "root": "MuiTypography-root-136",
                                      "subheading": "MuiTypography-subheading-143",
                                      "title": "MuiTypography-title-142",
                                    }
                                  }
                                  color="textSecondary"
                                  gutterBottom={false}
                                  headlineMapping={
                                    Object {
                                      "body1": "p",
                                      "body2": "aside",
                                      "display1": "h1",
                                      "display2": "h1",
                                      "display3": "h1",
                                      "display4": "h1",
                                      "headline": "h1",
                                      "subheading": "h3",
                                      "title": "h2",
                                    }
                                  }
                                  noWrap={false}
                                  paragraph={false}
                                  variant="body1"
                                >
                                  <p
                                    className="MuiTypography-root-136 MuiTypography-body1-145 MuiTypography-colorTextSecondary-159 MuiListItemText-secondary-134"
                                  >
                                    Last learnt: 19 years ago
                                  </p>
                                </Typography>
                              </WithStyles(Typography)>
                            </div>
                          </ListItemText>
                        </WithStyles(ListItemText)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </Styled(WithStyles(Grid))>
                <WithStyles(Grid)
                  item={true}
                  xs={3}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="stretch"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                        "container": "MuiGrid-container-1",
                        "direction-xs-column": "MuiGrid-direction-xs-column-4",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                        "grid-lg-1": "MuiGrid-grid-lg-1-72",
                        "grid-lg-10": "MuiGrid-grid-lg-10-81",
                        "grid-lg-11": "MuiGrid-grid-lg-11-82",
                        "grid-lg-12": "MuiGrid-grid-lg-12-83",
                        "grid-lg-2": "MuiGrid-grid-lg-2-73",
                        "grid-lg-3": "MuiGrid-grid-lg-3-74",
                        "grid-lg-4": "MuiGrid-grid-lg-4-75",
                        "grid-lg-5": "MuiGrid-grid-lg-5-76",
                        "grid-lg-6": "MuiGrid-grid-lg-6-77",
                        "grid-lg-7": "MuiGrid-grid-lg-7-78",
                        "grid-lg-8": "MuiGrid-grid-lg-8-79",
                        "grid-lg-9": "MuiGrid-grid-lg-9-80",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                        "grid-lg-true": "MuiGrid-grid-lg-true-71",
                        "grid-md-1": "MuiGrid-grid-md-1-58",
                        "grid-md-10": "MuiGrid-grid-md-10-67",
                        "grid-md-11": "MuiGrid-grid-md-11-68",
                        "grid-md-12": "MuiGrid-grid-md-12-69",
                        "grid-md-2": "MuiGrid-grid-md-2-59",
                        "grid-md-3": "MuiGrid-grid-md-3-60",
                        "grid-md-4": "MuiGrid-grid-md-4-61",
                        "grid-md-5": "MuiGrid-grid-md-5-62",
                        "grid-md-6": "MuiGrid-grid-md-6-63",
                        "grid-md-7": "MuiGrid-grid-md-7-64",
                        "grid-md-8": "MuiGrid-grid-md-8-65",
                        "grid-md-9": "MuiGrid-grid-md-9-66",
                        "grid-md-auto": "MuiGrid-grid-md-auto-56",
                        "grid-md-true": "MuiGrid-grid-md-true-57",
                        "grid-sm-1": "MuiGrid-grid-sm-1-44",
                        "grid-sm-10": "MuiGrid-grid-sm-10-53",
                        "grid-sm-11": "MuiGrid-grid-sm-11-54",
                        "grid-sm-12": "MuiGrid-grid-sm-12-55",
                        "grid-sm-2": "MuiGrid-grid-sm-2-45",
                        "grid-sm-3": "MuiGrid-grid-sm-3-46",
                        "grid-sm-4": "MuiGrid-grid-sm-4-47",
                        "grid-sm-5": "MuiGrid-grid-sm-5-48",
                        "grid-sm-6": "MuiGrid-grid-sm-6-49",
                        "grid-sm-7": "MuiGrid-grid-sm-7-50",
                        "grid-sm-8": "MuiGrid-grid-sm-8-51",
                        "grid-sm-9": "MuiGrid-grid-sm-9-52",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                        "grid-sm-true": "MuiGrid-grid-sm-true-43",
                        "grid-xl-1": "MuiGrid-grid-xl-1-86",
                        "grid-xl-10": "MuiGrid-grid-xl-10-95",
                        "grid-xl-11": "MuiGrid-grid-xl-11-96",
                        "grid-xl-12": "MuiGrid-grid-xl-12-97",
                        "grid-xl-2": "MuiGrid-grid-xl-2-87",
                        "grid-xl-3": "MuiGrid-grid-xl-3-88",
                        "grid-xl-4": "MuiGrid-grid-xl-4-89",
                        "grid-xl-5": "MuiGrid-grid-xl-5-90",
                        "grid-xl-6": "MuiGrid-grid-xl-6-91",
                        "grid-xl-7": "MuiGrid-grid-xl-7-92",
                        "grid-xl-8": "MuiGrid-grid-xl-8-93",
                        "grid-xl-9": "MuiGrid-grid-xl-9-94",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                        "grid-xl-true": "MuiGrid-grid-xl-true-85",
                        "grid-xs-1": "MuiGrid-grid-xs-1-30",
                        "grid-xs-10": "MuiGrid-grid-xs-10-39",
                        "grid-xs-11": "MuiGrid-grid-xs-11-40",
                        "grid-xs-12": "MuiGrid-grid-xs-12-41",
                        "grid-xs-2": "MuiGrid-grid-xs-2-31",
                        "grid-xs-3": "MuiGrid-grid-xs-3-32",
                        "grid-xs-4": "MuiGrid-grid-xs-4-33",
                        "grid-xs-5": "MuiGrid-grid-xs-5-34",
                        "grid-xs-6": "MuiGrid-grid-xs-6-35",
                        "grid-xs-7": "MuiGrid-grid-xs-7-36",
                        "grid-xs-8": "MuiGrid-grid-xs-8-37",
                        "grid-xs-9": "MuiGrid-grid-xs-9-38",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                        "grid-xs-true": "MuiGrid-grid-xs-true-29",
                        "item": "MuiGrid-item-2",
                        "justify-xs-center": "MuiGrid-justify-xs-center-18",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                      }
                    }
                    component="div"
                    container={false}
                    direction="row"
                    item={true}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={0}
                    wrap="wrap"
                    xl={false}
                    xs={3}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-item-2 MuiGrid-grid-xs-3-32"
                    >
                      <styled.div>
                        <div
                          className="sc-bxivhb gRBOxh"
                        >
                          19 years ago
                        </div>
                      </styled.div>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  xs={1}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="stretch"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                        "container": "MuiGrid-container-1",
                        "direction-xs-column": "MuiGrid-direction-xs-column-4",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                        "grid-lg-1": "MuiGrid-grid-lg-1-72",
                        "grid-lg-10": "MuiGrid-grid-lg-10-81",
                        "grid-lg-11": "MuiGrid-grid-lg-11-82",
                        "grid-lg-12": "MuiGrid-grid-lg-12-83",
                        "grid-lg-2": "MuiGrid-grid-lg-2-73",
                        "grid-lg-3": "MuiGrid-grid-lg-3-74",
                        "grid-lg-4": "MuiGrid-grid-lg-4-75",
                        "grid-lg-5": "MuiGrid-grid-lg-5-76",
                        "grid-lg-6": "MuiGrid-grid-lg-6-77",
                        "grid-lg-7": "MuiGrid-grid-lg-7-78",
                        "grid-lg-8": "MuiGrid-grid-lg-8-79",
                        "grid-lg-9": "MuiGrid-grid-lg-9-80",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                        "grid-lg-true": "MuiGrid-grid-lg-true-71",
                        "grid-md-1": "MuiGrid-grid-md-1-58",
                        "grid-md-10": "MuiGrid-grid-md-10-67",
                        "grid-md-11": "MuiGrid-grid-md-11-68",
                        "grid-md-12": "MuiGrid-grid-md-12-69",
                        "grid-md-2": "MuiGrid-grid-md-2-59",
                        "grid-md-3": "MuiGrid-grid-md-3-60",
                        "grid-md-4": "MuiGrid-grid-md-4-61",
                        "grid-md-5": "MuiGrid-grid-md-5-62",
                        "grid-md-6": "MuiGrid-grid-md-6-63",
                        "grid-md-7": "MuiGrid-grid-md-7-64",
                        "grid-md-8": "MuiGrid-grid-md-8-65",
                        "grid-md-9": "MuiGrid-grid-md-9-66",
                        "grid-md-auto": "MuiGrid-grid-md-auto-56",
                        "grid-md-true": "MuiGrid-grid-md-true-57",
                        "grid-sm-1": "MuiGrid-grid-sm-1-44",
                        "grid-sm-10": "MuiGrid-grid-sm-10-53",
                        "grid-sm-11": "MuiGrid-grid-sm-11-54",
                        "grid-sm-12": "MuiGrid-grid-sm-12-55",
                        "grid-sm-2": "MuiGrid-grid-sm-2-45",
                        "grid-sm-3": "MuiGrid-grid-sm-3-46",
                        "grid-sm-4": "MuiGrid-grid-sm-4-47",
                        "grid-sm-5": "MuiGrid-grid-sm-5-48",
                        "grid-sm-6": "MuiGrid-grid-sm-6-49",
                        "grid-sm-7": "MuiGrid-grid-sm-7-50",
                        "grid-sm-8": "MuiGrid-grid-sm-8-51",
                        "grid-sm-9": "MuiGrid-grid-sm-9-52",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                        "grid-sm-true": "MuiGrid-grid-sm-true-43",
                        "grid-xl-1": "MuiGrid-grid-xl-1-86",
                        "grid-xl-10": "MuiGrid-grid-xl-10-95",
                        "grid-xl-11": "MuiGrid-grid-xl-11-96",
                        "grid-xl-12": "MuiGrid-grid-xl-12-97",
                        "grid-xl-2": "MuiGrid-grid-xl-2-87",
                        "grid-xl-3": "MuiGrid-grid-xl-3-88",
                        "grid-xl-4": "MuiGrid-grid-xl-4-89",
                        "grid-xl-5": "MuiGrid-grid-xl-5-90",
                        "grid-xl-6": "MuiGrid-grid-xl-6-91",
                        "grid-xl-7": "MuiGrid-grid-xl-7-92",
                        "grid-xl-8": "MuiGrid-grid-xl-8-93",
                        "grid-xl-9": "MuiGrid-grid-xl-9-94",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                        "grid-xl-true": "MuiGrid-grid-xl-true-85",
                        "grid-xs-1": "MuiGrid-grid-xs-1-30",
                        "grid-xs-10": "MuiGrid-grid-xs-10-39",
                        "grid-xs-11": "MuiGrid-grid-xs-11-40",
                        "grid-xs-12": "MuiGrid-grid-xs-12-41",
                        "grid-xs-2": "MuiGrid-grid-xs-2-31",
                        "grid-xs-3": "MuiGrid-grid-xs-3-32",
                        "grid-xs-4": "MuiGrid-grid-xs-4-33",
                        "grid-xs-5": "MuiGrid-grid-xs-5-34",
                        "grid-xs-6": "MuiGrid-grid-xs-6-35",
                        "grid-xs-7": "MuiGrid-grid-xs-7-36",
                        "grid-xs-8": "MuiGrid-grid-xs-8-37",
                        "grid-xs-9": "MuiGrid-grid-xs-9-38",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                        "grid-xs-true": "MuiGrid-grid-xs-true-29",
                        "item": "MuiGrid-item-2",
                        "justify-xs-center": "MuiGrid-justify-xs-center-18",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                      }
                    }
                    component="div"
                    container={false}
                    direction="row"
                    item={true}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={0}
                    wrap="wrap"
                    xl={false}
                    xs={1}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-item-2 MuiGrid-grid-xs-1-30"
                    >
                      <withRouter(ButtonWithRouter)
                        disabled={false}
                        title="Edit"
                        to="/words-list/_id/edit?"
                      >
                        <Route>
                          <ButtonWithRouter
                            disabled={false}
                            history={
                              Object {
                                "action": "POP",
                                "block": [Function],
                                "createHref": [Function],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              }
                            }
                            location={
                              Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              }
                            }
                            match={
                              Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              }
                            }
                            title="Edit"
                            to="/words-list/_id/edit?"
                          >
                            <ButtonControl
                              color="primary"
                              component={[Function]}
                              disabled={false}
                              history={
                                Object {
                                  "action": "POP",
                                  "block": [Function],
                                  "createHref": [Function],
                                  "go": [Function],
                                  "goBack": [Function],
                                  "goForward": [Function],
                                  "length": 1,
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                }
                              }
                              isActive={false}
                              match={
                                Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                }
                              }
                              title="Edit"
                              to="/words-list/_id/edit?"
                            >
                              <Styled(Component)
                                classes={Object {}}
                                color="primary"
                                component={[Function]}
                                disabled={false}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "createHref": [Function],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                isActive={false}
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                mini={true}
                                title="Edit"
                                to="/words-list/_id/edit?"
                                variant="fab"
                              >
                                <Component
                                  className="sc-EHOje kwotwU"
                                  classes={Object {}}
                                  color="primary"
                                  component={[Function]}
                                  disabled={false}
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "createHref": [Function],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  isActive={false}
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  mini={true}
                                  title="Edit"
                                  to="/words-list/_id/edit?"
                                  variant="fab"
                                >
                                  <WithStyles(Button)
                                    className="sc-EHOje kwotwU"
                                    classes={Object {}}
                                    color="primary"
                                    component={[Function]}
                                    disabled={false}
                                    history={
                                      Object {
                                        "action": "POP",
                                        "block": [Function],
                                        "createHref": [Function],
                                        "go": [Function],
                                        "goBack": [Function],
                                        "goForward": [Function],
                                        "length": 1,
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      }
                                    }
                                    match={
                                      Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      }
                                    }
                                    mini={true}
                                    title="Edit"
                                    to="/words-list/_id/edit?"
                                    variant="fab"
                                  >
                                    <Button
                                      className="sc-EHOje kwotwU"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit-182",
                                          "contained": "MuiButton-contained-172",
                                          "containedPrimary": "MuiButton-containedPrimary-173",
                                          "containedSecondary": "MuiButton-containedSecondary-174",
                                          "disabled": "MuiButton-disabled-181",
                                          "extendedFab": "MuiButton-extendedFab-179",
                                          "fab": "MuiButton-fab-178",
                                          "flat": "MuiButton-flat-166",
                                          "flatPrimary": "MuiButton-flatPrimary-167",
                                          "flatSecondary": "MuiButton-flatSecondary-168",
                                          "focusVisible": "MuiButton-focusVisible-180",
                                          "fullWidth": "MuiButton-fullWidth-186",
                                          "label": "MuiButton-label-162",
                                          "mini": "MuiButton-mini-183",
                                          "outlined": "MuiButton-outlined-169",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary-170",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary-171",
                                          "raised": "MuiButton-raised-175",
                                          "raisedPrimary": "MuiButton-raisedPrimary-176",
                                          "raisedSecondary": "MuiButton-raisedSecondary-177",
                                          "root": "MuiButton-root-161",
                                          "sizeLarge": "MuiButton-sizeLarge-185",
                                          "sizeSmall": "MuiButton-sizeSmall-184",
                                          "text": "MuiButton-text-163",
                                          "textPrimary": "MuiButton-textPrimary-164",
                                          "textSecondary": "MuiButton-textSecondary-165",
                                        }
                                      }
                                      color="primary"
                                      component={[Function]}
                                      disableFocusRipple={false}
                                      disabled={false}
                                      fullWidth={false}
                                      history={
                                        Object {
                                          "action": "POP",
                                          "block": [Function],
                                          "createHref": [Function],
                                          "go": [Function],
                                          "goBack": [Function],
                                          "goForward": [Function],
                                          "length": 1,
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        }
                                      }
                                      match={
                                        Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        }
                                      }
                                      mini={true}
                                      size="medium"
                                      title="Edit"
                                      to="/words-list/_id/edit?"
                                      type="button"
                                      variant="fab"
                                    >
                                      <WithStyles(ButtonBase)
                                        className="MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 sc-EHOje kwotwU"
                                        component={[Function]}
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="MuiButton-focusVisible-180"
                                        history={
                                          Object {
                                            "action": "POP",
                                            "block": [Function],
                                            "createHref": [Function],
                                            "go": [Function],
                                            "goBack": [Function],
                                            "goForward": [Function],
                                            "length": 1,
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "pathname": "/",
                                              "search": "",
                                              "state": undefined,
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          }
                                        }
                                        match={
                                          Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          }
                                        }
                                        title="Edit"
                                        to="/words-list/_id/edit?"
                                        type="button"
                                      >
                                        <ButtonBase
                                          centerRipple={false}
                                          className="MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 sc-EHOje kwotwU"
                                          classes={
                                            Object {
                                              "disabled": "MuiButtonBase-disabled-114",
                                              "focusVisible": "MuiButtonBase-focusVisible-115",
                                              "root": "MuiButtonBase-root-113",
                                            }
                                          }
                                          component={[Function]}
                                          disableRipple={false}
                                          disableTouchRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="MuiButton-focusVisible-180"
                                          history={
                                            Object {
                                              "action": "POP",
                                              "block": [Function],
                                              "createHref": [Function],
                                              "go": [Function],
                                              "goBack": [Function],
                                              "goForward": [Function],
                                              "length": 1,
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "pathname": "/",
                                                "search": "",
                                                "state": undefined,
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            }
                                          }
                                          match={
                                            Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            }
                                          }
                                          tabIndex="0"
                                          title="Edit"
                                          to="/words-list/_id/edit?"
                                          type="button"
                                        >
                                          <Link
                                            className="MuiButtonBase-root-113 MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 sc-EHOje kwotwU"
                                            history={
                                              Object {
                                                "action": "POP",
                                                "block": [Function],
                                                "createHref": [Function],
                                                "go": [Function],
                                                "goBack": [Function],
                                                "goForward": [Function],
                                                "length": 1,
                                                "listen": [Function],
                                                "location": Object {
                                                  "hash": "",
                                                  "pathname": "/",
                                                  "search": "",
                                                  "state": undefined,
                                                },
                                                "push": [Function],
                                                "replace": [Function],
                                              }
                                            }
                                            match={
                                              Object {
                                                "isExact": true,
                                                "params": Object {},
                                                "path": "/",
                                                "url": "/",
                                              }
                                            }
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            replace={false}
                                            role="button"
                                            tabIndex="0"
                                            title="Edit"
                                            to="/words-list/_id/edit?"
                                          >
                                            <a
                                              className="MuiButtonBase-root-113 MuiButton-root-161 MuiButton-fab-178 MuiButton-mini-183 MuiButton-contained-172 MuiButton-containedPrimary-173 MuiButton-raised-175 MuiButton-raisedPrimary-176 sc-EHOje kwotwU"
                                              history={
                                                Object {
                                                  "action": "POP",
                                                  "block": [Function],
                                                  "createHref": [Function],
                                                  "go": [Function],
                                                  "goBack": [Function],
                                                  "goForward": [Function],
                                                  "length": 1,
                                                  "listen": [Function],
                                                  "location": Object {
                                                    "hash": "",
                                                    "pathname": "/",
                                                    "search": "",
                                                    "state": undefined,
                                                  },
                                                  "push": [Function],
                                                  "replace": [Function],
                                                }
                                              }
                                              href="/words-list/_id/edit"
                                              match={
                                                Object {
                                                  "isExact": true,
                                                  "params": Object {},
                                                  "path": "/",
                                                  "url": "/",
                                                }
                                              }
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex="0"
                                              title="Edit"
                                            >
                                              <span
                                                className="MuiButton-label-162"
                                              >
                                                <pure(Edit)>
                                                  <Edit>
                                                    <WithStyles(SvgIcon)>
                                                      <SvgIcon
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-120",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                                            "root": "MuiSvgIcon-root-116",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="svg"
                                                        fontSize="default"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-116"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                          <path
                                                            d="M0 0h24v24H0z"
                                                            fill="none"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={false}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child-127",
                                                      "childLeaving": "MuiTouchRipple-childLeaving-128",
                                                      "childPulsate": "MuiTouchRipple-childPulsate-129",
                                                      "ripple": "MuiTouchRipple-ripple-124",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-126",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-125",
                                                      "root": "MuiTouchRipple-root-123",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-123"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-123"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </a>
                                          </Link>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Button>
                                  </WithStyles(Button)>
                                </Component>
                              </Styled(Component)>
                            </ButtonControl>
                          </ButtonWithRouter>
                        </Route>
                      </withRouter(ButtonWithRouter)>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
              </div>
            </Grid>
          </WithStyles(Grid)>
        </Component>
      </Styled(Component)>
    </WordItemInList>
  </Router>
</BrowserRouter>
`;
