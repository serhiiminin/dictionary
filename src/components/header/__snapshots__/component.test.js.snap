// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <h1>
          <Unknown
                    to="/"
          >
                    The dictionary
          </Unknown>
</h1>,
        <HeaderNavigation />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown
            to="/"
>
            The dictionary
</Unknown>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "The dictionary",
            "to": "/",
          },
          "ref": null,
          "rendered": "The dictionary",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-eHgmQL",
              "isStatic": false,
              "rules": Array [
                "
  color: ",
                [Function],
                ";
  text-decoration: none;
  font-size: 1.5rem;
",
              ],
            },
            "displayName": "Styled(Link)",
            "render": [Function],
            "styledComponentId": "sc-eHgmQL",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-hSdWYo",
        "isStatic": false,
        "rules": Array [
          "
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  padding: ",
          [Function],
          " 0;
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-hSdWYo",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h1>
            <Unknown
                        to="/"
            >
                        The dictionary
            </Unknown>
</h1>,
          <HeaderNavigation />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown
              to="/"
>
              The dictionary
</Unknown>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "The dictionary",
              "to": "/",
            },
            "ref": null,
            "rendered": "The dictionary",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-eHgmQL",
                "isStatic": false,
                "rules": Array [
                  "
  color: ",
                  [Function],
                  ";
  text-decoration: none;
  font-size: 1.5rem;
",
                ],
              },
              "displayName": "Styled(Link)",
              "render": [Function],
              "styledComponentId": "sc-eHgmQL",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-hSdWYo",
          "isStatic": false,
          "rules": Array [
            "
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  padding: ",
            [Function],
            " 0;
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-hSdWYo",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
