// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pagination components Page 1`] = `
<div
  className="sc-hSdWYo cYOSXi"
>
  Anything
</div>
`;

exports[`Pagination page number > 1 1`] = `
<Pagination
  maxPageCount={10}
  onChangePage={[Function]}
  pageNumber={2}
>
  <styled.div>
    <div
      className="sc-hSdWYo cYOSXi"
    >
      <ButtonControl
        color="primary"
        disabled={false}
        onClick={[Function]}
        title="Previous page"
      >
        <Styled(Component)
          classes={Object {}}
          color="primary"
          disabled={false}
          isActive={false}
          mini={true}
          onClick={[Function]}
          title="Previous page"
          variant="fab"
        >
          <Component
            className="sc-bwzfXH fTMPew"
            classes={Object {}}
            color="primary"
            disabled={false}
            isActive={false}
            mini={true}
            onClick={[Function]}
            title="Previous page"
            variant="fab"
          >
            <WithStyles(Button)
              className="sc-bwzfXH fTMPew"
              classes={Object {}}
              color="primary"
              disabled={false}
              mini={true}
              onClick={[Function]}
              title="Previous page"
              variant="fab"
            >
              <Button
                className="sc-bwzfXH fTMPew"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit-22",
                    "contained": "MuiButton-contained-12",
                    "containedPrimary": "MuiButton-containedPrimary-13",
                    "containedSecondary": "MuiButton-containedSecondary-14",
                    "disabled": "MuiButton-disabled-21",
                    "extendedFab": "MuiButton-extendedFab-19",
                    "fab": "MuiButton-fab-18",
                    "flat": "MuiButton-flat-6",
                    "flatPrimary": "MuiButton-flatPrimary-7",
                    "flatSecondary": "MuiButton-flatSecondary-8",
                    "focusVisible": "MuiButton-focusVisible-20",
                    "fullWidth": "MuiButton-fullWidth-26",
                    "label": "MuiButton-label-2",
                    "mini": "MuiButton-mini-23",
                    "outlined": "MuiButton-outlined-9",
                    "outlinedPrimary": "MuiButton-outlinedPrimary-10",
                    "outlinedSecondary": "MuiButton-outlinedSecondary-11",
                    "raised": "MuiButton-raised-15",
                    "raisedPrimary": "MuiButton-raisedPrimary-16",
                    "raisedSecondary": "MuiButton-raisedSecondary-17",
                    "root": "MuiButton-root-1",
                    "sizeLarge": "MuiButton-sizeLarge-25",
                    "sizeSmall": "MuiButton-sizeSmall-24",
                    "text": "MuiButton-text-3",
                    "textPrimary": "MuiButton-textPrimary-4",
                    "textSecondary": "MuiButton-textSecondary-5",
                  }
                }
                color="primary"
                component="button"
                disableFocusRipple={false}
                disabled={false}
                fullWidth={false}
                mini={true}
                onClick={[Function]}
                size="medium"
                title="Previous page"
                type="button"
                variant="fab"
              >
                <WithStyles(ButtonBase)
                  className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-20"
                  onClick={[Function]}
                  title="Previous page"
                  type="button"
                >
                  <ButtonBase
                    centerRipple={false}
                    className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                    classes={
                      Object {
                        "disabled": "MuiButtonBase-disabled-28",
                        "focusVisible": "MuiButtonBase-focusVisible-29",
                        "root": "MuiButtonBase-root-27",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disableTouchRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="MuiButton-focusVisible-20"
                    onClick={[Function]}
                    tabIndex="0"
                    title="Previous page"
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root-27 MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex="0"
                      title="Previous page"
                      type="button"
                    >
                      <span
                        className="MuiButton-label-2"
                      >
                        <pure(KeyboardArrowLeft)>
                          <KeyboardArrowLeft>
                            <WithStyles(SvgIcon)>
                              <SvgIcon
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction-33",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled-35",
                                    "colorError": "MuiSvgIcon-colorError-34",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary-31",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary-32",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-36",
                                    "root": "MuiSvgIcon-root-30",
                                  }
                                }
                                color="inherit"
                                component="svg"
                                fontSize="default"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-30"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
                                  />
                                  <path
                                    d="M0 0h24v24H0V0z"
                                    fill="none"
                                  />
                                </svg>
                              </SvgIcon>
                            </WithStyles(SvgIcon)>
                          </KeyboardArrowLeft>
                        </pure(KeyboardArrowLeft)>
                      </span>
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-70",
                              "childLeaving": "MuiTouchRipple-childLeaving-71",
                              "childPulsate": "MuiTouchRipple-childPulsate-72",
                              "ripple": "MuiTouchRipple-ripple-67",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-69",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-68",
                              "root": "MuiTouchRipple-root-66",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-66"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-66"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </Component>
        </Styled(Component)>
      </ButtonControl>
      <styled.div>
        <div
          className="sc-eHgmQL fOBgpo"
        >
          <TextFieldCustomized
            classes={Object {}}
            control={null}
            label="Page 2 of 10"
            onChange={[Function]}
            value={2}
          >
            <styled.div
              control={null}
            >
              <div
                className="sc-dxgOiQ kzOlie"
              >
                <TextField
                  label="Page 2 of 10"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  value={2}
                >
                  <WithStyles(FormControl)
                    required={false}
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-40",
                          "marginDense": "MuiFormControl-marginDense-39",
                          "marginNormal": "MuiFormControl-marginNormal-38",
                          "root": "MuiFormControl-root-37",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={false}
                      margin="none"
                      required={false}
                    >
                      <div
                        className="MuiFormControl-root-37"
                      >
                        <WithStyles(InputLabel)>
                          <InputLabel
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated-45",
                                "formControl": "MuiInputLabel-formControl-42",
                                "marginDense": "MuiInputLabel-marginDense-43",
                                "root": "MuiInputLabel-root-41",
                                "shrink": "MuiInputLabel-shrink-44",
                              }
                            }
                            disableAnimation={false}
                          >
                            <WithStyles(FormLabel)
                              className="MuiInputLabel-root-41 MuiInputLabel-formControl-42 MuiInputLabel-animated-45 MuiInputLabel-shrink-44"
                              data-shrink={true}
                            >
                              <FormLabel
                                className="MuiInputLabel-root-41 MuiInputLabel-formControl-42 MuiInputLabel-animated-45 MuiInputLabel-shrink-44"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-52",
                                    "disabled": "MuiFormLabel-disabled-48",
                                    "error": "MuiFormLabel-error-49",
                                    "filled": "MuiFormLabel-filled-50",
                                    "focused": "MuiFormLabel-focused-47",
                                    "required": "MuiFormLabel-required-51",
                                    "root": "MuiFormLabel-root-46",
                                  }
                                }
                                component="label"
                                data-shrink={true}
                              >
                                <label
                                  className="MuiFormLabel-root-46 MuiFormLabel-filled-50 MuiInputLabel-root-41 MuiInputLabel-formControl-42 MuiInputLabel-animated-45 MuiInputLabel-shrink-44"
                                  data-shrink={true}
                                >
                                  Page 2 of 10
                                </label>
                              </FormLabel>
                            </WithStyles(FormLabel)>
                          </InputLabel>
                        </WithStyles(InputLabel)>
                        <WithStyles(Input)
                          onChange={[Function]}
                          value={2}
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-56",
                                "error": "MuiInput-error-58",
                                "focused": "MuiInput-focused-55",
                                "formControl": "MuiInput-formControl-54",
                                "fullWidth": "MuiInput-fullWidth-60",
                                "input": "MuiInput-input-61",
                                "inputMarginDense": "MuiInput-inputMarginDense-62",
                                "inputMultiline": "MuiInput-inputMultiline-63",
                                "inputType": "MuiInput-inputType-64",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-65",
                                "multiline": "MuiInput-multiline-59",
                                "root": "MuiInput-root-53",
                                "underline": "MuiInput-underline-57",
                              }
                            }
                            disableUnderline={false}
                            fullWidth={false}
                            multiline={false}
                            onChange={[Function]}
                            type="text"
                            value={2}
                          >
                            <div
                              className="MuiInput-root-53 MuiInput-formControl-54 MuiInput-underline-57"
                            >
                              <input
                                aria-invalid={false}
                                className="MuiInput-input-61"
                                disabled={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                type="text"
                                value={2}
                              />
                            </div>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
              </div>
            </styled.div>
          </TextFieldCustomized>
        </div>
      </styled.div>
      <ButtonControl
        color="primary"
        disabled={false}
        onClick={[Function]}
        title="Next page"
      >
        <Styled(Component)
          classes={Object {}}
          color="primary"
          disabled={false}
          isActive={false}
          mini={true}
          onClick={[Function]}
          title="Next page"
          variant="fab"
        >
          <Component
            className="sc-bwzfXH fTMPew"
            classes={Object {}}
            color="primary"
            disabled={false}
            isActive={false}
            mini={true}
            onClick={[Function]}
            title="Next page"
            variant="fab"
          >
            <WithStyles(Button)
              className="sc-bwzfXH fTMPew"
              classes={Object {}}
              color="primary"
              disabled={false}
              mini={true}
              onClick={[Function]}
              title="Next page"
              variant="fab"
            >
              <Button
                className="sc-bwzfXH fTMPew"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit-22",
                    "contained": "MuiButton-contained-12",
                    "containedPrimary": "MuiButton-containedPrimary-13",
                    "containedSecondary": "MuiButton-containedSecondary-14",
                    "disabled": "MuiButton-disabled-21",
                    "extendedFab": "MuiButton-extendedFab-19",
                    "fab": "MuiButton-fab-18",
                    "flat": "MuiButton-flat-6",
                    "flatPrimary": "MuiButton-flatPrimary-7",
                    "flatSecondary": "MuiButton-flatSecondary-8",
                    "focusVisible": "MuiButton-focusVisible-20",
                    "fullWidth": "MuiButton-fullWidth-26",
                    "label": "MuiButton-label-2",
                    "mini": "MuiButton-mini-23",
                    "outlined": "MuiButton-outlined-9",
                    "outlinedPrimary": "MuiButton-outlinedPrimary-10",
                    "outlinedSecondary": "MuiButton-outlinedSecondary-11",
                    "raised": "MuiButton-raised-15",
                    "raisedPrimary": "MuiButton-raisedPrimary-16",
                    "raisedSecondary": "MuiButton-raisedSecondary-17",
                    "root": "MuiButton-root-1",
                    "sizeLarge": "MuiButton-sizeLarge-25",
                    "sizeSmall": "MuiButton-sizeSmall-24",
                    "text": "MuiButton-text-3",
                    "textPrimary": "MuiButton-textPrimary-4",
                    "textSecondary": "MuiButton-textSecondary-5",
                  }
                }
                color="primary"
                component="button"
                disableFocusRipple={false}
                disabled={false}
                fullWidth={false}
                mini={true}
                onClick={[Function]}
                size="medium"
                title="Next page"
                type="button"
                variant="fab"
              >
                <WithStyles(ButtonBase)
                  className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-20"
                  onClick={[Function]}
                  title="Next page"
                  type="button"
                >
                  <ButtonBase
                    centerRipple={false}
                    className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                    classes={
                      Object {
                        "disabled": "MuiButtonBase-disabled-28",
                        "focusVisible": "MuiButtonBase-focusVisible-29",
                        "root": "MuiButtonBase-root-27",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disableTouchRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="MuiButton-focusVisible-20"
                    onClick={[Function]}
                    tabIndex="0"
                    title="Next page"
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root-27 MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex="0"
                      title="Next page"
                      type="button"
                    >
                      <span
                        className="MuiButton-label-2"
                      >
                        <pure(KeyboardArrowRight)>
                          <KeyboardArrowRight>
                            <WithStyles(SvgIcon)>
                              <SvgIcon
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction-33",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled-35",
                                    "colorError": "MuiSvgIcon-colorError-34",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary-31",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary-32",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-36",
                                    "root": "MuiSvgIcon-root-30",
                                  }
                                }
                                color="inherit"
                                component="svg"
                                fontSize="default"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-30"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
                                  />
                                  <path
                                    d="M0 0h24v24H0V0z"
                                    fill="none"
                                  />
                                </svg>
                              </SvgIcon>
                            </WithStyles(SvgIcon)>
                          </KeyboardArrowRight>
                        </pure(KeyboardArrowRight)>
                      </span>
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-70",
                              "childLeaving": "MuiTouchRipple-childLeaving-71",
                              "childPulsate": "MuiTouchRipple-childPulsate-72",
                              "ripple": "MuiTouchRipple-ripple-67",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-69",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-68",
                              "root": "MuiTouchRipple-root-66",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-66"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-66"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </Component>
        </Styled(Component)>
      </ButtonControl>
    </div>
  </styled.div>
</Pagination>
`;

exports[`Pagination render 1`] = `
<Pagination
  maxPageCount={0}
  onChangePage={[Function]}
  pageNumber={1}
>
  <styled.div>
    <div
      className="sc-hSdWYo cYOSXi"
    >
      <ButtonControl
        color="primary"
        disabled={true}
        onClick={[Function]}
        title="Previous page"
      >
        <Styled(Component)
          classes={Object {}}
          color="primary"
          disabled={true}
          isActive={false}
          mini={true}
          onClick={[Function]}
          title="Previous page"
          variant="fab"
        >
          <Component
            className="sc-bwzfXH fTMPew"
            classes={Object {}}
            color="primary"
            disabled={true}
            isActive={false}
            mini={true}
            onClick={[Function]}
            title="Previous page"
            variant="fab"
          >
            <WithStyles(Button)
              className="sc-bwzfXH fTMPew"
              classes={Object {}}
              color="primary"
              disabled={true}
              mini={true}
              onClick={[Function]}
              title="Previous page"
              variant="fab"
            >
              <Button
                className="sc-bwzfXH fTMPew"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit-22",
                    "contained": "MuiButton-contained-12",
                    "containedPrimary": "MuiButton-containedPrimary-13",
                    "containedSecondary": "MuiButton-containedSecondary-14",
                    "disabled": "MuiButton-disabled-21",
                    "extendedFab": "MuiButton-extendedFab-19",
                    "fab": "MuiButton-fab-18",
                    "flat": "MuiButton-flat-6",
                    "flatPrimary": "MuiButton-flatPrimary-7",
                    "flatSecondary": "MuiButton-flatSecondary-8",
                    "focusVisible": "MuiButton-focusVisible-20",
                    "fullWidth": "MuiButton-fullWidth-26",
                    "label": "MuiButton-label-2",
                    "mini": "MuiButton-mini-23",
                    "outlined": "MuiButton-outlined-9",
                    "outlinedPrimary": "MuiButton-outlinedPrimary-10",
                    "outlinedSecondary": "MuiButton-outlinedSecondary-11",
                    "raised": "MuiButton-raised-15",
                    "raisedPrimary": "MuiButton-raisedPrimary-16",
                    "raisedSecondary": "MuiButton-raisedSecondary-17",
                    "root": "MuiButton-root-1",
                    "sizeLarge": "MuiButton-sizeLarge-25",
                    "sizeSmall": "MuiButton-sizeSmall-24",
                    "text": "MuiButton-text-3",
                    "textPrimary": "MuiButton-textPrimary-4",
                    "textSecondary": "MuiButton-textSecondary-5",
                  }
                }
                color="primary"
                component="button"
                disableFocusRipple={false}
                disabled={true}
                fullWidth={false}
                mini={true}
                onClick={[Function]}
                size="medium"
                title="Previous page"
                type="button"
                variant="fab"
              >
                <WithStyles(ButtonBase)
                  className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 MuiButton-disabled-21 sc-bwzfXH fTMPew"
                  component="button"
                  disabled={true}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-20"
                  onClick={[Function]}
                  title="Previous page"
                  type="button"
                >
                  <ButtonBase
                    centerRipple={false}
                    className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 MuiButton-disabled-21 sc-bwzfXH fTMPew"
                    classes={
                      Object {
                        "disabled": "MuiButtonBase-disabled-28",
                        "focusVisible": "MuiButtonBase-focusVisible-29",
                        "root": "MuiButtonBase-root-27",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disableTouchRipple={false}
                    disabled={true}
                    focusRipple={true}
                    focusVisibleClassName="MuiButton-focusVisible-20"
                    onClick={[Function]}
                    tabIndex="0"
                    title="Previous page"
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root-27 MuiButtonBase-disabled-28 MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 MuiButton-disabled-21 sc-bwzfXH fTMPew"
                      disabled={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex="-1"
                      title="Previous page"
                      type="button"
                    >
                      <span
                        className="MuiButton-label-2"
                      >
                        <pure(KeyboardArrowLeft)>
                          <KeyboardArrowLeft>
                            <WithStyles(SvgIcon)>
                              <SvgIcon
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction-33",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled-35",
                                    "colorError": "MuiSvgIcon-colorError-34",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary-31",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary-32",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-36",
                                    "root": "MuiSvgIcon-root-30",
                                  }
                                }
                                color="inherit"
                                component="svg"
                                fontSize="default"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-30"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
                                  />
                                  <path
                                    d="M0 0h24v24H0V0z"
                                    fill="none"
                                  />
                                </svg>
                              </SvgIcon>
                            </WithStyles(SvgIcon)>
                          </KeyboardArrowLeft>
                        </pure(KeyboardArrowLeft)>
                      </span>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </Component>
        </Styled(Component)>
      </ButtonControl>
      <styled.div>
        <div
          className="sc-eHgmQL fOBgpo"
        >
          <TextFieldCustomized
            classes={Object {}}
            control={null}
            label="Page number"
            onChange={[Function]}
            value={1}
          >
            <styled.div
              control={null}
            >
              <div
                className="sc-dxgOiQ kzOlie"
              >
                <TextField
                  label="Page number"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  value={1}
                >
                  <WithStyles(FormControl)
                    required={false}
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-40",
                          "marginDense": "MuiFormControl-marginDense-39",
                          "marginNormal": "MuiFormControl-marginNormal-38",
                          "root": "MuiFormControl-root-37",
                        }
                      }
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={false}
                      margin="none"
                      required={false}
                    >
                      <div
                        className="MuiFormControl-root-37"
                      >
                        <WithStyles(InputLabel)>
                          <InputLabel
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated-45",
                                "formControl": "MuiInputLabel-formControl-42",
                                "marginDense": "MuiInputLabel-marginDense-43",
                                "root": "MuiInputLabel-root-41",
                                "shrink": "MuiInputLabel-shrink-44",
                              }
                            }
                            disableAnimation={false}
                          >
                            <WithStyles(FormLabel)
                              className="MuiInputLabel-root-41 MuiInputLabel-formControl-42 MuiInputLabel-animated-45 MuiInputLabel-shrink-44"
                              data-shrink={true}
                            >
                              <FormLabel
                                className="MuiInputLabel-root-41 MuiInputLabel-formControl-42 MuiInputLabel-animated-45 MuiInputLabel-shrink-44"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-52",
                                    "disabled": "MuiFormLabel-disabled-48",
                                    "error": "MuiFormLabel-error-49",
                                    "filled": "MuiFormLabel-filled-50",
                                    "focused": "MuiFormLabel-focused-47",
                                    "required": "MuiFormLabel-required-51",
                                    "root": "MuiFormLabel-root-46",
                                  }
                                }
                                component="label"
                                data-shrink={true}
                              >
                                <label
                                  className="MuiFormLabel-root-46 MuiFormLabel-filled-50 MuiInputLabel-root-41 MuiInputLabel-formControl-42 MuiInputLabel-animated-45 MuiInputLabel-shrink-44"
                                  data-shrink={true}
                                >
                                  Page number
                                </label>
                              </FormLabel>
                            </WithStyles(FormLabel)>
                          </InputLabel>
                        </WithStyles(InputLabel)>
                        <WithStyles(Input)
                          onChange={[Function]}
                          value={1}
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-56",
                                "error": "MuiInput-error-58",
                                "focused": "MuiInput-focused-55",
                                "formControl": "MuiInput-formControl-54",
                                "fullWidth": "MuiInput-fullWidth-60",
                                "input": "MuiInput-input-61",
                                "inputMarginDense": "MuiInput-inputMarginDense-62",
                                "inputMultiline": "MuiInput-inputMultiline-63",
                                "inputType": "MuiInput-inputType-64",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-65",
                                "multiline": "MuiInput-multiline-59",
                                "root": "MuiInput-root-53",
                                "underline": "MuiInput-underline-57",
                              }
                            }
                            disableUnderline={false}
                            fullWidth={false}
                            multiline={false}
                            onChange={[Function]}
                            type="text"
                            value={1}
                          >
                            <div
                              className="MuiInput-root-53 MuiInput-formControl-54 MuiInput-underline-57"
                            >
                              <input
                                aria-invalid={false}
                                className="MuiInput-input-61"
                                disabled={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                type="text"
                                value={1}
                              />
                            </div>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
              </div>
            </styled.div>
          </TextFieldCustomized>
        </div>
      </styled.div>
      <ButtonControl
        color="primary"
        disabled={false}
        onClick={[Function]}
        title="Next page"
      >
        <Styled(Component)
          classes={Object {}}
          color="primary"
          disabled={false}
          isActive={false}
          mini={true}
          onClick={[Function]}
          title="Next page"
          variant="fab"
        >
          <Component
            className="sc-bwzfXH fTMPew"
            classes={Object {}}
            color="primary"
            disabled={false}
            isActive={false}
            mini={true}
            onClick={[Function]}
            title="Next page"
            variant="fab"
          >
            <WithStyles(Button)
              className="sc-bwzfXH fTMPew"
              classes={Object {}}
              color="primary"
              disabled={false}
              mini={true}
              onClick={[Function]}
              title="Next page"
              variant="fab"
            >
              <Button
                className="sc-bwzfXH fTMPew"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit-22",
                    "contained": "MuiButton-contained-12",
                    "containedPrimary": "MuiButton-containedPrimary-13",
                    "containedSecondary": "MuiButton-containedSecondary-14",
                    "disabled": "MuiButton-disabled-21",
                    "extendedFab": "MuiButton-extendedFab-19",
                    "fab": "MuiButton-fab-18",
                    "flat": "MuiButton-flat-6",
                    "flatPrimary": "MuiButton-flatPrimary-7",
                    "flatSecondary": "MuiButton-flatSecondary-8",
                    "focusVisible": "MuiButton-focusVisible-20",
                    "fullWidth": "MuiButton-fullWidth-26",
                    "label": "MuiButton-label-2",
                    "mini": "MuiButton-mini-23",
                    "outlined": "MuiButton-outlined-9",
                    "outlinedPrimary": "MuiButton-outlinedPrimary-10",
                    "outlinedSecondary": "MuiButton-outlinedSecondary-11",
                    "raised": "MuiButton-raised-15",
                    "raisedPrimary": "MuiButton-raisedPrimary-16",
                    "raisedSecondary": "MuiButton-raisedSecondary-17",
                    "root": "MuiButton-root-1",
                    "sizeLarge": "MuiButton-sizeLarge-25",
                    "sizeSmall": "MuiButton-sizeSmall-24",
                    "text": "MuiButton-text-3",
                    "textPrimary": "MuiButton-textPrimary-4",
                    "textSecondary": "MuiButton-textSecondary-5",
                  }
                }
                color="primary"
                component="button"
                disableFocusRipple={false}
                disabled={false}
                fullWidth={false}
                mini={true}
                onClick={[Function]}
                size="medium"
                title="Next page"
                type="button"
                variant="fab"
              >
                <WithStyles(ButtonBase)
                  className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-20"
                  onClick={[Function]}
                  title="Next page"
                  type="button"
                >
                  <ButtonBase
                    centerRipple={false}
                    className="MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                    classes={
                      Object {
                        "disabled": "MuiButtonBase-disabled-28",
                        "focusVisible": "MuiButtonBase-focusVisible-29",
                        "root": "MuiButtonBase-root-27",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disableTouchRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="MuiButton-focusVisible-20"
                    onClick={[Function]}
                    tabIndex="0"
                    title="Next page"
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root-27 MuiButton-root-1 MuiButton-fab-18 MuiButton-mini-23 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16 sc-bwzfXH fTMPew"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex="0"
                      title="Next page"
                      type="button"
                    >
                      <span
                        className="MuiButton-label-2"
                      >
                        <pure(KeyboardArrowRight)>
                          <KeyboardArrowRight>
                            <WithStyles(SvgIcon)>
                              <SvgIcon
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction-33",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled-35",
                                    "colorError": "MuiSvgIcon-colorError-34",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary-31",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary-32",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-36",
                                    "root": "MuiSvgIcon-root-30",
                                  }
                                }
                                color="inherit"
                                component="svg"
                                fontSize="default"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-30"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
                                  />
                                  <path
                                    d="M0 0h24v24H0V0z"
                                    fill="none"
                                  />
                                </svg>
                              </SvgIcon>
                            </WithStyles(SvgIcon)>
                          </KeyboardArrowRight>
                        </pure(KeyboardArrowRight)>
                      </span>
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-70",
                              "childLeaving": "MuiTouchRipple-childLeaving-71",
                              "childPulsate": "MuiTouchRipple-childPulsate-72",
                              "ripple": "MuiTouchRipple-ripple-67",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-69",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-68",
                              "root": "MuiTouchRipple-root-66",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-66"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-66"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </Component>
        </Styled(Component)>
      </ButtonControl>
    </div>
  </styled.div>
</Pagination>
`;

exports[`PaginationInput 1`] = `
<div
  className="sc-eHgmQL fOBgpo"
>
  Anything
</div>
`;
