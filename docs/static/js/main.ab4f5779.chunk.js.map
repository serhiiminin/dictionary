{"version":3,"sources":["images/texture.png","images/trident.svg","modules/compose-classes-prop-types.js","root/themes.js","root/mui-theme.js","root/styles.js","components/blocks-wrapper/styles.js","components/blocks-wrapper/component.js","components/blocks-wrapper/index.js","components/button/styles.js","components/button/component.js","components/button/index.js","components/button-control/index.js","components/button-with-router/component.js","components/button-with-router/index.js","components/chip-set/styles.js","components/chip-set/component.js","components/chip-set/index.js","components/close-button/styles.js","components/close-button/component.js","components/close-button/index.js","components/controls-separator/styles.js","components/controls-separator/component.js","components/controls-separator/index.js","components/footer/styles.js","components/footer/component.js","components/footer/index.js","routes.js","components/footer-navigation/styles.js","components/footer-navigation/component.js","api/request.js","api/create-fetcher.js","modules/generator-api-key.js","modules/handle-errors.js","api/proxies.js","api/word.js","constants/notifications-type.js","modules/get-api-keys.js","api/user.js","api/gif.js","constants/loading-names.js","context/loading-names.js","context/notifications.js","modules/handle-fetch.js","context/errors.js","context/user.js","components/footer-navigation/index.js","components/header/styles.js","components/header/component.js","components/header/index.js","components/image/styles.js","components/image/component.js","components/image/index.js","components/inputs-block/styles.js","components/inputs-block/component.js","components/inputs-block/index.js","components/learning-board/index.js","components/line-explanation/styles.js","components/line-explanation/component.js","components/line-explanation/index.js","components/list-of-searchable-words/index.js","components/multiple-inputs/styles.js","components/multiple-inputs/component.js","components/multiple-inputs/index.js","components/notifications/styles.js","components/notifications/component.js","components/notifications/index.js","components/pagination/styles.js","components/pagination/component.js","components/pagination/index.js","components/pagination-panel/styles.js","components/pagination-panel/component.js","components/pagination-panel/index.js","components/searchable-word/styles.js","components/searchable-word/component.js","components/searchable-word/index.js","components/select/index.js","components/select-with-options/styles.js","components/select-with-options/component.js","components/select-with-options/index.js","components/snackbar-content/component.js","components/snackbar-content/styles.js","components/snackbar-content/index.js","components/text-field/styles.js","components/text-field/component.js","components/text-field/index.js","components/text-field-loading/index.js","components/toolbar/styles.js","components/toolbar/component.js","components/toolbar/index.js","components/user-icon/styles.js","components/user-icon/component.js","components/user-icon/index.js","constants/word-initial-values.js","components/word-form/index.js","components/word-item-in-list/styles.js","components/word-item-in-list/component.js","components/word-item-in-list/index.js","components/word-preview/index.js","components/words-list/styles.js","components/words-list/component.js","components/words-list/index.js","modules/word-utils.js","context/words.js","components/words-table/styles.js","components/words-table/component.js","components/words-table/index.js","pages/login/styles.js","pages/login/container.js","pages/login/index.js","pages/logout/styles.js","pages/logout/container.js","pages/logout/index.js","pages/main/styles.js","pages/main/container.js","pages/main/index.js","pages/not-found/styles.js","pages/not-found/container.js","pages/not-found/index.js","pages/words-add/container.js","pages/words-add/index.js","pages/words-edit/container.js","pages/words-edit/index.js","pages/words-learn/styles.js","pages/words-learn/container.js","pages/words-learn/index.js","pages/words-list/container.js","pages/words-list/index.js","pages/word-preview/container.js","pages/word-preview/index.js","pages/words-search/styles.js","pages/words-search/container.js","pages/words-search/index.js","context/index.js","root/component.js","root/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","propTypes","theme","main","colors","background","text","dark","light","contrastText","notification","success","error","warning","info","opacity","disabled","margin","small","medium","large","padding","borderWidth","base","borderStyle","borderRadius","zIndex","timeout","transition","muiTheme","createMuiTheme","Object","objectSpread","palette","paper","primary","secondary","contrastT","typography","useNextVariants","overrides","MuiButton","root","textTransform","&:hover","&$disabled","color","concat","MuiChip","fontSize","border","MuiFormControl","width","MuiLinearProgress","MuiMenuItem","&$selected","MuiSelect","select","MuiTextField","label","underline","&:after","borderBottomColor","GlobalStyle","@global body","overflowX","texture","@global *","boxSizing","styles","PropTypes","blocksWrapper","@media (min-width: 480px)","@media (min-width: 768px)","BlocksWrapper","_ref","children","classes","react_default","a","createElement","className","defaultProps","enhance","compose","injectSheet","button","props","isActive","ButtonCustomized","restProps","objectWithoutProperties","index_es","assign","ButtonControl","size","ButtonWithRouter","location","to","staticContext","component","Link","pathname","undefined","withRouter","chipSet","display","flexFlow","chip","marginBottom","marginRight","ChipSet","items","onRemoveItem","map","_ref2","id","value","key","icon","TagFaces_default","onDelete","closeButton","outline","cursor","CloseButton","onClick","type","Close_default","alignControls","alignContent","gridAutoFlow","justifyContent","align","columnGap","rowGap","ControlsSeparator","classnames","footer","Footer","footer_navigation","routes","login","logout","words","add","learn","list","all","preview","edit","search","bottomNavigation","HeaderNavigation","isUserLoggedIn","history","onChange","_","push","path","Home_default","placeholder","List_default","NoteAdd_default","Search_default","Rowing_default","ExitToApp_default","Input_default","createLinks","showLabel","requests","get","url","params","endpoint","method","post","put","patch","delete","checkStatus","response","status","Error","statusText","parseJson","json","createFetcherJson","fetch","body","headers","restParams","request","Request","JSON","stringify","Headers","Accept","Content-Type","then","generatorApiKeys","keys","TIME_KEYS_REPEAT","keysWithLastUsedTime","i","currentKey","currentTime","regenerator_default","wrap","_context","prev","next","length","apiKey","lastUsed","Date","now","stop","_marked","this","notificationsMessages","notificationType","generator","clientError","default","disconnect","redirect","serverError","unknown","forbidden","notFound","getErrorType","notificationsTypes","console","includes","message","navigator","onLine","errorCode","getErrorMessage","errorType","_notificationType$err","defineProperty","updateSearchParams","newSearchParams","joinUrl","searchParams","GIPHY_API_KEYS","apiKeyPrefix","entries","filter","slicedToArray","startsWith","getGiphyApiKey","process","apiKeyGiphyProxy","fetcher","api_key","catch","window","createGoogleAuthProxy","googleToken","authorization","accessToken","apiMethodsWords","create","tokens","paths","getList","getListToLearn","yesterday","setDate","getDate","timesLearnt","$gte","$lte","dateLastLearnt","update","word","_id","wordId","toISOString","$inc","apiMethodsUsers","googleId","data","createApiMethodsUsers","apiMethodsGifs","limit","createApiMethodsGifs","NS","WORDS","USER","GIF","loadingNames","save","user","gif","LoadingNamesContext","createContext","loadingNamesInitialState","currentLoadingNames","LoadingNamesProvider","state","handleStartLoading","name","_this","setState","prevState","handleStopLoading","checkIsLoading","arguments","_len2","loadingNamesToCheck","Array","_key2","some","currentLoadingName","Provider","startLoading","stopLoading","Component","withLoadingNames","Cmp","Consumer","NotificationsContext","NOTIFICATION_TIMEOUT","notificationInitialState","notifications","NotificationsProvider","hideNotification","currentId","toConsumableArray","showNotification","autoHide","n","uuid","setTimeout","withNotifications","createHandleFetch","errorHandler","loadingName","requestHandler","responseHandler","Promise","resolve","r","finally","ErrorsContext","ErrorsProviderCmp","handleError","_this$props","log","ErrorProvider","withErrors","UserContext","userInitialState","parse","localStorage","getItem","UserProviderCmp","handleFetch","handleFetchUser","fetchUser","createUser","profileObj","setUserToState","cleanUser","cleanGoogleToken","callback","clear","setGoogleToken","setItem","token","apiUser","editUser","deleteUser","fetchWordsList","_this$state","tokenObj","expires_at","UserProvider","withUser","header","alignItems","headerLinkWrapper","headerLink","textDecoration","Header","isLoading","user_icon","imageBlock","height","src","Image","inputsBlock","topLine","gridTemplateColumns","blockTitle","blockItems","minHeight","InputsBlock","input","handleOnChange","event","target","handleOnAddItem","onAddItem","handleEnterPress","which","_this2","title","control","text_field","onKeyPress","components_button","mini","Add_default","LearningBoard","loading","onOptionChange","inputValue","onCheckAnswer","onGiveAHint","onKnownWord","onForgottenWord","textLearnt","text_field_loading","controls_separator","button_control","Done_default","RemoveRedEye_default","DoneAll_default","ErrorOutline_default","lineExplanation","LineExplanation","ListOfSearchableWords","item","index","searchable_word","delimiter","multipleInputs","MultipleInputs","Delete_default","spacing","unit","Notifications","react","anchorOrigin","vertical","horizontal","open","reduceRight","acc","cur","in","direction","snackbar_content","onClose","variant","page","gap","paginationInput","Pagination","pageNumber","maxPageCount","onChangePage","prevPage","Number","nextPage","KeyboardArrowLeft_default","numberPage","parseInt","KeyboardArrowRight_default","paginationPanel","PaginationPanel","countPerPage","onChangeCount","select_with_options","options","pagination","clickableWord","fontWeight","SearchableWord","Fragment","joinRoute","query","SelectBlock","htmlFor","selectWithOptions","minWidth","SelectWithOptions","components_select","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","CustomizedSnackbarContent","other","Icon","classNames","snackbar","aria-describedby","iconVariant","action","aria-label","close","backgroundColor","Snackbar","textFieldControl","textField","borderBottom","TextFieldCustomized","InputProps","InputLabelProps","TextFieldLoading","toolbarWrapper","Toolbar","checkAllControl","sortBy","sortDirection","onChangeSortDirection","onChangeSortBy","isAnyChecked","divider","KeyboardArrowDown_default","KeyboardArrowUp_default","UserIcon","alt","imageUrl","WORD_INITIAL_VALUES","en","ua","transcription","partOfSpeech","examples","synonyms","WordForm","handleFieldChange","fieldKey","handleRemoveItemFromArray","handleAddItemToArray","handleOnChangeMultipleInputs","onResetForm","onSubmit","freePartsOfSpeech","option","part","inputs_block","chip_set","multiple_inputs","getDerivedStateFromProps","nextProps","wordItemWrapper","isChecked","description","wordLink","wordTime","WordItemInList","onWordCheck","linkToWord","dateCreated","lastLearnt","moment","fromNow","container","xs","checked","Boolean","join","button_with_router","Edit_default","mapValues","WordPreview","antonyms","similarTo","components_image","line_explanation","list_of_searchable_words","example","wordsList","WordsList","fill","word_item_in_list","mergeArrays","field","from","Set","reduce","res","val","addIdForArrayItems","normalizeWord","wordData","_wordData$results","results","rest","definitions","definition","WordsContext","INITIAL_WORD_SORT_DATA","wordsInitialState","count","WordsProviderCmp","getSearchParams","parsedParams","parseSearchParams","cleanWordsList","cleanWord","setWordToState","fetchWord","apiWord","_this$getSearchParams","skip","_ref$items","_ref$count","createWord","ownerId","editWord","deleteWord","searchWord","foundWord","apiGif","q","gifs","downsizedGifs","images","downsized_large","randomGif","Math","round","random","fetchWordsToLearn","learnWord","relearnWord","wordToRelearn","find","wordsCount","getWordsSearchParams","saveWord","w","WordsProvider","withWords","wordsTableWrapper","overflow","WordsTable","handleOnCheck","handleOnCheckAll","handleDeleteWord","generateUrl","handleOnChangeSelect","handleOnChangeDirection","handleOnChangePage","_this$props2","_getWordsSearchParams","isCheckedAll","toolbar","words_list","pagination_panel","ceil","loginButton","Login","onSuccess","goBack","onFailure","google_login","clientId","render","renderProps","AccountCircle_default","LoginCmp","logoutButton","Logout","onLogoutSuccess","LogoutCmp","mainPage","quoteText","quoteAuthor","textAlign","MainContainer","trident","MainPage","notFoundWrapper","PageNotFoundContainer","PageNotFound","AddWordContainer","word_form","AddWord","WordEdit","match","MAX_COUNT_ATTEMPTS","getIndexOfDiscrepancy","originString","stringToCompare","split","findIndex","letter","LearnWordsContainer","countOfTry","guessed","currentWord","onChangeInput","resetCountOfTry","toLowerCase","attemptsLeft","_this$state2","discrepancyIndex","countOfHintsLetter","slice","onLearnNextWord","_this$state3","word_preview","learning_board","LearnWords","WordsListContainer","prevProps","words_table","WordPreviewContainer","searchBlock","SEARCH_INPUT_TIMEOUT","composeSearchData","translatingWord","trim","encodeURIComponent","SearchWordContainer","searchValue","isToEditMode","cleanSearchValue","clearTimeout","inputTimer","handleOnChangeSearchInput","handleEditBeforeSaving","handleSaveWord","_this$props3","isEmpty","SearchWord","StateProvider","notifications_NotificationsProvider","loading_names_LoadingNamesProvider","Root","lib","core_styles","BrowserRouter","basename","context","components_notifications","blocks_wrapper","Switch","Route","exact","LoginContainer","LogoutContainer","WordsAddContainer","WordsLearnContainer","WordsEditContainer","WordsSearchContainer","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","origin","addEventListener","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ab4f5779.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/texture.9aecd722.png\";","module.exports = __webpack_public_path__ + \"static/media/trident.6b216de3.svg\";","import PropTypes from \"prop-types\";\n\nconst composeClassesWithProTypes = propTypes => styles =>\n  propTypes.shape(\n    Object.assign(\n      {},\n      ...Object.keys(styles).map(className => ({\n        [className]: propTypes.string.isRequired\n      }))\n    )\n  );\n\nconst composeClassesPropTypes = composeClassesWithProTypes(PropTypes);\n\nexport default composeClassesPropTypes;\n","const theme = {\n  main: {\n    colors: {\n      background: '#EEE2DC',\n      text: '#333333',\n      main: '#123C69',\n      dark: '#EDC7B7',\n      light: '#BAB2B5',\n      contrastText: '#AC3B61',\n      notification: {\n        success: '#83F570',\n        error: '#F21600',\n        warning: '#FAE639',\n        info: '#A9D9E4',\n      }\n    },\n    opacity: {\n      disabled: .7,\n    },\n    margin: {\n      small: '5px',\n      medium: '10px',\n      large: '15px',\n    },\n    padding: {\n      small: '5px',\n      medium: '10px',\n      large: '15px',\n    },\n    borderWidth: {\n      base: '1px'\n    },\n    borderStyle: {\n      base: 'solid',\n    },\n    borderRadius: {\n      small: '5px',\n      medium: '10px',\n      large: '15px',\n    },\n    zIndex: {\n      notification: 1000,\n    },\n    timeout: {\n      notification: 300,\n    },\n    transition: '.3s'\n  }\n};\n\nexport default theme;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport theme from \"./themes\";\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    background: {\n      paper: theme.main.colors.background,\n    },\n    primary: {\n      light: theme.main.colors.light,\n      main: theme.main.colors.main,\n      dark: theme.main.colors.dark,\n      contrastText: theme.main.colors.contrastText,\n    },\n    secondary: {\n      light: theme.main.colors.light,\n      main: theme.main.colors.main,\n      dark: theme.main.colors.dark,\n      contrastText: theme.main.colors.contrastT\n    },\n    text: {\n      primary: theme.main.colors.text,\n    }\n  },\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: \"none\",\n        transition: theme.main.transition,\n        \"&:hover\": {\n          background: theme.main.colors.main,\n          opacity: theme.main.opacity.disabled\n        },\n        '&$disabled': {\n          opacity: theme.main.opacity.disabled,\n          background: theme.main.colors.light,\n          color: `${theme.main.colors.background} !important`\n        }\n      },\n      \n    },\n    MuiChip: {\n      root: {\n        fontSize: \".9em\",\n        background: \"transparent\",\n        border: `${theme.main.borderWidth.base} ${\n          theme.main.borderStyle.base\n        } ${theme.main.colors.text}`,\n        color: theme.main.colors.text,\n        opacity: theme.main.opacity.disabled\n      }\n    },\n    MuiFormControl: {\n      root: {\n        width: \"100%\"\n      }\n    },\n    MuiLinearProgress: {\n      root: {\n        background: theme.main.colors.background\n      }\n    },\n    MuiMenuItem: {\n      root: {\n        width: \"100%\",\n        \"&:hover\": {\n          background: `${theme.main.colors.main} !important`,\n          color: `${theme.main.colors.background} !important`\n        },\n        '&$selected': {\n          background: `${theme.main.colors.main} !important`,\n          color: `${theme.main.colors.background} !important`\n        }\n      },\n    },\n    MuiSelect: {\n      root: {\n        width: \"100%\"\n      },\n      select: {\n        background: \"transparent !important\"\n      }\n    },\n    MuiTextField: {\n      root: {\n        width: \"100%\"\n      },\n      label: {\n        color: `${theme.main.colors.text} !important`,\n        opacity: 0.7\n      },\n      underline: {\n        \"&:after\": {\n          borderBottomColor: `${theme.main.colors.text} !important`\n        }\n      }\n    }\n  },\n  ...theme,\n});\n\nexport default muiTheme;\n","import texture from \"../images/texture.png\";\nimport theme from \"./mui-theme\";\n\nconst GlobalStyle = {\n  '@global body': {\n    overflowX: 'hidden',\n    background: `${theme.main.colors.background} url(${texture}) center repeat`,\n    color: theme.main.colors.text,\n    fontSize: '1em',\n    margin: 0,\n  },\n  '@global *': {\n    boxSizing: 'border-box',\n  },\n};\n\nexport default GlobalStyle;\n","const styles = {\n  blocksWrapper: {\n    width: \"300px\",\n    margin: \"0 auto\",\n    \"@media (min-width: 480px)\": {\n      width: \"470px\"\n    },\n    \"@media (min-width: 768px)\": {\n      width: \"750px\"\n    }\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst BlocksWrapper = ({ children, classes }) => <div className={classes.blocksWrapper}>{children}</div>;\n\nBlocksWrapper.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  children: PropTypes.node.isRequired\n};\n\nBlocksWrapper.defaultProps = {\n  classes: {}\n};\n\nexport default BlocksWrapper;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport BlocksWrapper from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(BlocksWrapper);\n","const styles = theme => ({\n  button: {\n    opacity: props => (props.isActive ? theme.main.opacity.disabled : 1),\n    color: theme.palette.background.paper\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst ButtonCustomized = ({ classes, isActive, ...restProps }) => (\n  <Button classes={{ root: classes.button }} {...restProps} />\n);\n\nButtonCustomized.propTypes = {\n  isActive: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nButtonCustomized.defaultProps = {\n  isActive: false,\n  classes: {}\n};\n\nexport default ButtonCustomized;\n","\nimport injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport ButtonCustomized from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(ButtonCustomized);\n","import React from \"react\";\nimport { Fab } from '@material-ui/core';\n\nconst ButtonControl = props => <Fab size='small' {...props} />;\n\nexport default ButtonControl;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Fab } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\n\nconst ButtonWithRouter = ({ location, to, staticContext, ...restProps }) => (\n  <Fab size='small' to={to} color=\"primary\" component={Link} disabled={location.pathname === to} {...restProps} />\n);\n\nButtonWithRouter.propTypes = {\n  history: ReactRouterPropTypes.history.isRequired,\n  location: ReactRouterPropTypes.location.isRequired,\n  staticContext: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  to: PropTypes.string.isRequired\n};\n\nButtonWithRouter.defaultProps = {\n  staticContext: undefined\n};\n\nexport default ButtonWithRouter;\n","import { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport ButtonWithRouter from './component';\n\nconst enhance = compose(\n  withRouter,\n);\n\nexport default enhance(ButtonWithRouter);\n","\nconst styles = theme => ({\n  chipSet: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    transition: theme.main.transition\n  },\n  chip: {\n    marginBottom: theme.main.margin.small,\n    marginRight: theme.main.margin.small,\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Chip } from \"@material-ui/core\";\nimport TagFacesIcon from \"@material-ui/icons/TagFaces\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst ChipSet = ({ items, onRemoveItem, disabled, classes }) => (\n  <div className={classes.chipSet}>\n    {items.map(({ id, value }) => (\n      <Chip\n        classes={{ root: classes.chip }}\n        key={id}\n        label={value}\n        icon={<TagFacesIcon />}\n        onDelete={() => onRemoveItem(id)}\n        disabled={disabled}\n      />\n    ))}\n  </div>\n);\n\nChipSet.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ),\n  onRemoveItem: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nChipSet.defaultProps = {\n  classes: {},\n  items: [],\n  disabled: false\n};\n\nexport default ChipSet;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport ChipSet from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(ChipSet);\n","const styles = theme => ({\n  closeButton: {\n    background: 'transparent',\n    color: theme.main.colors.text,\n    padding: 0,\n    border: 0,\n    borderRadius: '50%',\n    fontSize: '.81em',\n    outline: 'none',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst CloseButton = ({ onClick, classes }) => (\n  <button type=\"button\" className={classes.closeButton} onClick={onClick}>\n    <CloseIcon />\n  </button>\n);\n\nCloseButton.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  onClick: PropTypes.func.isRequired\n};\n\nCloseButton.defaultProps = {\n  classes: {}\n};\n\nexport default CloseButton;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport CloseButton from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(CloseButton);\n","const styles = theme => ({\n  alignControls: {\n    display: 'grid',\n    alignContent: 'center',\n    gridAutoFlow: 'column',\n    padding: `${theme.main.padding.medium} 0`,\n    justifyContent: props => props.align,\n    columnGap: '.5rem',\n    rowGap: '.5rem',\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst ControlsSeparator = ({ children, classes, align }) => (\n  <div className={classnames(classes.alignControls, align)}>{children}</div>\n);\n\nControlsSeparator.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  children: PropTypes.node.isRequired,\n  align: PropTypes.string\n};\n\nControlsSeparator.defaultProps = {\n  classes: {},\n  align: \"left\"\n};\n\nexport default ControlsSeparator;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport ControlsSeparator from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(ControlsSeparator);\n","const styles = theme => ({\n  footer: {\n    padding: `${theme.main.padding.large} 0`,\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { FooterNavigation } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Footer = ({ classes }) => (\n  <div className={classes.footer}>\n    <FooterNavigation />\n  </div>\n);\n\nFooter.propTypes = {\n  classes: composeClassesPropTypes(styles)\n};\n\nFooter.defaultProps = {\n  classes: {}\n};\n\nexport default Footer;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport styles from './styles';\nimport Footer from './component';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(Footer);\n","const routes = {\n  root: '/',\n  login: '/login',\n  logout: '/logout',\n  words: {\n    add: '/add-word',\n    learn: '/learn-words',\n    list: {\n      root: '/words-list',\n      all: '/words-list/all',\n      preview: '/words-list/:id',\n      edit: '/words-list/:id/edit',\n    },\n    search: '/search-words',\n  },\n};\n\nexport default routes;\n","const styles = {\n  bottomNavigation: {\n    width: '100%'\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport List from \"@material-ui/icons/List\";\nimport Home from \"@material-ui/icons/Home\";\nimport NoteAdd from \"@material-ui/icons/NoteAdd\";\nimport Rowing from \"@material-ui/icons/Rowing\";\nimport Search from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/icons/Input\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst createLinks = isUserLoggedIn => [\n  {\n    path: routes.root,\n    icon: <Home />,\n    placeholder: \"Home\"\n  },\n  {\n    path: routes.words.list.all,\n    icon: <List />,\n    placeholder: \"My words\"\n  },\n  {\n    path: routes.words.add,\n    icon: <NoteAdd />,\n    placeholder: \"Add a word\"\n  },\n  {\n    path: routes.words.search,\n    icon: <Search />,\n    placeholder: \"Search a word\"\n  },\n  {\n    path: routes.words.learn,\n    icon: <Rowing />,\n    placeholder: \"Learn words\"\n  },\n  isUserLoggedIn\n    ? {\n        path: routes.logout,\n        icon: <ExitToApp />,\n        placeholder: \"Logout\"\n      }\n    : {\n        path: routes.login,\n        icon: <Input />,\n        placeholder: \"Login\"\n      }\n];\n\nconst HeaderNavigation = ({ isUserLoggedIn, classes, history, location }) => (\n  <BottomNavigation\n    classes={{ root: classes.bottomNavigation }}\n    value={location.pathname}\n    onChange={(_, value) => history.push(value)}\n    className={classes.root}\n  >\n    {createLinks(isUserLoggedIn).map(({ icon, path, placeholder }) => (\n      <BottomNavigationAction key={path} value={path} icon={icon} label={placeholder} showLabel />\n    ))}\n  </BottomNavigation>\n);\n\nHeaderNavigation.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  isUserLoggedIn: PropTypes.bool,\n  history: ReactRouterPropTypes.history.isRequired,\n  location: ReactRouterPropTypes.location.isRequired\n};\n\nHeaderNavigation.defaultProps = {\n  isUserLoggedIn: false,\n  classes: {}\n};\n\nexport default HeaderNavigation;\n","const requests = {\n  get: (url, params) => ({\n    endpoint: url,\n    method: 'GET',\n    ...params,\n  }),\n  post: (url, params) => ({\n    endpoint: url,\n    method: 'POST',\n    ...params,\n  }),\n  put: (url, params) => ({\n    endpoint: url,\n    method: 'PUT',\n    ...params,\n  }),\n  patch: (url, params) => ({\n    endpoint: url,\n    method: 'PATCH',\n    ...params,\n  }),\n  delete: (url, params) => ({\n    endpoint: url,\n    method: 'DELETE',\n    ...params,\n  }),\n};\n\nexport default requests;\n","const checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n\n  error.response = response;\n  throw error;\n};\n\nconst parseJson = response => response.json();\n\nconst createFetcherJson = fetch => params => {\n  const { endpoint, body, headers, ...restParams } = params;\n\n  const request = new Request(endpoint, {\n    body: JSON.stringify(body),\n    headers: new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      ...headers\n    }),\n    ...restParams\n  });\n\n  return fetch(request)\n    .then(checkStatus)\n    .then(parseJson);\n};\n\nexport default createFetcherJson;\n","function* generatorApiKeys(keys) {\n  const TIME_KEYS_REPEAT = keys.length * 200;\n  const keysWithLastUsedTime = keys.map(apiKey => ({\n    key: apiKey,\n    lastUsed: null\n  }));\n\n  for (let i = 0; i < keysWithLastUsedTime.length; i += 1) {\n    const currentKey = keysWithLastUsedTime[i];\n    const currentTime = Date.now();\n    if (currentTime - currentKey.lastUsed < TIME_KEYS_REPEAT) {\n      throw new Error(\"No free api keys\");\n    }\n\n    currentKey.lastUsed = currentTime;\n    yield currentKey.key;\n\n    if (keysWithLastUsedTime.length - 1 === i) i = -1;\n  }\n}\n\nexport default generatorApiKeys;\n","import notificationsTypes from \"../constants/notifications-type\";\n\nconst createGetterErrorType = notificationsMessages => error => {\n  // eslint-disable-next-line no-console\n  console.error(error);\n\n  if (!error) {\n    return notificationsMessages.error.unknown;\n  }\n\n  if ([\"Failed to fetch\", \"Network request failed\"].includes(error.message) && !navigator.onLine) {\n    return notificationsMessages.error.disconnect;\n  }\n\n  if (!error.response || !error.response.status) {\n    return notificationsMessages.error.unknown;\n  }\n\n  const errorCode = error.response.status;\n\n  if (errorCode >= 300 && errorCode < 400) {\n    return notificationsMessages.error.redirect;\n  }\n\n  if (errorCode === 403) {\n    return notificationsMessages.error.forbidden;\n  }\n\n  if (errorCode === 404) {\n    return notificationsMessages.error.notFound;\n  }\n\n  if (errorCode >= 400 && errorCode < 500) {\n    return notificationsMessages.error.clientError;\n  }\n\n  if (errorCode >= 500) {\n    return notificationsMessages.error.serverError;\n  }\n\n  return notificationsMessages.error.unknown;\n};\n\nconst createGetErrorMessages = notificationType => errorType =>\n  ({\n    [notificationType.error.clientError]: \"Client error\",\n    [notificationType.error.default]: \"Something went wrong\",\n    [notificationType.error.disconnect]: \"You are disconnected!\",\n    [notificationType.error.forbidden]: \"You are not authorized! Please, use your google account\",\n    [notificationType.error.redirect]: \"You will be redirected\",\n    [notificationType.error.serverError]: \"Server error\",\n    [notificationType.error.notFound]: \"Not found\",\n    [notificationType.error.unknown]: \"Unknown error\"\n  }[errorType.message]);\n\n  const getErrorType = createGetterErrorType(notificationsTypes);\n  const getErrorMessage = createGetErrorMessages(notificationsTypes);\n\nexport { getErrorType, getErrorMessage };\n","import { joinUrl } from \"url-joiner\";\nimport generatorApiKeys from \"../modules/generator-api-key\";\nimport getGiphyApiKey from \"../modules/get-api-keys\";\nimport createFetcherJson from \"./create-fetcher\";\nimport { getErrorType } from \"../modules/handle-errors\";\n\nconst updateSearchParams = (params, newSearchParams) => ({\n  ...params,\n  endpoint: joinUrl({ url: params.endpoint, searchParams: newSearchParams })\n});\n\nconst createApiKeyProxy = generator => fetcher => params =>\n  fetcher(updateSearchParams(params, { api_key: generator.next().value })).catch(error => {\n    if (error.message === \"Failed to fetch\") {\n      return fetcher(\n        updateSearchParams(params, {\n          api_key: generator.next().value\n        })\n      );\n    }\n    throw error;\n  });\n\nconst API_KEY_PREFIX = \"REACT_APP_GIPHY_API_KEYS\";\nconst GIPHY_API_KEYS = getGiphyApiKey(API_KEY_PREFIX)(process.env);\nconst apiKeyGiphyProxy = createApiKeyProxy(generatorApiKeys(GIPHY_API_KEYS))(createFetcherJson(window.fetch));\n\nconst createGoogleAuthProxy = fetcher => (params, googleToken) =>\n  fetcher({\n    ...params,\n    headers: {\n      ...params.headers,\n      authorization: googleToken && `Bearer ${googleToken.accessToken}`\n    }\n  }).catch(error => {\n      throw new Error(getErrorType(error));\n  });\n\nexport { apiKeyGiphyProxy, createApiKeyProxy, createGoogleAuthProxy };\n","import { joinUrl } from \"url-joiner\";\nimport requests from \"./request\";\nimport createFetcherJson from \"./create-fetcher\";\nimport { createGoogleAuthProxy } from \"./proxies\";\n\nconst { REACT_APP_ENDPOINT_WORDS } = process.env;\n\nexport const createApiMethodsWords = endpoint => fetcher => ({\n  create: (body, tokens) => fetcher(requests.post(endpoint, { body }), tokens),\n  get: (id, tokens) => fetcher(requests.get(joinUrl({ url: endpoint, paths: [id] })), tokens),\n  getList: (body, tokens) => fetcher(requests.post(joinUrl({ url: endpoint, paths: [\"list\"] }), { body }), tokens),\n  getListToLearn: (params, tokens) => {\n    const url = joinUrl({ url: endpoint, paths: [\"list\"] });\n    const yesterday = new Date();\n\n    yesterday.setDate(yesterday.getDate() - 1);\n    return fetcher(\n      requests.post(url, {\n        body: {\n          timesLearnt: { $gte: 0, $lte: 5 },\n          dateLastLearnt: { $gte: new Date(0), $lte: yesterday },\n          ...params\n        }\n      }),\n      tokens\n    );\n  },\n  update: (word, tokens) =>\n    fetcher(requests.put(joinUrl({ url: endpoint, paths: [word._id] }), { body: word }), tokens),\n  delete: (wordId, tokens) => fetcher(requests.delete(joinUrl({ url: endpoint, paths: [wordId] })), tokens),\n  learn: (wordId, tokens) =>\n    fetcher(\n      requests.put(joinUrl({ url: endpoint, paths: [wordId] }), {\n        body: {\n          dateLastLearnt: new Date(Date.now()).toISOString(),\n          $inc: { timesLearnt: 1 }\n        }\n      }),\n      tokens\n    ),\n  search: (params, tokens) =>\n    fetcher(requests.post(joinUrl({ url: endpoint, paths: [\"search-new\"] }), { body: params }), tokens)\n});\n\nconst apiMethodsWords = createApiMethodsWords(REACT_APP_ENDPOINT_WORDS)(\n  createGoogleAuthProxy(createFetcherJson(window.fetch))\n);\n\nexport default apiMethodsWords;\n","const notificationType = {\n  success: \"success\",\n  warning: \"warning\",\n  info: \"info\",\n  error: {\n    clientError: 'clientError',\n    default: 'error',\n    disconnect: 'disconnect',\n    redirect: 'redirect',\n    serverError: 'serverError',\n    unknown: 'unknown',\n    forbidden: 'forbidden',\n    notFound: 'notFound',\n  },\n};\n\nexport default notificationType;\n","const getGiphyApiKey = apiKeyPrefix => params =>\n  Object.entries(params)\n    .filter(([key]) => key.startsWith(apiKeyPrefix))\n    .map(key => key[1]);\n\nexport default getGiphyApiKey;\n","import { joinUrl } from \"url-joiner\";\nimport requests from \"./request\";\nimport createFetcherJson from \"./create-fetcher\";\nimport { createGoogleAuthProxy } from \"./proxies\";\n\nconst { REACT_APP_ENDPOINT_USERS } = process.env;\n\nexport const createApiMethodsUsers = endpoint => fetcher => ({\n  create: (body, tokens) => fetcher(requests.post(joinUrl({ url: endpoint, paths: [\"new\"] }), { body }), tokens),\n  get: (googleId, tokens) => fetcher(requests.get(joinUrl({ url: endpoint, paths: [googleId] })), tokens),\n  update: (data, tokens) =>\n    fetcher(requests.put(joinUrl({ url: endpoint, paths: [data._id] }), { body: data }), tokens),\n  delete: (id, tokens) => fetcher(requests.delete(joinUrl({ url: endpoint, paths: [id] })), tokens)\n});\n\nconst apiMethodsUsers = createApiMethodsUsers(REACT_APP_ENDPOINT_USERS)(\n  createGoogleAuthProxy(createFetcherJson(window.fetch))\n);\n\nexport default apiMethodsUsers;\n","import { joinUrl } from \"url-joiner\";\nimport requests from \"./request\";\nimport { apiKeyGiphyProxy } from \"./proxies\";\n\nconst { REACT_APP_ENDPOINT_GIPHY } = process.env;\n\nexport const createApiMethodsGifs = endpoint => fetcher => ({\n  get: searchParams =>\n    fetcher(\n      requests.get(\n        joinUrl({\n          url: endpoint,\n          searchParams: {\n            limit: 100,\n            ...searchParams\n          }\n        })\n      )\n    )\n});\n\nconst apiMethodsGifs = createApiMethodsGifs(REACT_APP_ENDPOINT_GIPHY)(\n  apiKeyGiphyProxy\n);\n\nexport default apiMethodsGifs;\n","const NS = \"LOADING\";\nconst WORDS = `${NS}/WORDS`;\nconst USER = `${NS}/USER`;\nconst GIF = `${NS}/GIF`;\n\nconst loadingNames = {\n  words: {\n    list: `${WORDS}/list`,\n    save: `${WORDS}/save`,\n    fetch: `${WORDS}/fetch`,\n    learn: `${WORDS}/learn`,\n    search: `${WORDS}/search`,\n    delete: `${WORDS}/delete`\n  },\n  user: {\n    fetch: `${USER}/fetch`\n  },\n  gif: {\n    fetch: `${GIF}/fetch`\n  }\n};\n\nexport default loadingNames;\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LoadingNamesContext = createContext({});\n\nconst loadingNamesInitialState = {\n  currentLoadingNames: {}\n};\n\nclass LoadingNamesProvider extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired\n  };\n\n  state = loadingNamesInitialState;\n\n  handleStartLoading = name =>\n    this.setState(prevState => ({\n      currentLoadingNames: {\n        ...prevState.currentLoadingNames,\n        [name]: (prevState.currentLoadingNames[name] || 0) + 1\n      }\n    }));\n\n  handleStopLoading = name =>\n    this.setState(prevState => ({\n      currentLoadingNames: {\n        ...prevState.currentLoadingNames,\n        [name]: (prevState.currentLoadingNames[name] || 1) - 1\n      }\n    }));\n\n  checkIsLoading = (currentLoadingNames = {}) => (...loadingNamesToCheck) =>\n    Object.entries(currentLoadingNames).some(\n      currentLoadingName => loadingNamesToCheck.includes(currentLoadingName[0]) && currentLoadingName[1] > 0\n    );\n\n  render() {\n    const { currentLoadingNames } = this.state;\n    const { children } = this.props;\n    const checkIsLoading = this.checkIsLoading(currentLoadingNames);\n\n    return (\n      <LoadingNamesContext.Provider\n        value={{\n          checkIsLoading,\n          startLoading: this.handleStartLoading,\n          stopLoading: this.handleStopLoading\n        }}>\n        {children}\n      </LoadingNamesContext.Provider>\n    );\n  }\n}\n\nconst withLoadingNames = Cmp => props => (\n  <LoadingNamesContext.Consumer>{value => <Cmp {...value} {...props} />}</LoadingNamesContext.Consumer>\n);\n\nexport { LoadingNamesProvider, withLoadingNames };\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"uuid\";\n\nconst NotificationsContext = createContext({});\n\nconst NOTIFICATION_TIMEOUT = 5000;\n\nconst notificationInitialState = {\n  notifications: []\n};\n\nclass NotificationsProvider extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired\n  };\n\n  state = notificationInitialState;\n\n  hideNotification = currentId => {\n    this.setState(prevState => ({\n      notifications: [...prevState.notifications].filter(({ id }) => id !== currentId)\n    }));\n  };\n\n  showNotification = (text, type, autoHide = true) => {\n    const currentNotificationsText = this.state.notifications.map(n => n.text);\n    const isTheSameNotificationExist = currentNotificationsText.includes(text);\n    if (!isTheSameNotificationExist) {\n      const id = uuid();\n      this.setState(prevState => ({\n        notifications: [...prevState.notifications, { id, text, type }]\n      }));\n      if (autoHide) {\n        setTimeout(() => this.hideNotification(id), NOTIFICATION_TIMEOUT);\n      }\n    }\n  };\n\n  render() {\n    const { notifications } = this.state;\n    const { children } = this.props;\n\n    return (\n      <NotificationsContext.Provider\n        value={{\n          notifications,\n          showNotification: this.showNotification,\n          hideNotification: this.hideNotification\n        }}>\n        {children}\n      </NotificationsContext.Provider>\n    );\n  }\n}\n\nconst withNotifications = Cmp => props => (\n  <NotificationsContext.Consumer>{value => <Cmp {...value} {...props} />}</NotificationsContext.Consumer>\n);\n\nexport { NotificationsProvider, withNotifications };\n","const createHandleFetch = ({ startLoading, stopLoading, errorHandler }) => ({\n  loadingName,\n  requestHandler,\n  responseHandler,\n  googleToken\n}) =>\n  Promise.resolve(startLoading(loadingName))\n    .then(() => requestHandler(googleToken) || (r => r))\n    .then(responseHandler || (r => r))\n    .catch(errorHandler)\n    .finally(() => stopLoading(loadingName));\n\nexport default createHandleFetch;\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { compose } from \"recompose\";\nimport { withRouter } from 'react-router-dom';\nimport { withNotifications } from \"./notifications\";\nimport notificationType from \"../constants/notifications-type\";\nimport routes from \"../routes\";\nimport { getErrorMessage } from \"../modules/handle-errors\";\n\nconst ErrorsContext = createContext({});\n\nclass ErrorsProviderCmp extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    showNotification: PropTypes.func.isRequired,\n  };\n\n  handleError = error => {\n    const { history, showNotification } = this.props;\n    if(error.message === notificationType.error.forbidden) {\n      history.push(routes.login);\n    }\n    showNotification(getErrorMessage(error), notificationType.info)\n  }\n\n  componentDidCatch(error, info) {\n    // eslint-disable-next-line\n    console.log(error, info);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <ErrorsContext.Provider\n        value={{\n          handleError: this.handleError,\n        }}>\n        {children}\n      </ErrorsContext.Provider>\n    );\n  }\n}\n\nconst ErrorProvider = compose(\n  withNotifications,\n  withRouter,\n)(ErrorsProviderCmp);\n\nconst withErrors = Cmp => props => (\n  <ErrorsContext.Consumer>{value => <Cmp {...value} {...props} />}</ErrorsContext.Consumer>\n);\n\nexport { ErrorProvider, withErrors };\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"recompose\";\nimport { apiUser } from \"../api\";\nimport notificationType from \"../constants/notifications-type\";\nimport loadingNames from \"../constants/loading-names\";\nimport { withLoadingNames } from \"./loading-names\";\nimport { withNotifications } from \"./notifications\";\nimport createHandleFetch from \"../modules/handle-fetch\";\nimport { withErrors } from \"./errors\";\n\nconst UserContext = createContext({});\n\nconst userInitialState = {\n  googleToken: JSON.parse(window.localStorage.getItem(\"google\")),\n  user: {}\n};\nclass UserProviderCmp extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    showNotification: PropTypes.func.isRequired,\n    startLoading: PropTypes.func.isRequired,\n    stopLoading: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n  };\n\n  state = userInitialState;\n\n  handleFetch = createHandleFetch({\n    startLoading: this.props.startLoading,\n    stopLoading: this.props.stopLoading,\n    errorHandler: this.props.handleError,\n  });\n\n  componentDidMount() {\n    this.handleFetchUser();\n  }\n\n  handleFetchUser = () => {\n    const { googleToken } = this.state;\n    return this.fetchUser((googleToken && googleToken.googleId) || \"\", googleToken)\n      .then(user => user || this.createUser(googleToken && googleToken.profileObj, googleToken))\n      .then(this.setUserToState);\n  };\n\n  cleanUser = () => this.setState({ user: userInitialState.user });\n\n  cleanGoogleToken = callback => {\n    this.setState({ googleToken: null }, () => {\n      window.localStorage.clear(\"google\");\n      callback();\n    });\n  };\n\n  setGoogleToken = (googleToken, callback) =>\n    this.fetchUser(googleToken.googleId, googleToken).then(user =>\n      this.setState({ user, googleToken }, () => {\n        callback();\n        window.localStorage.setItem(\"google\", JSON.stringify(googleToken));\n      })\n    );\n\n  setUserToState = user => this.setState({ user });\n\n  fetchUser = (googleId, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.get(googleId, token)\n    });\n\n  createUser = (user, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.create({ ...user }, token),\n      responseHandler: () =>\n        this.props.showNotification(\"The user has been saved successfully\", notificationType.success)\n    });\n\n  editUser = (word, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.update(word, token),\n      responseHandler: () =>\n        this.props.showNotification(\"The user has been updated successfully\", notificationType.success)\n    });\n\n  deleteUser = (id, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.delete(id, token),\n      responseHandler: () => this.fetchWordsList()\n    }).then(() => this.props.showNotification(\"The user has been deleted successfully\", notificationType.success));\n\n  render() {\n    const { user, googleToken } = this.state;\n    const { children } = this.props;\n    const isUserLoggedIn = googleToken && googleToken.tokenObj.expires_at > Date.now();\n\n    return (\n      <UserContext.Provider\n        value={{\n          user,\n          googleToken,\n          isUserLoggedIn,\n          setGoogleToken: this.setGoogleToken,\n          cleanGoogleToken: this.cleanGoogleToken,\n          setUserToState: this.setUserToState,\n          cleanUser: this.cleanUser,\n          fetchUser: this.fetchUser,\n          createUser: this.createUser,\n          editUser: this.editUser,\n          deleteUser: this.deleteUser\n        }}>\n        {children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nconst UserProvider = compose(\n  withLoadingNames,\n  withNotifications,\n  withErrors,\n)(UserProviderCmp);\n\nconst withUser = Cmp => props => <UserContext.Consumer>{value => <Cmp {...value} {...props} />}</UserContext.Consumer>;\n\nexport { UserProvider, withUser };\n","import injectSheet from 'react-jss';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport HeaderNavigation from './component';\nimport { withUser } from '../../context/user';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withRouter,\n  withUser,\n);\n\nexport default enhance(HeaderNavigation);\n","const styles = theme => ({\n  header: {\n    padding: `${theme.main.padding.large} 0`,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    \n  },\n  headerLinkWrapper: {\n    margin: 0,\n  },\n  headerLink: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    fontSize: '1.6rem',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { UserIcon } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport routes from \"../../routes\";\nimport styles from \"./styles\";\nimport loadingNames from \"../../constants/loading-names\";\n\nconst Header = ({ classes, isUserLoggedIn, checkIsLoading }) => {\n  const isLoading = checkIsLoading(loadingNames.user.fetch);\n  \n  return (\n    <div className={classes.header}>\n      <h1 className={classes.headerLinkWrapper}>\n        <Link to={routes.root} className={classes.headerLink}>\n          The dictionary\n        </Link>\n      </h1>\n      {isUserLoggedIn && <UserIcon isLoading={isLoading} />}\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  checkIsLoading: PropTypes.func.isRequired,\n  isUserLoggedIn: PropTypes.bool\n};\n\nHeader.defaultProps = {\n  classes: {},\n  isUserLoggedIn: false\n};\n\nexport default Header;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withUser } from '../../context/user';\nimport styles from './styles';\nimport Header from './component';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withLoadingNames,\n  withUser\n);\n\nexport default enhance(Header);\n","const styles = theme => ({\n  imageBlock: {\n    padding: `${theme.main.padding.medium} 0`,\n    width: props => `${props.width}px`,\n    height: props => `${props.height}px`,\n    background: props => `url(${props.src}) 50% 50% / cover no-repeat`,\n    borderRadius: theme.main.borderRadius.small\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Image = ({ src, width, height, classes }) => <div className={`${classes.imageBlock} ${src}${width}${height}`} />;\n\nImage.propTypes = {\n  src: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  classes: composeClassesPropTypes(styles)\n};\n\nImage.defaultProps = {\n  src: \"\",\n  width: 300,\n  height: 200,\n  classes: {}\n};\n\nexport default Image;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Image from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(Image);\n","const styles = theme => ({\n  inputsBlock: {\n    display: \"grid\",\n    rowGap: \"1em\",\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    borderRadius: theme.main.borderRadius.small,\n    background: theme.palette.background.paper,\n  },\n  topLine: {\n    display: \"grid\",\n    padding: \"5px 0\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  blockTitle: {\n    margin: 0\n  },\n  blockItems: {\n    minHeight: \"2em\"\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Button } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nclass InputsBlock extends Component {\n  static propTypes = {\n    classes: composeClassesPropTypes(styles),\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string,\n    control: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n    onAddItem: PropTypes.func\n  };\n\n  static defaultProps = {\n    classes: {},\n    title: null,\n    onAddItem: () => {},\n    control: false\n  };\n\n  state = {\n    input: \"\"\n  };\n\n  handleOnChange = event => this.setState({ input: event.target.value });\n\n  handleOnAddItem = () => {\n    this.props.onAddItem(this.state.input);\n    this.setState({ input: \"\" });\n  };\n\n  handleEnterPress = event => {\n    if (event.which === 13) {\n      this.handleOnAddItem();\n    }\n  };\n\n  render() {\n    const { input } = this.state;\n    const { children, title, control, classes } = this.props;\n\n    return (\n      <div className={classes.inputsBlock}>\n        <div className={classes.topLine}>\n          <h3 className={classes.blockTitle}>{title}</h3>\n          <div>\n            {control && control === true ? (\n              <TextField\n                placeholder=\"Add new option\"\n                value={input}\n                onChange={event => this.handleOnChange(event)}\n                onKeyPress={this.handleEnterPress}\n                control={\n                  <Button onClick={this.handleOnAddItem} title=\"Add new option\" disabled={!input} mini>\n                    <AddIcon />\n                  </Button>\n                }\n              />\n            ) : (\n              control\n            )}\n          </div>\n        </div>\n        <div className={classes.blockItems}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default InputsBlock;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport InputsBlock from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(InputsBlock);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Done from \"@material-ui/icons/Done\";\nimport DoneAll from \"@material-ui/icons/DoneAll\";\nimport ErrorOutline from \"@material-ui/icons/ErrorOutline\";\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\";\nimport { ControlsSeparator, TextFieldLoading, ButtonControl } from \"..\";\n\nconst LearningBoard = ({\n  loading,\n  onOptionChange,\n  inputValue,\n  word,\n  timesLearnt,\n  onCheckAnswer,\n  onGiveAHint,\n  onKnownWord,\n  onForgottenWord\n}) => {\n  const textLearnt = `Learnt ${timesLearnt} time${timesLearnt > 1 ? \"s\" : \"\"} before`;\n\n  return (\n    <div>\n      <TextFieldLoading\n        loading={loading}\n        onChange={onOptionChange}\n        label=\"Your option\"\n        value={inputValue}\n        disabled={loading}\n      />\n      <h3>{word}</h3>\n      <h5>{timesLearnt != null && textLearnt}</h5>\n      <ControlsSeparator align=\"center\">\n        <ButtonControl onClick={onCheckAnswer} disabled={loading} title=\"Submit my answer\">\n          <Done />\n        </ButtonControl>\n        <ButtonControl onClick={onGiveAHint} disabled={loading} title=\"Give me a hint\">\n          <RemoveRedEye />\n        </ButtonControl>\n        <ButtonControl onClick={onKnownWord} disabled={loading} title=\"I know this word\">\n          <DoneAll />\n        </ButtonControl>\n        <ButtonControl onClick={onForgottenWord} disabled={loading} title=\"I forgot this word, show me the translation\">\n          <ErrorOutline />\n        </ButtonControl>\n      </ControlsSeparator>\n    </div>\n  );\n};\n\nLearningBoard.propTypes = {\n  loading: PropTypes.bool,\n  onOptionChange: PropTypes.func.isRequired,\n  onCheckAnswer: PropTypes.func.isRequired,\n  onGiveAHint: PropTypes.func.isRequired,\n  onKnownWord: PropTypes.func.isRequired,\n  onForgottenWord: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  word: PropTypes.string,\n  timesLearnt: PropTypes.number\n};\n\nLearningBoard.defaultProps = {\n  loading: null,\n  inputValue: null,\n  word: null,\n  timesLearnt: null\n};\n\nexport default LearningBoard;\n","const styles = theme => ({\n  lineExplanation: {\n    display: 'grid',\n    gridTemplateColumns: props => (props.label ? \"1fr 2fr\" : \"1fr\"),\n    background: theme.palette.primary.light,\n    padding: theme.main.padding.medium,\n    marginBottom: theme.main.margin.medium,\n    borderRadius: theme.main.borderRadius.small\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst LineExplanation = ({ classes, label, children }) => (\n  <div className={classes.lineExplanation}>\n    {label && <div>{`${label}:`}</div>}\n    <div>{children}</div>\n  </div>\n);\n\nLineExplanation.propTypes = {\n  label: PropTypes.node,\n  children: PropTypes.node,\n  classes: composeClassesPropTypes(styles)\n};\n\nLineExplanation.defaultProps = {\n  label: null,\n  children: null,\n  classes: {}\n};\n\nexport default LineExplanation;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport styles from './styles';\nimport LineExplanation from './component';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(LineExplanation);\n","import React from \"react\";\nimport uuid from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { SearchableWord } from \"..\";\n\nconst ListOfSearchableWords = ({ items }) =>\n  items &&\n  items.map((item, index) => <SearchableWord key={uuid()} word={item} delimiter={index < items.length - 1 && \", \"} />);\n\nListOfSearchableWords.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string)\n};\n\nListOfSearchableWords.defaultProps = {\n  items: []\n};\n\nexport default ListOfSearchableWords;\n","const styles = {\n  multipleInputs: {\n    display: 'grid',\n    rowGap: '1em',\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\nimport { ButtonControl, TextField } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst MultipleInputs = ({ classes, items, placeholder, onRemoveItem, onChange, disabled }) => (\n  <div className={classes.multipleInputs}>\n    {items.map(({ id, value }) => (\n      <TextField\n        onChange={event => onChange(id, event.target.value)}\n        key={id}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n        control={\n          <ButtonControl color=\"primary\" onClick={() => onRemoveItem(id)} title=\"Remove example\" disabled={disabled}>\n            <DeleteIcon />\n          </ButtonControl>\n        }\n      />\n    ))}\n  </div>\n);\n\nMultipleInputs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ),\n  placeholder: PropTypes.string,\n  onRemoveItem: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nMultipleInputs.defaultProps = {\n  items: [],\n  placeholder: null,\n  disabled: false,\n  classes: {}\n};\n\nexport default MultipleInputs;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport MultipleInputs from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(MultipleInputs);\n","const styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  }\n});\n\nexport default styles;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, Slide } from \"@material-ui/core\";\nimport { SnackbarContent } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Notifications = ({ classes, children, notifications, hideNotification }) => (\n  <Fragment>\n    {children}\n    <Snackbar anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }} open={notifications.length > 0}>\n      <div>\n        {notifications.reduceRight((acc, cur) => acc.concat(cur), []).map(({ id, text, type }) => (\n          <Slide in={!!text} direction=\"up\" key={id}>\n            <SnackbarContent\n              className={classes.margin}\n              onClose={() => hideNotification(id)}\n              variant={type}\n              message={text}\n            />\n          </Slide>\n        ))}\n      </div>\n    </Snackbar>\n  </Fragment>\n);\n\nNotifications.propTypes = {\n  notifications: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string,\n      type: PropTypes.string\n    })\n  ),\n  hideNotification: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  classes: composeClassesPropTypes(styles)\n};\n\nNotifications.defaultProps = {\n  notifications: [],\n  classes: {}\n};\n\nexport default Notifications;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withNotifications } from '../../context/notifications';\nimport Notifications from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withNotifications\n);\n\nexport default enhance(Notifications);\n","const styles = {\n  page: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, auto)\",\n    gap: \"1rem\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paginationInput: {\n    width: \"100px\"\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport { TextField, ButtonControl } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Pagination = ({ classes, pageNumber, maxPageCount, onChangePage }) => {\n  const prevPage = Number(pageNumber) > 1 ? Number(pageNumber) - 1 : 1;\n  const nextPage = Number(pageNumber) < maxPageCount ? Number(pageNumber) + 1 : maxPageCount;\n\n  return (\n    <div className={classes.page}>\n      <ButtonControl\n        onClick={() => onChangePage(prevPage)}\n        disabled={pageNumber === 1}\n        color=\"primary\"\n        title=\"Previous page\"\n      >\n        <KeyboardArrowLeft />\n      </ButtonControl>\n      <div className={classes.paginationInput}>\n        <TextField\n          label={maxPageCount ? `Page ${pageNumber} of ${maxPageCount}` : \"Page number\"}\n          onChange={event => {\n            const { value } = event.target;\n            let numberPage = parseInt(value, 10);\n\n            if (value > maxPageCount) numberPage = maxPageCount;\n            if (value < 1) numberPage = 1;\n            return onChangePage(numberPage);\n          }}\n          value={pageNumber}\n        />\n      </div>\n      <ButtonControl\n        onClick={() => onChangePage(nextPage)}\n        disabled={maxPageCount === pageNumber}\n        title=\"Next page\"\n        color=\"primary\"\n      >\n        <KeyboardArrowRight />\n      </ButtonControl>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  pageNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxPageCount: PropTypes.number,\n  onChangePage: PropTypes.func.isRequired\n};\n\nPagination.defaultProps = {\n  classes: {},\n  pageNumber: 1,\n  maxPageCount: 0\n};\n\nexport default Pagination;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Pagination from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(Pagination);\n","const styles = theme => ({\n  paginationPanel: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(0, auto))',\n    justifyContent: 'end',\n    gap: '1rem',\n    background: theme.palette.background.paper,\n    padding: '10px 10px',\n    width: '100%',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport { Pagination, SelectWithOptions } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst PaginationPanel = ({ countPerPage, page, maxPageCount, onChangePage, onChangeCount, classes }) => (\n  <List>\n    <ListItem>\n      <div className={classes.paginationPanel}>\n        <SelectWithOptions\n          onChange={onChangeCount}\n          value={countPerPage}\n          label=\"Words per page\"\n          options={[\n            { key: 1, title: 1 },\n            { key: 5, title: 5 },\n            { key: 10, title: 10 },\n            { key: 25, title: 25 },\n            { key: 50, title: 50 },\n            { key: 100, title: 100 }\n          ]}\n        />\n        <Pagination pageNumber={page} maxPageCount={maxPageCount} onChangePage={onChangePage} />\n      </div>\n    </ListItem>\n  </List>\n);\n\nPaginationPanel.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  countPerPage: PropTypes.number,\n  page: PropTypes.number,\n  maxPageCount: PropTypes.number,\n  onChangePage: PropTypes.func.isRequired,\n  onChangeCount: PropTypes.func.isRequired\n};\n\nPaginationPanel.defaultProps = {\n  countPerPage: 5,\n  page: 1,\n  maxPageCount: 0,\n  classes: {}\n};\n\nexport default PaginationPanel;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport PaginationPanel from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(PaginationPanel);\n","const styles = theme => ({\n  clickableWord: {\n    display: 'inline-block',\n    color: theme.palette.text.primary,\n    fontWeight: 'bolder',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { joinRoute } from \"url-joiner\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst SearchableWord = ({ word, classes, delimiter }) => (\n  <React.Fragment>\n    <Link\n      className={classes.clickableWord}\n      to={joinRoute({\n        pathname: routes.words.search,\n        searchParams: { query: word }\n      })}\n    >\n      {word}\n    </Link>\n    {delimiter}\n  </React.Fragment>\n);\n\nSearchableWord.propTypes = {\n  word: PropTypes.string.isRequired,\n  delimiter: PropTypes.node,\n  classes: composeClassesPropTypes(styles)\n};\n\nSearchableWord.defaultProps = {\n  delimiter: null,\n  classes: {}\n};\n\nexport default SearchableWord;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport SearchableWord from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(SearchableWord);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\n\nconst SelectBlock = ({ label, ...restProps }) => (\n  <FormControl color=\"primary\">\n    {label && <InputLabel htmlFor={label}>{label}</InputLabel>}\n    <Select {...restProps} />\n  </FormControl>\n);\n\nSelectBlock.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string\n};\n\nSelectBlock.defaultProps = {\n  label: null\n};\n\nexport default SelectBlock;\n","const styles = {\n  selectWithOptions: {\n    minWidth: '130px',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { Select } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst SelectWithOptions = ({ classes, label, value, onChange, options }) => (\n  <Select label={label} value={value} onChange={onChange} className={classes.selectWithOptions}>\n    {options.length === 0 ? (\n      <MenuItem value=\"\" disabled>\n        There are no appropriate options\n      </MenuItem>\n    ) : (\n      options.map(({ key, title }) => (\n        <MenuItem value={key} key={key}>\n          {title}\n        </MenuItem>\n      ))\n    )}\n  </Select>\n);\n\nSelectWithOptions.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  options: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func.isRequired,\n  classes: composeClassesPropTypes(styles)\n};\n\nSelectWithOptions.defaultProps = {\n  options: [],\n  value: \"\",\n  label: null,\n  classes: {}\n};\n\nexport default SelectWithOptions;\n","import { compose } from \"recompose\";\nimport injectSheet from \"react-jss\";\nimport SelectWithOptions from \"./component\";\nimport styles from \"./styles\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(SelectWithOptions);\n","import React from \"react\";\nimport { SnackbarContent, IconButton } from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst CustomizedSnackbarContent = ({ classes, className, message, onClose, variant, ...other }) => {\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      open={!!message}\n      className={classNames(classes.snackbar, className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n};\n\nexport default CustomizedSnackbarContent;\n","const styles = theme => ({\n  snackbar: {\n    backgroundColor: props => theme.main.colors.notification[props.variant]\n  },\n  icon: {\n    fontSize: 20,\n    color: theme.palette.text.primary\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n    color: theme.palette.text.primary,\n  },\n});\n\nexport default styles;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Snackbar from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(Snackbar);\n","const styles = theme => ({\n  textFieldControl: {\n    display: props => (props.control ? \"grid\" : \"initial\"),\n    rowGap: props => (props.control ? \".5rem\" : \"initial\"),\n    columnGap: props => (props.control ? \"1rem\" : \"initial\"),\n    justifyContent: props => (props.control ? \"space-between\" : \"initial\"),\n    alignItems: props => (props.control ? \"center\" : \"initial\"),\n    gridTemplateColumns: props => (props.control ? \"100fr 1fr\" : \"initial\"),\n    marginBottom: props =>\n      props.control ? \"initial\" : theme.main.margin.medium\n  },\n  textField: {\n    marginBottom: theme.main.margin.medium\n  },\n  root: {\n    width: \"100%\"\n  },\n  label: {\n    color: `${theme.main.colors.text} !important`,\n    opacity: 0.7\n  },\n  underline: {\n    \"&:after\": {\n      borderBottom: `${theme.main.colors.text} !important`\n    }\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"@material-ui/core\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst TextFieldCustomized = ({ classes, control, ...restProps }) => (\n  <div className={classes.textFieldControl}>\n    <TextField\n      {...restProps}\n      classes={{\n        root: classes.root\n      }}\n      InputProps={{\n        classes: {\n          underline: classes.underline\n        }\n      }}\n      InputLabelProps={{\n        className: classes.label\n      }}\n    />\n    {control}\n  </div>\n);\n\nTextFieldCustomized.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  control: PropTypes.node\n};\n\nTextFieldCustomized.defaultProps = {\n  control: null,\n  classes: {}\n};\n\nexport default TextFieldCustomized;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport TextFieldCustomized from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(TextFieldCustomized);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Fade, LinearProgress } from \"@material-ui/core\";\nimport { TextField } from \"..\";\n\nconst TextFieldLoading = ({ loading, ...restProps }) => (\n  <div>\n    <TextField {...restProps} />\n    <Fade in={loading}>\n      <LinearProgress color=\"secondary\" />\n    </Fade>\n  </div>\n);\n\nTextFieldLoading.propTypes = {\n  loading: PropTypes.bool\n};\n\nTextFieldLoading.defaultProps = {\n  loading: false\n};\n\nexport default TextFieldLoading;\n","const styles = {\n  toolbarWrapper: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(0, auto))',\n    gap: '1rem',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, Zoom } from \"@material-ui/core\";\nimport KeyboardArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUp from \"@material-ui/icons/KeyboardArrowUp\";\nimport { SelectWithOptions, Button } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Toolbar = ({\n  checkAllControl,\n  sortBy,\n  sortDirection,\n  onChangeSortDirection,\n  onChangeSortBy,\n  isAnyChecked,\n  children,\n  classes\n}) => (\n  <List>\n    <ListItem divider>\n      <div>{checkAllControl}</div>\n      <div className={classes.toolbarWrapper}>\n        {isAnyChecked ? (\n          <Zoom in={isAnyChecked}>{children}</Zoom>\n        ) : (\n          <Fragment>\n            <Button onClick={onChangeSortDirection} title=\"Sort direction\" color=\"primary\" variant=\"contained\" mini>\n              {sortDirection === \"descend\" ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n            </Button>\n            <div>\n              <SelectWithOptions\n                value={sortBy}\n                label=\"Sort by\"\n                onChange={onChangeSortBy}\n                options={[\n                  { key: \"en\", title: \"English\" },\n                  { key: \"ua\", title: \"Ukrainian\" },\n                  { key: \"dateCreated\", title: \"Was added\" },\n                  { key: \"timesLearnt\", title: \"Was learnt times\" },\n                  { key: \"dateLastLearnt\", title: \"Was learnt last time\" }\n                ]}\n              />\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </ListItem>\n  </List>\n);\n\nToolbar.propTypes = {\n  checkAllControl: PropTypes.node,\n  sortBy: PropTypes.string,\n  sortDirection: PropTypes.string,\n  onChangeSortDirection: PropTypes.func.isRequired,\n  onChangeSortBy: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  isAnyChecked: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nToolbar.defaultProps = {\n  checkAllControl: null,\n  sortBy: \"dateCreated\",\n  sortDirection: \"ascend\",\n  isAnyChecked: false,\n  classes: {}\n};\n\nexport default Toolbar;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Toolbar from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(Toolbar);\n","const styles = theme => ({\n  header: {\n    padding: `${theme.main.padding.large} 0`,\n  },\n  headerLinkWrapper: {\n    margin: 0,\n  },\n  headerLink: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    fontSize: '1.6rem',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, Tooltip, CircularProgress } from \"@material-ui/core\";\n\nconst UserIcon = ({ user, isLoading }) =>\n  isLoading || Object.keys(user).length === 0 ? (\n    <CircularProgress />\n  ) : (\n    <Tooltip title={user.name}>\n      <Avatar alt={user.name} src={user.imageUrl} />\n    </Tooltip>\n  );\n\nUserIcon.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  googleToken: PropTypes.shape({}),\n  isLoading: PropTypes.bool\n};\n\nUserIcon.defaultProps = {\n  user: {},\n  googleToken: null,\n  isLoading: false\n};\n\nexport default UserIcon;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withUser } from '../../context/user';\nimport styles from './styles';\nimport UserIcon from './component';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withUser,\n);\n\nexport default enhance(UserIcon);\n","const WORD_INITIAL_VALUES = {\n  en: \"\",\n  ua: \"\",\n  transcription: \"\",\n  partOfSpeech: [],\n  examples: [],\n  synonyms: [],\n};\n\nexport default WORD_INITIAL_VALUES;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Fade, LinearProgress, TextField } from \"@material-ui/core\";\nimport uuid from \"uuid\";\nimport { Button, MultipleInputs, InputsBlock, ChipSet, ControlsSeparator, SelectWithOptions } from \"..\";\nimport loadingNames from \"../../constants/loading-names\";\nimport WORD_INITIAL_VALUES from \"../../constants/word-initial-values\";\n\nclass WordForm extends Component {\n  static propTypes = {\n    checkIsLoading: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    word: PropTypes.shape({\n      _id: PropTypes.string,\n      en: PropTypes.string,\n      ua: PropTypes.string,\n      transcription: PropTypes.string,\n      partOfSpeech: PropTypes.arrayOf(PropTypes.object),\n      synonyms: PropTypes.arrayOf(PropTypes.object),\n      examples: PropTypes.arrayOf(PropTypes.object)\n    })\n  };\n\n  static defaultProps = {\n    word: {}\n  };\n\n  state = {\n    word: WORD_INITIAL_VALUES\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) =>\n    nextProps.word._id !== prevState.word._id ? { word: nextProps.word } : prevState;\n\n  handleFieldChange = (fieldKey, value) =>\n    this.setState(prevState => ({\n      word: {\n        ...prevState.word,\n        [fieldKey]: value\n      }\n    }));\n\n  handleRemoveItemFromArray = (fieldKey, id) =>\n    this.setState(prevState => ({\n      word: {\n        ...prevState.word,\n        [fieldKey]: prevState.word[fieldKey].filter(item => item.id !== id)\n      }\n    }));\n\n  handleAddItemToArray = (fieldKey, value) =>\n    this.setState(prevState => ({\n      word: {\n        ...prevState.word,\n        [fieldKey]: [{ id: uuid(), value }, ...prevState.word[fieldKey]]\n      }\n    }));\n\n  handleOnChangeMultipleInputs = (fieldKey, id, value) =>\n    this.setState(prevState => ({\n      word: {\n        ...prevState.word,\n        [fieldKey]: prevState.word[fieldKey].map(item => (item.id === id ? { ...item, value } : item))\n      }\n    }));\n\n  onResetForm = () => this.setState({ word: this.props.word });\n\n  render() {\n    const { onSubmit, checkIsLoading } = this.props;\n    const { word } = this.state;\n    const { en, ua, transcription, examples, partOfSpeech, synonyms } = word;\n    const loading = checkIsLoading(loadingNames.words.fetch, loadingNames.words.save);\n    const freePartsOfSpeech = [\n      { key: \"noun\", title: \"Noun\" },\n      { key: \"pronoun\", title: \"Pronoun\" },\n      { key: \"verb\", title: \"Verb\" },\n      { key: \"adjective\", title: \"Adjective\" },\n      { key: \"adverb\", title: \"Adverb\" },\n      { key: \"preposition\", title: \"Preposition\" },\n      { key: \"conjunction\", title: \"Conjunction\" },\n      { key: \"interjection\", title: \"Interjection\" },\n      { key: \"article\", title: \"Article\" },\n      { key: \"determiner\", title: \"Determiner\" }\n    ].filter(option => !(partOfSpeech && partOfSpeech.map(part => part.value).includes(option.key)));\n    return (\n      <form onSubmit={onSubmit}>\n        <Fade in={loading}>\n          <LinearProgress color=\"secondary\" />\n        </Fade>\n        <InputsBlock title=\"Main information\">\n          <TextField\n            label=\"English\"\n            value={en}\n            onChange={event => this.handleFieldChange(\"en\", event.target.value)}\n            disabled={loading}\n          />\n          <TextField\n            label=\"Ukrainian\"\n            value={ua}\n            onChange={event => this.handleFieldChange(\"ua\", event.target.value)}\n            disabled={loading}\n          />\n          <TextField\n            label=\"Transcription\"\n            value={transcription}\n            onChange={event => this.handleFieldChange(\"transcription\", event.target.value)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <InputsBlock\n          title=\"Parts of speech\"\n          control={\n            <SelectWithOptions\n              value={freePartsOfSpeech[0] ? freePartsOfSpeech[0].key : \"\"}\n              label=\"Parts of speech\"\n              onChange={event => this.handleAddItemToArray(\"partOfSpeech\", event.target.value)}\n              options={freePartsOfSpeech}\n              disabled={loading}\n            />\n          }\n        >\n          <ChipSet\n            items={partOfSpeech}\n            onRemoveItem={id => this.handleRemoveItemFromArray(\"partOfSpeech\", id)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <InputsBlock onAddItem={value => this.handleAddItemToArray(\"synonyms\", value)} title=\"Synonyms\" control>\n          <ChipSet\n            items={synonyms}\n            onRemoveItem={id => this.handleRemoveItemFromArray(\"synonyms\", id)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <InputsBlock onAddItem={value => this.handleAddItemToArray(\"examples\", value)} title=\"Examples\" control>\n          <MultipleInputs\n            items={examples}\n            placeholder=\"Example\"\n            onChange={(id, value) => this.handleOnChangeMultipleInputs(\"examples\", id, value)}\n            onRemoveItem={id => this.handleRemoveItemFromArray(\"examples\", id)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <ControlsSeparator align=\"right\">\n          <Button onClick={this.onResetForm} disabled={loading} variant=\"contained\" color=\"primary\" title=\"Reset\">\n            Reset changes\n          </Button>\n          <Button onClick={() => onSubmit(word)} disabled={loading} variant=\"contained\" color=\"primary\" title=\"Save\">\n            Save\n          </Button>\n        </ControlsSeparator>\n      </form>\n    );\n  }\n}\n\nexport default WordForm;\n","const styles = theme => ({\n  wordItemWrapper: {\n    opacity: props =>\n      props.isLoading || props.isChecked ? theme.main.opacity.disabled : 1\n  },\n  description: {\n    padding: `${theme.main.padding.small} 0`\n  },\n  wordLink: {\n    color: theme.palette.primary.main\n  },\n  wordTime: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    fontSize: \"0.9em\"\n  }\n});\n\nexport default styles;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport { Checkbox, Fade, CircularProgress, Grid, ListItemText } from \"@material-ui/core\";\nimport { joinRoute } from \"url-joiner\";\nimport routes from \"../../routes\";\nimport { ButtonWithRouter } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst EMPTY_VALUE = \"-\";\n\nconst WordItemInList = props => {\n  const { isChecked, onWordCheck, word, linkToWord, loading, classes } = props;\n  const { _id, en, ua, transcription, dateCreated, dateLastLearnt, timesLearnt } = word;\n  const lastLearnt =\n    dateLastLearnt && dateLastLearnt === new Date(0).toISOString() ? \"Never\" : moment(dateLastLearnt).fromNow();\n\n  return (\n    <Grid container spacing={16} alignItems=\"center\" className={classes.wordItemWrapper}>\n      <Grid item xs={1}>\n        <Checkbox onChange={() => onWordCheck(_id)} checked={isChecked} disabled={loading} />\n      </Grid>\n      <Grid item xs={7} className={classes.description}>\n        <ListItemText\n          primary={\n            loading ? (\n              <Fade in={loading}>\n                <CircularProgress color=\"secondary\" size={20} />\n              </Fade>\n            ) : (\n              <Fragment>\n                {en && (\n                  <Link className={classes.wordLink} to={linkToWord}>\n                    {en}\n                  </Link>\n                )}\n                {[en && \" \", transcription && `[${transcription}]`, ua].filter(Boolean).join(\" - \")}\n              </Fragment>\n            )\n          }\n          secondary={[timesLearnt != null && `Times learnt: ${timesLearnt}`, lastLearnt && `Last learnt: ${lastLearnt}`]\n            .filter(Boolean)\n            .join(` · `)}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <div className={classes.wordTime}>{(dateCreated && moment(dateCreated).fromNow()) || EMPTY_VALUE}</div>\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonWithRouter\n          to={joinRoute({\n            pathname: routes.words.list.root,\n            paths: [_id, \"edit\"]\n          })}\n          disabled={loading}\n          title=\"Edit\"\n        >\n          <Edit />\n        </ButtonWithRouter>\n      </Grid>\n    </Grid>\n  );\n};\n\nWordItemInList.propTypes = {\n  word: PropTypes.shape({\n    _id: PropTypes.string,\n    en: PropTypes.string,\n    ua: PropTypes.string,\n    transcription: PropTypes.string,\n    dateCreated: PropTypes.string\n  }),\n  linkToWord: PropTypes.string,\n  onWordCheck: PropTypes.func,\n  isChecked: PropTypes.bool,\n  loading: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nWordItemInList.defaultProps = {\n  word: {\n    _id: \"\",\n    en: \"\",\n    ua: \"\",\n    transcription: \"\",\n    dateCreated: \"\"\n  },\n  onWordCheck: () => {},\n  linkToWord: \"\",\n  isChecked: false,\n  loading: false,\n  classes: {}\n};\n\nexport default WordItemInList;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport WordItemInList from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(WordItemInList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Fade, LinearProgress } from \"@material-ui/core\";\nimport { InputsBlock, LineExplanation, ListOfSearchableWords, Image } from \"..\";\n\nexport const mapValues = items => items.map(item => item.value).filter(Boolean);\n\nconst WordPreview = ({ word, loading }) => {\n  const { en, ua, transcription, partOfSpeech, synonyms, antonyms, similarTo, examples, gif } = word;\n  return (\n    <div>\n      <Fade in={loading}>\n        <LinearProgress color=\"secondary\" />\n      </Fade>\n      <InputsBlock title=\"Main information\">\n        <Image src={gif} alt={en} />\n        <LineExplanation label=\"English\">{en}</LineExplanation>\n        <LineExplanation label=\"Ukrainian\">{ua}</LineExplanation>\n        <LineExplanation label=\"Transcription\">{transcription && `[${transcription}]`}</LineExplanation>\n        <LineExplanation label=\"Part of speech\">\n          <ListOfSearchableWords items={partOfSpeech && mapValues(partOfSpeech)} />\n        </LineExplanation>\n        <LineExplanation label=\"Synonyms\">\n          <ListOfSearchableWords items={synonyms && mapValues(synonyms)} />\n        </LineExplanation>\n        <LineExplanation label=\"Antonyms\">\n          <ListOfSearchableWords items={antonyms && mapValues(antonyms)} />\n        </LineExplanation>\n        <LineExplanation label=\"Similar to\">\n          <ListOfSearchableWords items={similarTo && mapValues(similarTo)} />\n        </LineExplanation>\n      </InputsBlock>\n      <InputsBlock title=\"Examples\">\n        {examples ? examples.map(example => <LineExplanation key={example.id}>{example.value}</LineExplanation>) : \"\"}\n      </InputsBlock>\n    </div>\n  );\n};\n\nWordPreview.propTypes = {\n  word: PropTypes.shape({\n    en: PropTypes.string,\n    ua: PropTypes.string,\n    transcription: PropTypes.string,\n    gif: PropTypes.string,\n    partOfSpeech: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    synonyms: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    antonyms: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    similarTo: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    examples: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    )\n  }),\n  loading: PropTypes.bool\n};\n\nWordPreview.defaultProps = {\n  word: {},\n  loading: false\n};\n\nexport default WordPreview;\n","const styles = theme => ({\n  wordsList: {\n    background: theme.palette.background.paper\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport uuid from \"uuid\";\nimport { joinRoute } from \"url-joiner\";\nimport routes from \"../../routes\";\nimport { WordItemInList } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst WordsList = ({ wordsList, loading, countPerPage, checked, onWordCheck, classes }) => (\n  <List className={classes.wordsList} classes={{ root: classes.wordsList }}>\n    {loading\n      ? Array(countPerPage)\n          .fill(null)\n          .map(() => (\n            <ListItem key={uuid()} divider>\n              <WordItemInList loading={loading} />\n            </ListItem>\n          ))\n      : wordsList.map(word => {\n          const { _id } = word;\n          const linkToWord = joinRoute({\n            pathname: routes.words.list.root,\n            paths: [_id]\n          });\n          const isChecked = checked.includes(_id);\n\n          return (\n            <ListItem key={_id} divider>\n              <WordItemInList\n                word={word}\n                linkToWord={linkToWord}\n                onWordCheck={onWordCheck}\n                isChecked={isChecked}\n                loading={loading}\n              />\n            </ListItem>\n          );\n        })}\n  </List>\n);\n\nWordsList.propTypes = {\n  wordsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired\n    })\n  ),\n  loading: PropTypes.bool,\n  countPerPage: PropTypes.number,\n  checked: PropTypes.arrayOf(PropTypes.string),\n  onWordCheck: PropTypes.func.isRequired,\n  classes: composeClassesPropTypes(styles)\n};\n\nWordsList.defaultProps = {\n  wordsList: null,\n  loading: null,\n  countPerPage: null,\n  checked: null,\n  classes: {}\n};\n\nexport default WordsList;\n","\nimport { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport WordsList from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(WordsList);\n","import uuid from \"uuid\";\n\nconst mergeArrays = (data, field) =>\n  Array.from(\n    new Set(\n      data.reduce(\n        (res, val) => (val[field] ? [...res, ...val[field]] : [...res]),\n        []\n      )\n    )\n  );\n\nconst addIdForArrayItems = items =>\n  items.map(item => ({ value: item, id: uuid() }));\n\nconst normalizeWord = (wordData = {}) => {\n  const { results = [], ...rest } = wordData;\n\n  return {\n    examples: addIdForArrayItems(mergeArrays(results, \"examples\")),\n    definitions: addIdForArrayItems(results.map(item => item.definition)),\n    similarTo: addIdForArrayItems(mergeArrays(results, \"similarTo\")),\n    synonyms: addIdForArrayItems(mergeArrays(results, \"synonyms\")),\n    antonyms: addIdForArrayItems(mergeArrays(results, \"antonyms\")),\n    partOfSpeech: addIdForArrayItems(\n      Array.from(new Set(results.map(item => item.partOfSpeech)))\n    ),\n    ...rest\n  };\n};\n\nconst denormalizeWord = ({ _id, ...wordWithoutId }) => wordWithoutId;\n\nexport { mergeArrays, addIdForArrayItems, normalizeWord, denormalizeWord };\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { parseSearchParams } from \"url-joiner\";\nimport { apiWord, apiGif } from \"../api\";\nimport notificationType from \"../constants/notifications-type\";\nimport loadingNames from \"../constants/loading-names\";\nimport { normalizeWord } from \"../modules/word-utils\";\nimport { withLoadingNames } from \"./loading-names\";\nimport { withNotifications } from \"./notifications\";\nimport createHandleFetch from \"../modules/handle-fetch\";\nimport { withUser } from \"./user\";\nimport { withErrors } from \"./errors\";\n\nconst WordsContext = createContext({});\n\nconst INITIAL_WORD_SORT_DATA = {\n  sortBy: \"dateCreated\",\n  sortDirection: \"descend\",\n  page: 1,\n  countPerPage: 5\n};\n\nconst wordsInitialState = {\n  wordsList: [],\n  word: {},\n  count: 0,\n  gif: \"\"\n};\nclass WordsProviderCmp extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    showNotification: PropTypes.func.isRequired,\n    startLoading: PropTypes.func.isRequired,\n    stopLoading: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    location: ReactRouterPropTypes.location.isRequired,\n    googleToken: PropTypes.shape({}),\n    user: PropTypes.shape({})\n  };\n\n  static defaultProps = {\n    googleToken: null,\n    user: null\n  };\n\n  state = wordsInitialState;\n\n  handleFetch = createHandleFetch({\n    startLoading: this.props.startLoading,\n    stopLoading: this.props.stopLoading,\n    errorHandler: this.props.handleError,\n  });\n\n  getSearchParams = () => {\n    const { location } = this.props;\n    const { sortBy, sortDirection, page, countPerPage } = INITIAL_WORD_SORT_DATA;\n    const parsedParams = parseSearchParams(location.search);\n\n    return {\n      sortBy: parsedParams.sortBy || sortBy,\n      sortDirection: parsedParams.sortDirection || sortDirection,\n      page: Number(parsedParams.page) || page,\n      countPerPage: Number(parsedParams.countPerPage) || countPerPage\n    };\n  };\n\n  cleanWordsList = () => this.setState({ wordsList: wordsInitialState.wordsList });\n\n  cleanWord = () => this.setState({ word: wordsInitialState.word });\n\n  setWordToState = word => this.setState({ word });\n\n  fetchWord = wordId =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.fetch,\n      requestHandler: token => apiWord.get(wordId, token),\n      responseHandler: word => this.setState({ word })\n    });\n\n  fetchWordsList = () => {\n    const { location } = this.props;\n    const { sortBy, sortDirection, page, countPerPage } = this.getSearchParams(location.search);\n    const query = {\n      skip: (page - 1) * countPerPage,\n      limit: Number(countPerPage),\n      sortDirection: sortDirection === \"descend\" ? -1 : 1,\n      sortBy\n    };\n\n    return this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.list,\n      requestHandler: token => apiWord.getList({ query, googleId: token && token.googleId }, token),\n      responseHandler: ({ items = [], count = 0 } = {}) => this.setState({ wordsList: items, count })\n    });\n  };\n\n  createWord = (word, ownerId) =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.save,\n      requestHandler: token => apiWord.create({ ...word, googleId: token && token.googleId, ownerId }, token),\n      responseHandler: () =>\n        this.props.showNotification(\"The word has been saved successfully\", notificationType.success)\n    });\n\n  editWord = word =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.fetch,\n      requestHandler: token => apiWord.update(word, token),\n      responseHandler: () =>\n        this.props.showNotification(\"The word has been updated successfully\", notificationType.success)\n    });\n\n  deleteWord = id =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.delete,\n      requestHandler: token => apiWord.delete(id, token),\n      responseHandler: () => this.fetchWordsList()\n    }).then(() => this.props.showNotification(\"The word has been deleted successfully\", notificationType.success));\n\n  searchWord = params =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.search,\n      requestHandler: token => apiWord.search(params, token),\n      responseHandler: foundWord =>\n        apiGif.get({ q: foundWord.en }).then(gifs => {\n          const downsizedGifs = gifs && gifs.data && gifs.data.map(gif => gif.images.downsized_large.url);\n          const randomGif = downsizedGifs && downsizedGifs[Math.round(Math.random() * downsizedGifs.length)];\n\n          this.setState({\n            word: {\n              ...normalizeWord(foundWord),\n              gif: randomGif\n            }\n          });\n        })\n    });\n\n  fetchWordsToLearn = () =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.learn,\n      requestHandler: token => apiWord.getListToLearn({ googleId: token && token.googleId }, token),\n      responseHandler: ({ items, count }) => this.setState({ wordsList: items, count })\n    });\n\n  learnWord = wordId =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.learn,\n      requestHandler: token => apiWord.learn(wordId, token),\n      responseHandler: () =>\n        this.setState(prevState => ({\n          wordsList: [...prevState.wordsList.filter(word => word._id !== wordId)]\n        }))\n    });\n\n  relearnWord = wordId => {\n    this.setState(prevState => {\n      const wordToRelearn = prevState.wordsList.find(word => word._id === wordId);\n\n      return {\n        wordsList: [...prevState.wordsList.filter(word => word._id !== wordToRelearn._id), wordToRelearn]\n      };\n    });\n  };\n\n  render() {\n    const { wordsList, word, count, gif } = this.state;\n    const { children, user } = this.props;\n\n    return (\n      <WordsContext.Provider\n        value={{\n          gif,\n          word,\n          wordsList,\n          wordsCount: count,\n          getWordsSearchParams: this.getSearchParams,\n          setWordToState: this.setWordToState,\n          cleanWord: this.cleanWord,\n          cleanWordsList: this.cleanWordsList,\n          fetchWord: this.fetchWord,\n          fetchWordsList: this.fetchWordsList,\n          fetchWordsToLearn: this.fetchWordsToLearn,\n          editWord: this.editWord,\n          deleteWord: this.deleteWord,\n          learnWord: this.learnWord,\n          relearnWord: this.relearnWord,\n          saveWord: w => this.createWord(w, user._id),\n          searchWord: this.searchWord\n        }}>\n        {children}\n      </WordsContext.Provider>\n    );\n  }\n}\n\nconst WordsProvider = compose(\n  withRouter,\n  withUser,\n  withLoadingNames,\n  withNotifications,\n  withErrors,\n)(WordsProviderCmp);\n\nconst withWords = Cmp => props => (\n  <WordsContext.Consumer>{value => <Cmp {...value} {...props} />}</WordsContext.Consumer>\n);\n\nexport { WordsProvider, withWords };\n","const styles = theme => ({\n  wordsTableWrapper: {\n    display: \"grid\",\n    margin: 0,\n    padding: 0,\n    borderRadius: theme.main.borderRadius.small,\n    overflow: \"hidden\",\n    rowGap: \"1px\",\n    background: theme.palette.background.paper\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { Checkbox } from \"@material-ui/core\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport { parseSearchParams, joinRoute } from \"url-joiner\";\nimport loadingNames from \"../../constants/loading-names\";\nimport { PaginationPanel, Toolbar, WordsList, ButtonControl } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nclass WordsTable extends Component {\n  static propTypes = {\n    wordsList: PropTypes.arrayOf(\n      PropTypes.shape({\n        _id: PropTypes.string\n      })\n    ),\n    history: ReactRouterPropTypes.history.isRequired,\n    location: ReactRouterPropTypes.location.isRequired,\n    wordsCount: PropTypes.number,\n    deleteWord: PropTypes.func.isRequired,\n    getWordsSearchParams: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    wordsList: null,\n    wordsCount: 0,\n    classes: {}\n  };\n\n  state = {\n    checked: []\n  };\n\n  handleOnCheck = id =>\n    this.setState(prevState => ({\n      checked: prevState.checked.find(wordId => wordId === id)\n        ? prevState.checked.filter(wordId => wordId !== id)\n        : [...prevState.checked, id]\n    }));\n\n  handleOnCheckAll = () =>\n    this.setState(prevState => ({\n      checked:\n        prevState.checked.length !== this.props.wordsList.length ? [...this.props.wordsList.map(word => word._id)] : []\n    }));\n\n  handleDeleteWord = () =>\n    this.state.checked.length > 0 &&\n    Promise.resolve(this.state.checked.map(id => this.props.deleteWord(id))).then(() => this.setState({ checked: [] }));\n\n  generateUrl = params => {\n    const { location } = this.props;\n\n    return joinRoute({\n      pathname: location.pathname,\n      search: location.search,\n      searchParams: params\n    });\n  };\n\n  handleOnChangeSelect = (event, field) =>\n    this.props.history.push(this.generateUrl({ page: 1, [field]: event.target.value }));\n\n  handleOnChangeDirection = () => {\n    const { location, history } = this.props;\n\n    return history.push(\n      this.generateUrl({\n        sortDirection: parseSearchParams(location.search).sortDirection === \"descend\" ? \"ascend\" : \"descend\"\n      })\n    );\n  };\n\n  handleOnChangePage = pageNumber => this.props.history.push(this.generateUrl({ page: pageNumber }));\n\n  render() {\n    const { checked } = this.state;\n    const { wordsList, wordsCount, checkIsLoading, getWordsSearchParams, location, classes } = this.props;\n    const { countPerPage, sortBy, sortDirection, page } = getWordsSearchParams(location);\n    const loading = checkIsLoading(loadingNames.words.list);\n    const isCheckedAll = checked.length === wordsList.length && checked.length > 0;\n\n    return (\n      <main>\n        <div className={classes.wordsTableWrapper}>\n          <Toolbar\n            checkAllControl={<Checkbox onChange={this.handleOnCheckAll} checked={isCheckedAll} />}\n            isAnyChecked={checked.length > 0}\n            sortBy={sortBy}\n            sortDirection={sortDirection}\n            onChangeSortDirection={this.handleOnChangeDirection}\n            onChangeSortBy={event => this.handleOnChangeSelect(event, \"sortBy\")}\n          >\n            <ButtonControl\n              disabled={checked.length === 0}\n              onClick={this.handleDeleteWord}\n              color=\"primary\"\n              title=\"Delete\"\n            >\n              <Delete />\n            </ButtonControl>\n          </Toolbar>\n          <WordsList\n            wordsList={wordsList}\n            onWordCheck={this.handleOnCheck}\n            loading={loading}\n            countPerPage={countPerPage}\n            checked={checked}\n          />\n          <PaginationPanel\n            countPerPage={countPerPage}\n            page={page}\n            maxPageCount={Math.ceil(wordsCount / countPerPage)}\n            onChangeCount={event => this.handleOnChangeSelect(event, \"countPerPage\")}\n            onChangePage={this.handleOnChangePage}\n          />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default WordsTable;\n","import { compose } from \"recompose\";\nimport injectSheet from 'react-jss';\nimport { withRouter } from \"react-router-dom\";\nimport { withLoadingNames } from \"../../context/loading-names\";\nimport { withWords } from \"../../context/words\";\nimport WordsTable from \"./component\";\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withRouter,\n  withLoadingNames,\n  withWords\n);\n\nexport default enhance(WordsTable);\n","const styles = theme => ({\n  loginButton: {\n    background: theme.palette.primary.main,\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { GoogleLogin } from \"react-google-login\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Button } from \"../../components\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env;\n\nclass Login extends Component {\n  static propTypes = {\n    setGoogleToken: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    classes: {}\n  };\n\n  onSuccess = response => this.props.setGoogleToken(response, () => this.props.history.goBack());\n\n  onFailure = error => this.props.handleError(error);\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <GoogleLogin\n        className={classes.loginButton}\n        clientId={REACT_APP_GOOGLE_CLIENT_ID}\n        onSuccess={this.onSuccess}\n        onFailure={this.onFailure}\n        color=\"primary\"\n        render={renderProps => (\n          <Button onClick={renderProps.onClick} color=\"secondary\" variant=\"contained\" title=\"Login with google account\">\n            <AccountCircle />\n            Login with google account\n          </Button>\n        )}\n      />\n    );\n  }\n}\n\nexport default Login;\n","import { compose } from \"recompose\";\nimport injectSheet from 'react-jss';\nimport { withRouter } from \"react-router-dom\";\nimport { withUser } from \"../../context/user\";\nimport LoginCmp from \"./container\";\nimport styles from './styles';\nimport { withErrors } from \"../../context/errors\";\n\nconst Login = compose(\n  injectSheet(styles),\n  withRouter,\n  withUser,\n  withErrors,\n)(LoginCmp);\n\nexport default Login;\n","const styles = theme => ({\n  logoutButton: {\n    background: theme.palette.primary.main,\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { GoogleLogout } from \"react-google-login\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Button } from \"../../components\";\nimport routes from \"../../routes\";\nimport notificationType from \"../../constants/notifications-type\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nclass Logout extends Component {\n  static propTypes = {\n    cleanGoogleToken: PropTypes.func.isRequired,\n    showNotification: PropTypes.func.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    classes: {}\n  };\n\n  onSuccess = () =>\n    this.props.cleanGoogleToken(() => {\n      this.props.showNotification(\"You were successfully logged out!\", notificationType.success);\n      this.props.history.push(routes.login);\n    });\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <GoogleLogout\n        className={classes.logoutButton}\n        onLogoutSuccess={this.onSuccess}\n        render={renderProps => (\n          <Button onClick={renderProps.onClick} color=\"secondary\" variant=\"contained\" title=\"Logout\">\n            <AccountCircle /> Logout\n          </Button>\n        )}\n      >\n        <AccountCircle />\n      </GoogleLogout>\n    );\n  }\n}\n\nexport default Logout;\n","import { compose } from \"recompose\";\nimport injectSheet from \"react-jss\";\nimport { withRouter } from \"react-router-dom\";\nimport { withUser } from \"../../context/user\";\nimport { withNotifications } from \"../../context/notifications\";\nimport LogoutCmp from \"./container\";\nimport styles from \"./styles\";\n\nconst Logout = compose(\n  injectSheet(styles),\n  withRouter,\n  withUser,\n  withNotifications\n)(LogoutCmp);\n\nexport default Logout;\n","const styles = {\n  mainPage: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 2fr',\n    gap: '1rem',\n  },\n  quoteText: {\n    fontSize: '1.3em',\n    fontWeight: 'bolder',\n  },\n  quoteAuthor: {\n    textAlign: 'right',\n    fontSize: '1.2em',\n    margin: '0.5em 0'\n  }\n}\n\nexport default styles;\n","import React from \"react\";\nimport trident from \"../../images/trident.svg\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst MainContainer = ({ classes }) => (\n  <div className={classes.mainPage}>\n    <img src={trident} alt=\"trident\" />\n    <div>\n      <q className={classes.quoteText}>Учітесь, читайте, І чужому научайтесь, Й свого не цурайтесь</q>\n      <p className={classes.quoteAuthor}>Т.Г. Шевченко</p>\n    </div>\n  </div>\n);\n\nMainContainer.propTypes = {\n  classes: composeClassesPropTypes(styles)\n};\n\nMainContainer.defaultProps = {\n  classes: {}\n};\n\nexport default MainContainer;\n","import injectSheet from \"react-jss\";\nimport { compose } from \"recompose\";\nimport MainPage from \"./container\";\nimport styles from \"./styles\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(MainPage);\n","const styles = {\n  notFoundWrapper: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"100%\"\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport { ButtonWithRouter } from \"../../components\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst PageNotFoundContainer = ({ classes }) => (\n  <div className={classes.notFoundWrapper}>\n    <h1>Page not found</h1>\n    <ButtonWithRouter to={routes.root}>Home</ButtonWithRouter>\n  </div>\n);\n\nPageNotFoundContainer.propTypes = {\n  classes: composeClassesPropTypes(styles)\n};\n\nPageNotFoundContainer.defaultProps = {\n  classes: {}\n};\n\nexport default PageNotFoundContainer;\n","import injectSheet from \"react-jss\";\nimport { compose } from \"recompose\";\nimport PageNotFound from \"./container\";\nimport styles from \"./styles\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(PageNotFound);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { WordForm } from \"../../components\";\nimport wordShape from \"../../constants/shapes\";\n\nclass AddWordContainer extends Component {\n  componentWillUnmount() {\n    this.props.cleanWord();\n  }\n\n  render() {\n    const { saveWord, word, checkIsLoading } = this.props;\n\n    return (\n      <WordForm word={word} checkIsLoading={checkIsLoading} onSubmit={saveWord} />\n    );\n  }\n}\n\nAddWordContainer.propTypes = {\n  saveWord: PropTypes.func.isRequired,\n  checkIsLoading: PropTypes.func.isRequired,\n  cleanWord: PropTypes.func.isRequired,\n  word: wordShape(PropTypes),\n};\n\nAddWordContainer.defaultProps = {\n  word: {},\n};\n\nexport default AddWordContainer;\n","import { compose } from 'recompose';\nimport { withWords } from '../../context/words';\nimport AddWord from './container';\nimport { withLoadingNames } from '../../context/loading-names';\n\nconst enhance = compose(\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(AddWord);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { WordForm } from \"../../components\";\n\nclass WordEdit extends Component {\n  static propTypes = {\n    word: PropTypes.shape({}),\n    fetchWord: PropTypes.func.isRequired,\n    cleanWord: PropTypes.func.isRequired,\n    match: ReactRouterPropTypes.match.isRequired,\n    editWord: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    word: {}\n  };\n\n  componentDidMount() {\n    this.props.fetchWord(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWord();\n  }\n\n  render() {\n    const { word, editWord, checkIsLoading } = this.props;\n\n    return <WordForm word={word} onSubmit={editWord} checkIsLoading={checkIsLoading} />;\n  }\n}\n\nexport default WordEdit;\n","import { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withWords } from \"../../context/words\";\nimport WordEdit from \"./container\";\nimport { withLoadingNames } from \"../../context/loading-names\";\n\nconst enhance = compose(\n  withRouter,\n  withWords,\n  withLoadingNames,\n);\n\nexport default enhance(WordEdit);\n","const styles = {\n  learnWord: {\n    width: '300px',\n    margin: '0 auto'\n  }\n};\n\nexport default styles;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport notificationType from \"../../constants/notifications-type\";\nimport loadingNames from \"../../constants/loading-names\";\nimport { WordPreview, LearningBoard, Button } from \"../../components\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst MAX_COUNT_ATTEMPTS = 3;\n\nconst getIndexOfDiscrepancy = originString => stringToCompare =>\n  originString.split(\"\").findIndex((letter, index) => letter !== stringToCompare[index]);\n\nclass LearnWordsContainer extends Component {\n  static propTypes = {\n    fetchWordsToLearn: PropTypes.func.isRequired,\n    cleanWordsList: PropTypes.func.isRequired,\n    learnWord: PropTypes.func.isRequired,\n    relearnWord: PropTypes.func.isRequired,\n    showNotification: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    classes: {}\n  };\n\n  state = {\n    countOfTry: 0,\n    guessed: false,\n    inputValue: \"\",\n    currentWord: {}\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) =>\n    nextProps.wordsList && nextProps.wordsList.length > 0\n      ? {\n          ...prevState,\n          currentWord: nextProps.wordsList[0]\n        }\n      : prevState;\n\n  componentDidMount() {\n    this.props.fetchWordsToLearn();\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWordsList();\n  }\n\n  onChangeInput = event => this.setState({ inputValue: event.target.value });\n\n  resetCountOfTry = () => this.setState({ countOfTry: 0 });\n\n  onCheckAnswer = () => {\n    const { showNotification, relearnWord } = this.props;\n    const { inputValue, currentWord } = this.state;\n\n    if (currentWord && Object.keys(currentWord).length > 0) {\n      const { en, _id } = currentWord;\n      if (inputValue.toLowerCase() === en.toLowerCase()) {\n        this.setState({\n          guessed: true,\n          inputValue: \"\",\n          countOfTry: 0\n        });\n        showNotification(\"You are right!\", notificationType.info);\n      }\n\n      this.setState(\n        prevState => ({\n          countOfTry: prevState.countOfTry + 1\n        }),\n        () => {\n          const { countOfTry } = this.state;\n          if (countOfTry < MAX_COUNT_ATTEMPTS) {\n            const attemptsLeft = MAX_COUNT_ATTEMPTS - this.state.countOfTry;\n            showNotification(\n              `You are wrong! ${attemptsLeft} attempt${attemptsLeft > 1 ? \"s\" : \"\"} left`,\n              notificationType.info\n            );\n          } else {\n            this.setState({ countOfTry: 0 });\n            showNotification(`You don't remember this word. Keep learning it!`, notificationType.warning);\n            relearnWord(_id);\n          }\n        }\n      );\n    }\n  };\n\n  onGiveAHint = () => {\n    const { inputValue, currentWord } = this.state;\n\n    if (currentWord && Object.keys(currentWord).length > 0) {\n      const { en } = currentWord;\n      const discrepancyIndex = getIndexOfDiscrepancy(en)(inputValue);\n      const countOfHintsLetter = discrepancyIndex >= 0 ? discrepancyIndex : en.length - 1;\n\n      this.setState({\n        inputValue: en.slice(0, countOfHintsLetter < en.length ? countOfHintsLetter + 1 : countOfHintsLetter)\n      });\n    }\n  };\n\n  onKnownWord = () => this.props.learnWord(this.state.currentWord._id);\n\n  onForgottenWord = () => this.props.relearnWord(this.state.currentWord._id);\n\n  onLearnNextWord = () =>\n    this.props.learnWord(this.state.currentWord._id).then(() =>\n      this.setState({\n        countOfTry: 0,\n        guessed: false\n      })\n    );\n\n  render() {\n    const { checkIsLoading, classes } = this.props;\n    const { currentWord, inputValue, guessed } = this.state;\n    const loading = checkIsLoading(loadingNames.words.learn);\n\n    return guessed ? (\n      <Fragment>\n        <Button onClick={this.onLearnNextWord} variant=\"contained\" color=\"primary\">\n          Learn the next word\n        </Button>\n        <WordPreview word={currentWord} />\n      </Fragment>\n    ) : (\n      <div className={classes.learnWord}>\n        <LearningBoard\n          loading={loading}\n          onOptionChange={this.onChangeInput}\n          inputValue={inputValue}\n          word={currentWord && currentWord.ua}\n          timesLearnt={currentWord && currentWord.timesLearnt}\n          onCheckAnswer={this.onCheckAnswer}\n          onGiveAHint={this.onGiveAHint}\n          onKnownWord={this.onKnownWord}\n          onForgottenWord={this.onForgottenWord}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LearnWordsContainer;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withNotifications } from '../../context/notifications';\nimport LearnWords from './container';\nimport styles from './styles';\nimport { withWords } from '../../context/words';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withLoadingNames,\n  withNotifications,\n  withWords,\n);\n\nexport default enhance(LearnWords);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { WordsTable } from \"../../components\";\n\nclass WordsListContainer extends Component {\n  static propTypes = {\n    fetchWordsList: PropTypes.func.isRequired,\n    cleanWordsList: PropTypes.func.isRequired,\n    location: ReactRouterPropTypes.location.isRequired\n  };\n\n  componentDidMount() {\n    this.props.fetchWordsList();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.props.fetchWordsList();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWordsList();\n  }\n\n  render() {\n    return <WordsTable />;\n  }\n}\n\nexport default WordsListContainer;\n","import { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withWords } from '../../context/words';\nimport WordsList from './container';\n\nconst enhance = compose(\n  withRouter,\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(WordsList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { WordPreview } from \"../../components\";\nimport loadingNames from \"../../constants/loading-names\";\n\nclass WordPreviewContainer extends Component {\n  static propTypes = {\n    fetchWord: PropTypes.func.isRequired,\n    cleanWord: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    match: ReactRouterPropTypes.match.isRequired,\n    word: PropTypes.shape({})\n  };\n\n  static defaultProps = {\n    word: {}\n  };\n\n  componentDidMount() {\n    const { fetchWord, match } = this.props;\n\n    fetchWord(match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWord();\n  }\n\n  render() {\n    const { word, checkIsLoading } = this.props;\n    const loading = checkIsLoading(loadingNames.words.fetch);\n\n    return <WordPreview loading={loading} word={word} />;\n  }\n}\n\nexport default WordPreviewContainer;\n","import { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withWords } from '../../context/words';\nimport WordPreviewContainer from './container';\n\nconst enhance = compose(\n  withRouter,\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(WordPreviewContainer);\n","const styles = {\n  searchBlock: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    gap: \"1em\"\n  }\n};\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { joinRoute, parseSearchParams } from \"url-joiner\";\nimport uuid from \"uuid\";\nimport {\n  Button,\n  ControlsSeparator,\n  TextFieldLoading,\n  WordPreview\n} from \"../../components\";\nimport loadingNames from \"../../constants/loading-names\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport wordShape from '../../constants/shapes';\nimport styles from \"./styles\";\n\nconst SEARCH_INPUT_TIMEOUT = 500;\n\nconst EN = \"en\";\nconst UK = \"uk\";\n\nconst composeSearchData = text => {\n  const translatingWord = text.trim();\n  const from = encodeURIComponent(translatingWord) === translatingWord ? EN : UK;\n  const to = encodeURIComponent(translatingWord) === translatingWord ? UK : EN;\n\n  return { text: translatingWord, from, to };\n};\n\nclass SearchWordContainer extends Component {\n  static propTypes = {\n    word: wordShape(PropTypes),\n    history: ReactRouterPropTypes.history.isRequired,\n    location: ReactRouterPropTypes.location.isRequired,\n    saveWord: PropTypes.func.isRequired,\n    searchWord: PropTypes.func.isRequired,\n    cleanWord: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    setWordToState: PropTypes.func.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    word: {},\n    classes: {}\n  };\n\n  state = {\n    searchValue: \"\",\n    isToEditMode: false\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const searchParams = parseSearchParams(location.search);\n\n    if (searchParams.query) {\n      this.searchWord(searchParams.query);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    const searchParams = parseSearchParams(location.search);\n\n    if (this.props.location.search !== prevProps.location.search && searchParams.query) {\n      this.searchWord(searchParams.query);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.state.isToEditMode) {\n      this.props.cleanWord();\n    }\n  }\n\n  cleanSearchValue = () => this.setState({ searchValue: \"\" });\n\n  searchWord = text => {\n    clearTimeout(this.inputTimer);\n    this.setState({ searchValue: text });\n    this.inputTimer = setTimeout(() => {\n      this.props.searchWord(composeSearchData(text));\n    }, SEARCH_INPUT_TIMEOUT);\n  };\n\n  handleOnChangeSearchInput = event => {\n    clearTimeout(this.inputTimer);\n    const { value } = event.target;\n\n    this.setState({ searchValue: value });\n\n    this.inputTimer = setTimeout(() => {\n      this.props.history.push(\n        joinRoute({\n          pathname: routes.words.search,\n          searchParams: { query: value }\n        })\n      );\n    }, SEARCH_INPUT_TIMEOUT);\n  };\n\n  handleEditBeforeSaving = () => {\n    const { history, setWordToState, word } = this.props;\n    this.setState({\n      isToEditMode: true,\n      searchValue: \"\"\n    }, () => {\n      setWordToState({ ...word, _id: uuid() });\n      history.push(routes.words.add);\n    });\n  };\n\n  handleSaveWord = () => {\n    const { saveWord, word, cleanWord } = this.props;\n\n    return saveWord(word).then(() => {\n      this.cleanSearchValue();\n      return cleanWord();\n    });\n  };\n\n  render() {\n    const { searchValue } = this.state;\n    const { word, checkIsLoading, classes } = this.props;\n    const isEmpty = !Object.keys(word).length;\n    const loading = checkIsLoading(loadingNames.words.search);\n\n    return (\n      <main>\n        <div className={classes.searchBlock}>\n          <TextFieldLoading\n            label=\"Search a word\"\n            value={searchValue}\n            onChange={this.handleOnChangeSearchInput}\n            loading={loading}\n          />\n          <ControlsSeparator align=\"right\">\n            <Button\n              onClick={this.handleSaveWord}\n              disabled={isEmpty}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Save to my words\n            </Button>\n            <Button\n              onClick={this.handleEditBeforeSaving}\n              disabled={isEmpty}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Edit before saving\n            </Button>\n          </ControlsSeparator>\n        </div>\n        <WordPreview word={word} />\n      </main>\n    );\n  }\n}\n\nexport default SearchWordContainer;\n","import { withRouter } from 'react-router-dom';\nimport injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withWords } from '../../context/words';\nimport SearchWord from './container';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withRouter,\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(SearchWord);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LoadingNamesProvider } from \"./loading-names\";\nimport { NotificationsProvider } from \"./notifications\";\nimport { WordsProvider } from \"./words\";\nimport { UserProvider } from \"./user\";\nimport { ErrorProvider } from \"./errors\";\n\nconst StateProvider = ({ children }) => (\n  <NotificationsProvider>\n    <ErrorProvider>\n      <LoadingNamesProvider>\n        <UserProvider>\n          <WordsProvider>{children}</WordsProvider>\n        </UserProvider>\n      </LoadingNamesProvider>\n    </ErrorProvider>\n  </NotificationsProvider>\n);\n\nStateProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default StateProvider;\n","import React from \"react\";\nimport { ThemeProvider } from \"react-jss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { Header, BlocksWrapper, Notifications, Footer } from \"../components\";\nimport {\n  LoginContainer,\n  LogoutContainer,\n  MainContainer,\n  WordsListContainer,\n  WordsAddContainer,\n  WordsSearchContainer,\n  PageNotFoundContainer,\n  WordsLearnContainer,\n  WordsEditContainer,\n  WordPreviewContainer\n} from \"../pages\";\nimport StateProvider from \"../context\";\nimport routes from \"../routes\";\nimport muiTheme from \"./mui-theme\";\n\nconst Root = () => (\n  <ThemeProvider theme={muiTheme}>\n    <MuiThemeProvider theme={muiTheme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <StateProvider>\n          <Notifications>\n            <BlocksWrapper>\n              <Header />\n              <Switch>\n                <Route exact path={routes.root} component={MainContainer} />\n                <Route exact path={routes.login} component={LoginContainer} />\n                <Route exact path={routes.logout} component={LogoutContainer} />\n                <Route exact path={routes.words.add} component={WordsAddContainer} />\n                <Route exact path={routes.words.learn} component={WordsLearnContainer} />\n                <Route exact path={routes.words.list.all} component={WordsListContainer} />\n                <Route exact path={routes.words.list.preview} component={WordPreviewContainer} />\n                <Route exact path={routes.words.list.edit} component={WordsEditContainer} />\n                <Route exact path={routes.words.search} component={WordsSearchContainer} />\n                <Route component={PageNotFoundContainer} />\n              </Switch>\n              <Footer />\n            </BlocksWrapper>\n          </Notifications>\n        </StateProvider>\n      </Router>\n    </MuiThemeProvider>\n  </ThemeProvider>\n);\n\nexport default Root;\n","import injectSheet from \"react-jss\";\nimport { compose } from \"recompose\";\nimport styles from \"./styles\";\nimport Root from \"./component\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(Root);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Index is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Root/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}