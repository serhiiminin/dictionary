{"version":3,"sources":["images/texture.png","modules/compose-classes-prop-types.js","root/themes.js","root/mui-theme.js","root/styles.js","components/blocks-wrapper/styles.js","components/blocks-wrapper/component.js","components/blocks-wrapper/index.js","components/button/styles.js","components/button/component.js","components/button/index.js","components/button-control/index.js","components/button-with-router/component.js","components/button-with-router/index.js","components/chip-set/styles.js","components/chip-set/component.js","components/chip-set/index.js","components/controls-separator/styles.js","components/controls-separator/component.js","components/controls-separator/index.js","components/footer/styles.js","components/footer/component.js","components/footer/index.js","routes.js","components/footer-navigation/styles.js","components/footer-navigation/component.js","api/request.js","api/create-fetcher.js","modules/generator-api-key.js","modules/handle-errors.js","api/proxies.js","api/word.js","constants/notifications-type.js","modules/get-api-keys.js","api/user.js","api/gif.js","constants/loading-names.js","context/loading-names.js","modules/handle-fetch.js","context/errors.js","context/user.js","components/footer-navigation/index.js","components/header/styles.js","components/header/component.js","components/header/index.js","components/image/styles.js","components/image/component.js","components/image/index.js","components/inputs-block/styles.js","components/inputs-block/component.js","components/inputs-block/index.js","components/learning-board/index.js","components/line-explanation/styles.js","components/line-explanation/component.js","components/line-explanation/index.js","components/list-of-searchable-words/index.js","components/multiple-inputs/styles.js","components/multiple-inputs/component.js","components/multiple-inputs/index.js","components/pagination/styles.js","components/pagination/component.js","components/pagination/index.js","components/pagination-panel/styles.js","components/pagination-panel/component.js","components/pagination-panel/index.js","components/searchable-word/styles.js","components/searchable-word/component.js","components/searchable-word/index.js","components/select/index.js","components/select-with-options/styles.js","components/select-with-options/component.js","components/select-with-options/index.js","components/text-field/styles.js","components/text-field/component.js","components/text-field/index.js","components/text-field-loading/index.js","components/toolbar/styles.js","components/toolbar/component.js","components/toolbar/index.js","components/user-icon/styles.js","components/user-icon/component.js","components/user-icon/index.js","constants/word-initial-values.js","components/word-form/index.js","components/word-item-in-list/styles.js","components/word-item-in-list/component.js","components/word-item-in-list/index.js","components/word-preview/index.js","components/words-list/styles.js","components/words-list/component.js","components/words-list/index.js","modules/word-utils.js","context/words.js","components/words-table/styles.js","components/words-table/component.js","components/words-table/index.js","pages/login/styles.js","pages/login/container.js","pages/login/index.js","pages/logout/styles.js","pages/logout/container.js","pages/logout/index.js","pages/main/styles.js","pages/main/container.js","pages/main/index.js","pages/not-found/styles.js","pages/not-found/container.js","pages/not-found/index.js","pages/words-add/container.js","pages/words-add/index.js","pages/words-edit/container.js","pages/words-edit/index.js","pages/words-learn/styles.js","pages/words-learn/container.js","pages/words-learn/index.js","pages/words-list/container.js","pages/words-list/index.js","pages/word-preview/container.js","pages/word-preview/index.js","pages/words-search/styles.js","pages/words-search/container.js","pages/words-search/index.js","context/index.js","root/component.js","root/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","propTypes","theme","main","colors","background","text","dark","light","contrastText","notification","success","error","warning","info","opacity","disabled","margin","small","medium","large","padding","borderWidth","base","borderStyle","borderRadius","zIndex","timeout","transition","muiTheme","createMuiTheme","Object","objectSpread","palette","paper","primary","secondary","typography","useNextVariants","fontFamily","join","overrides","MuiButton","root","textTransform","&:hover","&$disabled","color","concat","MuiChip","fontSize","border","MuiFormControl","width","MuiLinearProgress","MuiMenuItem","&$selected","MuiSelect","select","MuiTextField","label","underline","&:after","borderBottomColor","MuiSnackbar","anchorOriginTopRight","GlobalStyle","@global body","overflowX","texture","@global *","boxSizing","styles","PropTypes","blocksWrapper","@media (min-width: 480px)","@media (min-width: 768px)","BlocksWrapper","_ref","children","classes","react_default","a","createElement","className","defaultProps","enhance","compose","injectSheet","button","props","isActive","ButtonCustomized","restProps","objectWithoutProperties","index_es","assign","ButtonControl","size","ButtonWithRouter","location","to","staticContext","component","Link","pathname","undefined","withRouter","chipSet","display","flexFlow","chip","marginBottom","marginRight","ChipSet","items","onRemoveItem","map","_ref2","id","value","key","icon","TagFaces_default","onDelete","alignControls","alignContent","gridAutoFlow","justifyContent","align","columnGap","rowGap","ControlsSeparator","classnames","footer","Footer","footer_navigation","routes","login","logout","words","add","learn","list","all","preview","edit","search","bottomNavigation","HeaderNavigation","isUserLoggedIn","history","onChange","_","push","path","Home_default","placeholder","List_default","NoteAdd_default","Search_default","Rowing_default","ExitToApp_default","Input_default","createLinks","showLabel","requests","get","url","params","endpoint","method","post","put","patch","delete","checkStatus","response","status","Error","statusText","parseJson","json","createFetcherJson","fetch","body","headers","restParams","request","Request","JSON","stringify","Headers","Accept","Content-Type","then","generatorApiKeys","keys","TIME_KEYS_REPEAT","keysWithLastUsedTime","i","currentKey","currentTime","regenerator_default","wrap","_context","prev","next","length","apiKey","lastUsed","Date","now","stop","_marked","this","notificationsMessages","notificationType","generator","clientError","default","disconnect","redirect","serverError","unknown","forbidden","notFound","getErrorType","notificationsTypes","console","includes","message","navigator","onLine","errorCode","getErrorMessage","errorType","_notificationType$err","defineProperty","updateSearchParams","newSearchParams","joinUrl","searchParams","GIPHY_API_KEYS","apiKeyPrefix","entries","filter","slicedToArray","startsWith","getGiphyApiKey","process","apiKeyGiphyProxy","fetcher","api_key","catch","window","createGoogleAuthProxy","googleToken","authorization","accessToken","apiMethodsWords","create","tokens","paths","getList","getListToLearn","yesterday","setDate","getDate","timesLearnt","$gte","$lte","dateLastLearnt","update","word","_id","wordId","toISOString","$inc","apiMethodsUsers","googleId","data","createApiMethodsUsers","apiMethodsGifs","limit","createApiMethodsGifs","NS","WORDS","USER","GIF","loadingNames","save","user","gif","LoadingNamesContext","createContext","loadingNamesInitialState","currentLoadingNames","LoadingNamesProvider","state","handleStartLoading","name","_this","setState","prevState","handleStopLoading","checkIsLoading","arguments","_len2","loadingNamesToCheck","Array","_key2","some","currentLoadingName","Provider","startLoading","stopLoading","Component","withLoadingNames","Cmp","Consumer","createHandleFetch","errorHandler","loadingName","requestHandler","responseHandler","Promise","resolve","r","finally","ErrorsContext","ErrorsProviderCmp","handleError","_this$props","enqueueSnackbar","variant","log","ErrorProvider","withSnackbar","withErrors","UserContext","userInitialState","parse","localStorage","getItem","UserProviderCmp","handleFetch","handleFetchUser","fetchUser","createUser","profileObj","setUserToState","cleanUser","cleanGoogleToken","callback","clear","setGoogleToken","setItem","token","apiUser","editUser","deleteUser","fetchWordsList","_this$state","tokenObj","expires_at","UserProvider","withUser","header","alignItems","headerLinkWrapper","headerLink","textDecoration","Header","isLoading","user_icon","imageBlock","height","src","Image","inputsBlock","topLine","gridTemplateColumns","blockTitle","blockItems","minHeight","InputsBlock","input","handleOnChange","event","target","handleOnAddItem","onAddItem","handleEnterPress","which","_this2","title","control","text_field","onKeyPress","components_button","onClick","mini","Add_default","LearningBoard","loading","onOptionChange","inputValue","onCheckAnswer","onGiveAHint","onKnownWord","onForgottenWord","textLearnt","text_field_loading","controls_separator","button_control","Done_default","RemoveRedEye_default","DoneAll_default","ErrorOutline_default","lineExplanation","LineExplanation","ListOfSearchableWords","item","index","searchable_word","uuid","delimiter","multipleInputs","MultipleInputs","Delete_default","page","gap","paginationInput","Pagination","pageNumber","maxPageCount","onChangePage","prevPage","Number","nextPage","KeyboardArrowLeft_default","numberPage","parseInt","KeyboardArrowRight_default","paginationPanel","PaginationPanel","countPerPage","onChangeCount","select_with_options","options","pagination","clickableWord","fontWeight","SearchableWord","Fragment","joinRoute","query","SelectBlock","htmlFor","selectWithOptions","minWidth","SelectWithOptions","components_select","textFieldControl","textField","borderBottom","TextFieldCustomized","InputProps","InputLabelProps","TextFieldLoading","in","toolbarWrapper","Toolbar","checkAllControl","sortBy","sortDirection","onChangeSortDirection","onChangeSortBy","isAnyChecked","divider","react","KeyboardArrowDown_default","KeyboardArrowUp_default","UserIcon","alt","imageUrl","WORD_INITIAL_VALUES","transcription","partOfSpeech","examples","synonyms","WordForm","wordItem","handleFieldChange","fieldKey","handleRemoveItemFromArray","handleAddItemToArray","toConsumableArray","handleOnChangeMultipleInputs","onResetForm","onSubmit","freePartsOfSpeech","option","part","inputs_block","chip_set","multiple_inputs","getDerivedStateFromProps","nextProps","wordItemWrapper","isChecked","description","wordLink","wordTime","WordItemInList","onWordCheck","linkToWord","dateCreated","lastLearnt","moment","fromNow","container","spacing","xs","checked","Boolean","button_with_router","Edit_default","mapValues","WordPreview","wordText","antonyms","similarTo","components_image","line_explanation","list_of_searchable_words","example","wordsList","WordsList","fill","word_item_in_list","mergeArrays","field","from","Set","reduce","res","val","addIdForArrayItems","normalizeWord","wordData","_wordData$results","results","rest","definitions","definition","WordsContext","INITIAL_WORD_SORT_DATA","wordsInitialState","count","WordsProviderCmp","getSearchParams","parsedParams","parseSearchParams","cleanWordsList","cleanWord","setWordToState","fetchWord","apiWord","_this$getSearchParams","skip","_ref$items","_ref$count","createWord","ownerId","editWord","deleteWord","searchWord","foundWord","apiGif","q","gifs","downsizedGifs","images","downsized_large","randomGif","Math","round","random","fetchWordsToLearn","learnWord","relearnWord","wordToRelearn","find","wordsCount","getWordsSearchParams","saveWord","w","WordsProvider","withWords","wordsTableWrapper","overflow","WordsTable","handleOnCheck","handleOnCheckAll","handleDeleteWord","generateUrl","handleOnChangeSelect","handleOnChangeDirection","handleOnChangePage","_this$props2","_getWordsSearchParams","isCheckedAll","toolbar","words_list","pagination_panel","ceil","loginButton","cursor","Login","onSuccess","goBack","onFailure","google_login","clientId","render","renderProps","AccountCircle_default","LoginCmp","logoutButton","Logout","onLogoutSuccess","LogoutCmp","mainPage","quoteText","quoteAuthor","textAlign","MainContainer","MainPage","notFoundWrapper","PageNotFoundContainer","PageNotFound","AddWordContainer","word_form","AddWord","WordEdit","match","MAX_COUNT_ATTEMPTS","getIndexOfDiscrepancy","originString","stringToCompare","split","findIndex","letter","LearnWordsContainer","countOfTry","guessed","currentWord","onChangeInput","resetCountOfTry","en","toLowerCase","attemptsLeft","_this$state2","discrepancyIndex","countOfHintsLetter","slice","onLearnNextWord","_this$state3","word_preview","learning_board","LearnWords","WordsListContainer","prevProps","words_table","WordPreviewContainer","searchBlock","SEARCH_INPUT_TIMEOUT","SearchWordContainer","searchValue","isToEditMode","cleanSearchValue","clearTimeout","inputTimer","setTimeout","handleOnChangeSearchInput","handleEditBeforeSaving","handleSaveWord","_this$props3","isEmpty","SearchWord","StateProvider","loading_names_LoadingNamesProvider","snackbarConfig","TransitionComponent","Zoom","maxSnack","anchorOrigin","vertical","horizontal","action","icons_index_es","Root","lib","core_styles","BrowserRouter","basename","build","context","blocks_wrapper","Switch","Route","exact","LoginContainer","LogoutContainer","WordsAddContainer","WordsLearnContainer","WordsEditContainer","WordsSearchContainer","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","origin","addEventListener","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.896e38c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/texture.9aecd722.png\";","import PropTypes from \"prop-types\";\n\nconst composeClassesWithProTypes = propTypes => styles =>\n  propTypes.shape(\n    Object.assign(\n      {},\n      ...Object.keys(styles).map(className => ({\n        [className]: propTypes.string.isRequired\n      }))\n    )\n  );\n\nconst composeClassesPropTypes = composeClassesWithProTypes(PropTypes);\n\nexport default composeClassesPropTypes;\n","const theme = {\n  main: {\n    colors: {\n      background: '#EEE2DC',\n      text: '#333333',\n      main: '#123C69',\n      dark: '#EDC7B7',\n      light: '#BAB2B5',\n      contrastText: '#AC3B61',\n      notification: {\n        success: '#83F570',\n        error: '#F21600',\n        warning: '#FAE639',\n        info: '#A9D9E4',\n      }\n    },\n    opacity: {\n      disabled: .7,\n    },\n    margin: {\n      small: '5px',\n      medium: '10px',\n      large: '15px',\n    },\n    padding: {\n      small: '5px',\n      medium: '10px',\n      large: '15px',\n    },\n    borderWidth: {\n      base: '1px'\n    },\n    borderStyle: {\n      base: 'solid',\n    },\n    borderRadius: {\n      small: '5px',\n      medium: '10px',\n      large: '15px',\n    },\n    zIndex: {\n      notification: 1000,\n    },\n    timeout: {\n      notification: 300,\n    },\n    transition: '.3s'\n  }\n};\n\nexport default theme;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport theme from \"./themes\";\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    background: {\n      paper: theme.main.colors.background,\n    },\n    primary: {\n      light: theme.main.colors.light,\n      main: theme.main.colors.main,\n      dark: theme.main.colors.dark,\n      contrastText: theme.main.colors.contrastText,\n    },\n    secondary: {\n      light: theme.main.colors.light,\n      main: theme.main.colors.main,\n      dark: theme.main.colors.dark,\n      contrastText: theme.main.colors.contrastText,\n    },\n    text: {\n      primary: theme.main.colors.text,\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: \"none\",\n        transition: theme.main.transition,\n        \"&:hover\": {\n          background: theme.main.colors.main,\n          opacity: theme.main.opacity.disabled\n        },\n        '&$disabled': {\n          opacity: theme.main.opacity.disabled,\n          background: theme.main.colors.light,\n          color: `${theme.main.colors.background} !important`\n        }\n      },\n\n    },\n    MuiChip: {\n      root: {\n        fontSize: \".9em\",\n        background: \"transparent\",\n        border: `${theme.main.borderWidth.base} ${\n          theme.main.borderStyle.base\n        } ${theme.main.colors.text}`,\n        color: theme.main.colors.text,\n        opacity: theme.main.opacity.disabled\n      }\n    },\n    MuiFormControl: {\n      root: {\n        width: \"100%\"\n      }\n    },\n    MuiLinearProgress: {\n      root: {\n        background: theme.main.colors.background\n      }\n    },\n    MuiMenuItem: {\n      root: {\n        width: \"100%\",\n        \"&:hover\": {\n          background: `${theme.main.colors.main} !important`,\n          color: `${theme.main.colors.background} !important`\n        },\n        '&$selected': {\n          background: `${theme.main.colors.main} !important`,\n          color: `${theme.main.colors.background} !important`\n        }\n      },\n    },\n    MuiSelect: {\n      root: {\n        width: \"100%\"\n      },\n      select: {\n        background: \"transparent !important\"\n      }\n    },\n    MuiTextField: {\n      root: {\n        width: \"100%\"\n      },\n      label: {\n        color: `${theme.main.colors.text} !important`,\n        opacity: 0.7\n      },\n      underline: {\n        \"&:after\": {\n          borderBottomColor: `${theme.main.colors.text} !important`\n        }\n      }\n    },\n    MuiSnackbar: {\n      anchorOriginTopRight: {\n        opacity: 0.9\n      }\n    }\n  },\n  ...theme,\n});\n\nexport default muiTheme;\n","import texture from \"../images/texture.png\";\nimport theme from \"./mui-theme\";\n\nconst GlobalStyle = {\n  '@global body': {\n    overflowX: 'hidden',\n    background: `${theme.main.colors.background} url(${texture}) center repeat`,\n    color: theme.main.colors.text,\n    fontSize: '1em',\n    margin: 0,\n  },\n  '@global *': {\n    boxSizing: 'border-box',\n  },\n};\n\nexport default GlobalStyle;\n","const styles = {\n  blocksWrapper: {\n    width: \"300px\",\n    margin: \"0 auto\",\n    \"@media (min-width: 480px)\": {\n      width: \"470px\"\n    },\n    \"@media (min-width: 768px)\": {\n      width: \"750px\"\n    }\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst BlocksWrapper = ({ children, classes }) => <div className={classes.blocksWrapper}>{children}</div>;\n\nBlocksWrapper.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  children: PropTypes.node.isRequired\n};\n\nBlocksWrapper.defaultProps = {\n  classes: {}\n};\n\nexport default BlocksWrapper;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport BlocksWrapper from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(BlocksWrapper);\n","const styles = theme => ({\n  button: {\n    opacity: props => (props.isActive ? theme.main.opacity.disabled : 1),\n    color: theme.palette.background.paper\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst ButtonCustomized = ({ classes, isActive, ...restProps }) => (\n  <Button classes={{ root: classes.button }} {...restProps} />\n);\n\nButtonCustomized.propTypes = {\n  isActive: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nButtonCustomized.defaultProps = {\n  isActive: false,\n  classes: {}\n};\n\nexport default ButtonCustomized;\n","\nimport injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport ButtonCustomized from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(ButtonCustomized);\n","import React from \"react\";\nimport { Fab } from '@material-ui/core';\n\nconst ButtonControl = props => <Fab size='small' {...props} />;\n\nexport default ButtonControl;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Fab } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\n\nconst ButtonWithRouter = ({ location, to, staticContext, ...restProps }) => (\n  <Fab size='small' to={to} color=\"primary\" component={Link} disabled={location.pathname === to} {...restProps} />\n);\n\nButtonWithRouter.propTypes = {\n  history: ReactRouterPropTypes.history.isRequired,\n  location: ReactRouterPropTypes.location.isRequired,\n  staticContext: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  to: PropTypes.string.isRequired\n};\n\nButtonWithRouter.defaultProps = {\n  staticContext: undefined\n};\n\nexport default ButtonWithRouter;\n","import { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport ButtonWithRouter from './component';\n\nconst enhance = compose(\n  withRouter,\n);\n\nexport default enhance(ButtonWithRouter);\n","\nconst styles = theme => ({\n  chipSet: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    transition: theme.main.transition\n  },\n  chip: {\n    marginBottom: theme.main.margin.small,\n    marginRight: theme.main.margin.small,\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Chip } from \"@material-ui/core\";\nimport TagFacesIcon from \"@material-ui/icons/TagFaces\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst ChipSet = ({ items, onRemoveItem, disabled, classes }) => (\n  <div className={classes.chipSet}>\n    {items.map(({ id, value }) => (\n      <Chip\n        classes={{ root: classes.chip }}\n        key={id}\n        label={value}\n        icon={<TagFacesIcon />}\n        onDelete={() => onRemoveItem(id)}\n        disabled={disabled}\n      />\n    ))}\n  </div>\n);\n\nChipSet.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ),\n  onRemoveItem: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nChipSet.defaultProps = {\n  classes: {},\n  items: [],\n  disabled: false\n};\n\nexport default ChipSet;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport ChipSet from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(ChipSet);\n","const styles = theme => ({\n  alignControls: {\n    display: 'grid',\n    alignContent: 'center',\n    gridAutoFlow: 'column',\n    padding: `${theme.main.padding.medium} 0`,\n    justifyContent: props => props.align,\n    columnGap: '.5rem',\n    rowGap: '.5rem',\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst ControlsSeparator = ({ children, classes, align }) => (\n  <div className={classnames(classes.alignControls, align)}>{children}</div>\n);\n\nControlsSeparator.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  children: PropTypes.node.isRequired,\n  align: PropTypes.string\n};\n\nControlsSeparator.defaultProps = {\n  classes: {},\n  align: \"left\"\n};\n\nexport default ControlsSeparator;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport ControlsSeparator from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(ControlsSeparator);\n","const styles = theme => ({\n  footer: {\n    padding: `${theme.main.padding.large} 0`,\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { FooterNavigation } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Footer = ({ classes }) => (\n  <div className={classes.footer}>\n    <FooterNavigation />\n  </div>\n);\n\nFooter.propTypes = {\n  classes: composeClassesPropTypes(styles)\n};\n\nFooter.defaultProps = {\n  classes: {}\n};\n\nexport default Footer;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport styles from './styles';\nimport Footer from './component';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(Footer);\n","const routes = {\n  root: '/',\n  login: '/login',\n  logout: '/logout',\n  words: {\n    add: '/add-word',\n    learn: '/learn-words',\n    list: {\n      root: '/words-list',\n      all: '/words-list/all',\n      preview: '/words-list/:id',\n      edit: '/words-list/:id/edit',\n    },\n    search: '/search-words',\n  },\n};\n\nexport default routes;\n","const styles = {\n  bottomNavigation: {\n    width: '100%'\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport List from \"@material-ui/icons/List\";\nimport Home from \"@material-ui/icons/Home\";\nimport NoteAdd from \"@material-ui/icons/NoteAdd\";\nimport Rowing from \"@material-ui/icons/Rowing\";\nimport Search from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/icons/Input\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst createLinks = isUserLoggedIn => [\n  {\n    path: routes.root,\n    icon: <Home />,\n    placeholder: \"Home\"\n  },\n  {\n    path: routes.words.list.all,\n    icon: <List />,\n    placeholder: \"My words\"\n  },\n  {\n    path: routes.words.add,\n    icon: <NoteAdd />,\n    placeholder: \"Add a word\"\n  },\n  {\n    path: routes.words.search,\n    icon: <Search />,\n    placeholder: \"Search a word\"\n  },\n  {\n    path: routes.words.learn,\n    icon: <Rowing />,\n    placeholder: \"Learn words\"\n  },\n  isUserLoggedIn\n    ? {\n        path: routes.logout,\n        icon: <ExitToApp />,\n        placeholder: \"Logout\"\n      }\n    : {\n        path: routes.login,\n        icon: <Input />,\n        placeholder: \"Login\"\n      }\n];\n\nconst HeaderNavigation = ({ isUserLoggedIn, classes, history, location }) => (\n  <BottomNavigation\n    classes={{ root: classes.bottomNavigation }}\n    value={location.pathname}\n    onChange={(_, value) => history.push(value)}\n    className={classes.root}\n  >\n    {createLinks(isUserLoggedIn).map(({ icon, path, placeholder }) => (\n      <BottomNavigationAction key={path} value={path} icon={icon} label={placeholder} showLabel />\n    ))}\n  </BottomNavigation>\n);\n\nHeaderNavigation.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  isUserLoggedIn: PropTypes.bool,\n  history: ReactRouterPropTypes.history.isRequired,\n  location: ReactRouterPropTypes.location.isRequired\n};\n\nHeaderNavigation.defaultProps = {\n  isUserLoggedIn: false,\n  classes: {}\n};\n\nexport default HeaderNavigation;\n","const requests = {\n  get: (url, params) => ({\n    endpoint: url,\n    method: 'GET',\n    ...params,\n  }),\n  post: (url, params) => ({\n    endpoint: url,\n    method: 'POST',\n    ...params,\n  }),\n  put: (url, params) => ({\n    endpoint: url,\n    method: 'PUT',\n    ...params,\n  }),\n  patch: (url, params) => ({\n    endpoint: url,\n    method: 'PATCH',\n    ...params,\n  }),\n  delete: (url, params) => ({\n    endpoint: url,\n    method: 'DELETE',\n    ...params,\n  }),\n};\n\nexport default requests;\n","const checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n\n  error.response = response;\n  throw error;\n};\n\nconst parseJson = response => response.json();\n\nconst createFetcherJson = fetch => params => {\n  const { endpoint, body, headers, ...restParams } = params;\n\n  const request = new Request(endpoint, {\n    body: JSON.stringify(body),\n    headers: new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      ...headers\n    }),\n    ...restParams\n  });\n\n  return fetch(request)\n    .then(checkStatus)\n    .then(parseJson);\n};\n\nexport default createFetcherJson;\n","function* generatorApiKeys(keys) {\n  const TIME_KEYS_REPEAT = keys.length * 200;\n  const keysWithLastUsedTime = keys.map(apiKey => ({\n    key: apiKey,\n    lastUsed: null\n  }));\n\n  for (let i = 0; i < keysWithLastUsedTime.length; i += 1) {\n    const currentKey = keysWithLastUsedTime[i];\n    const currentTime = Date.now();\n    if (currentTime - currentKey.lastUsed < TIME_KEYS_REPEAT) {\n      throw new Error(\"No free api keys\");\n    }\n\n    currentKey.lastUsed = currentTime;\n    yield currentKey.key;\n\n    if (keysWithLastUsedTime.length - 1 === i) i = -1;\n  }\n}\n\nexport default generatorApiKeys;\n","import notificationsTypes from \"../constants/notifications-type\";\n\nconst createGetterErrorType = notificationsMessages => error => {\n  // eslint-disable-next-line no-console\n  console.error(error);\n\n  if (!error) {\n    return notificationsMessages.error.unknown;\n  }\n\n  if ([\"Failed to fetch\", \"Network request failed\"].includes(error.message) && !navigator.onLine) {\n    return notificationsMessages.error.disconnect;\n  }\n\n  if (!error.response || !error.response.status) {\n    return notificationsMessages.error.unknown;\n  }\n\n  const errorCode = error.response.status;\n\n  if (errorCode >= 300 && errorCode < 400) {\n    return notificationsMessages.error.redirect;\n  }\n\n  if (errorCode === 403) {\n    return notificationsMessages.error.forbidden;\n  }\n\n  if (errorCode === 404) {\n    return notificationsMessages.error.notFound;\n  }\n\n  if (errorCode >= 400 && errorCode < 500) {\n    return notificationsMessages.error.clientError;\n  }\n\n  if (errorCode >= 500) {\n    return notificationsMessages.error.serverError;\n  }\n\n  return notificationsMessages.error.unknown;\n};\n\nconst createGetErrorMessages = notificationType => errorType =>\n  ({\n    [notificationType.error.clientError]: \"Client error\",\n    [notificationType.error.default]: \"Something went wrong\",\n    [notificationType.error.disconnect]: \"You are disconnected!\",\n    [notificationType.error.forbidden]: \"You are not authorized! Please, use your google account\",\n    [notificationType.error.redirect]: \"You will be redirected\",\n    [notificationType.error.serverError]: \"Server error\",\n    [notificationType.error.notFound]: \"Not found\",\n    [notificationType.error.unknown]: \"Unknown error\"\n  }[errorType.message]);\n\n  const getErrorType = createGetterErrorType(notificationsTypes);\n  const getErrorMessage = createGetErrorMessages(notificationsTypes);\n\nexport { getErrorType, getErrorMessage };\n","import { joinUrl } from \"url-joiner\";\nimport generatorApiKeys from \"../modules/generator-api-key\";\nimport getGiphyApiKey from \"../modules/get-api-keys\";\nimport createFetcherJson from \"./create-fetcher\";\nimport { getErrorType } from \"../modules/handle-errors\";\n\nconst updateSearchParams = (params, newSearchParams) => ({\n  ...params,\n  endpoint: joinUrl({ url: params.endpoint, searchParams: newSearchParams })\n});\n\nconst createApiKeyProxy = generator => fetcher => params =>\n  fetcher(updateSearchParams(params, { api_key: generator.next().value })).catch(error => {\n    if (error.message === \"Failed to fetch\") {\n      return fetcher(\n        updateSearchParams(params, {\n          api_key: generator.next().value\n        })\n      );\n    }\n    throw error;\n  });\n\nconst API_KEY_PREFIX = \"REACT_APP_GIPHY_API_KEYS\";\nconst GIPHY_API_KEYS = getGiphyApiKey(API_KEY_PREFIX)(process.env);\nconst apiKeyGiphyProxy = createApiKeyProxy(generatorApiKeys(GIPHY_API_KEYS))(createFetcherJson(window.fetch));\n\nconst createGoogleAuthProxy = fetcher => (params, googleToken) =>\n  fetcher({\n    ...params,\n    headers: {\n      ...params.headers,\n      authorization: googleToken && `Bearer ${googleToken.accessToken}`\n    }\n  }).catch(error => {\n      throw new Error(getErrorType(error));\n  });\n\nexport { apiKeyGiphyProxy, createApiKeyProxy, createGoogleAuthProxy };\n","import { joinUrl } from \"url-joiner\";\nimport requests from \"./request\";\nimport createFetcherJson from \"./create-fetcher\";\nimport { createGoogleAuthProxy } from \"./proxies\";\n\nconst { REACT_APP_ENDPOINT_WORDS } = process.env;\n\nexport const createApiMethodsWords = endpoint => fetcher => ({\n  create: (body, tokens) => fetcher(requests.post(endpoint, { body }), tokens),\n  get: (id, tokens) => fetcher(requests.get(joinUrl({ url: endpoint, paths: [id] })), tokens),\n  getList: (body, tokens) => fetcher(requests.post(joinUrl({ url: endpoint, paths: [\"list\"] }), { body }), tokens),\n  getListToLearn: (params, tokens) => {\n    const url = joinUrl({ url: endpoint, paths: [\"list\"] });\n    const yesterday = new Date();\n\n    yesterday.setDate(yesterday.getDate() - 1);\n    return fetcher(\n      requests.post(url, {\n        body: {\n          timesLearnt: { $gte: 0, $lte: 5 },\n          dateLastLearnt: { $gte: new Date(0), $lte: yesterday },\n          ...params\n        }\n      }),\n      tokens\n    );\n  },\n  update: (word, tokens) =>\n    fetcher(requests.put(joinUrl({ url: endpoint, paths: [word._id] }), { body: word }), tokens),\n  delete: (wordId, tokens) => fetcher(requests.delete(joinUrl({ url: endpoint, paths: [wordId] })), tokens),\n  learn: (wordId, tokens) =>\n    fetcher(\n      requests.put(joinUrl({ url: endpoint, paths: [wordId] }), {\n        body: {\n          dateLastLearnt: new Date(Date.now()).toISOString(),\n          $inc: { timesLearnt: 1 }\n        }\n      }),\n      tokens\n    ),\n  search: (params, tokens) =>\n    fetcher(requests.post(joinUrl({ url: endpoint, paths: [\"search-new\"] }), { body: params }), tokens)\n});\n\nconst apiMethodsWords = createApiMethodsWords(REACT_APP_ENDPOINT_WORDS)(\n  createGoogleAuthProxy(createFetcherJson(window.fetch))\n);\n\nexport default apiMethodsWords;\n","const notificationType = {\n  success: \"success\",\n  warning: \"warning\",\n  info: \"info\",\n  error: {\n    clientError: 'clientError',\n    default: 'error',\n    disconnect: 'disconnect',\n    redirect: 'redirect',\n    serverError: 'serverError',\n    unknown: 'unknown',\n    forbidden: 'forbidden',\n    notFound: 'notFound',\n  },\n};\n\nexport default notificationType;\n","const getGiphyApiKey = apiKeyPrefix => params =>\n  Object.entries(params)\n    .filter(([key]) => key.startsWith(apiKeyPrefix))\n    .map(key => key[1]);\n\nexport default getGiphyApiKey;\n","import { joinUrl } from \"url-joiner\";\nimport requests from \"./request\";\nimport createFetcherJson from \"./create-fetcher\";\nimport { createGoogleAuthProxy } from \"./proxies\";\n\nconst { REACT_APP_ENDPOINT_USERS } = process.env;\n\nexport const createApiMethodsUsers = endpoint => fetcher => ({\n  create: (body, tokens) => fetcher(requests.post(joinUrl({ url: endpoint, paths: [\"new\"] }), { body }), tokens),\n  get: (googleId, tokens) => fetcher(requests.get(joinUrl({ url: endpoint, paths: [googleId] })), tokens),\n  update: (data, tokens) =>\n    fetcher(requests.put(joinUrl({ url: endpoint, paths: [data._id] }), { body: data }), tokens),\n  delete: (id, tokens) => fetcher(requests.delete(joinUrl({ url: endpoint, paths: [id] })), tokens)\n});\n\nconst apiMethodsUsers = createApiMethodsUsers(REACT_APP_ENDPOINT_USERS)(\n  createGoogleAuthProxy(createFetcherJson(window.fetch))\n);\n\nexport default apiMethodsUsers;\n","import { joinUrl } from \"url-joiner\";\nimport requests from \"./request\";\nimport { apiKeyGiphyProxy } from \"./proxies\";\n\nconst { REACT_APP_ENDPOINT_GIPHY } = process.env;\n\nexport const createApiMethodsGifs = endpoint => fetcher => ({\n  get: searchParams =>\n    fetcher(\n      requests.get(\n        joinUrl({\n          url: endpoint,\n          searchParams: {\n            limit: 100,\n            ...searchParams\n          }\n        })\n      )\n    )\n});\n\nconst apiMethodsGifs = createApiMethodsGifs(REACT_APP_ENDPOINT_GIPHY)(\n  apiKeyGiphyProxy\n);\n\nexport default apiMethodsGifs;\n","const NS = \"LOADING\";\nconst WORDS = `${NS}/WORDS`;\nconst USER = `${NS}/USER`;\nconst GIF = `${NS}/GIF`;\n\nconst loadingNames = {\n  words: {\n    list: `${WORDS}/list`,\n    save: `${WORDS}/save`,\n    fetch: `${WORDS}/fetch`,\n    learn: `${WORDS}/learn`,\n    search: `${WORDS}/search`,\n    delete: `${WORDS}/delete`\n  },\n  user: {\n    fetch: `${USER}/fetch`\n  },\n  gif: {\n    fetch: `${GIF}/fetch`\n  }\n};\n\nexport default loadingNames;\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LoadingNamesContext = createContext({});\n\nconst loadingNamesInitialState = {\n  currentLoadingNames: {}\n};\n\nclass LoadingNamesProvider extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired\n  };\n\n  state = loadingNamesInitialState;\n\n  handleStartLoading = name =>\n    this.setState(prevState => ({\n      currentLoadingNames: {\n        ...prevState.currentLoadingNames,\n        [name]: (prevState.currentLoadingNames[name] || 0) + 1\n      }\n    }));\n\n  handleStopLoading = name =>\n    this.setState(prevState => ({\n      currentLoadingNames: {\n        ...prevState.currentLoadingNames,\n        [name]: (prevState.currentLoadingNames[name] || 1) - 1\n      }\n    }));\n\n  checkIsLoading = (currentLoadingNames = {}) => (...loadingNamesToCheck) =>\n    Object.entries(currentLoadingNames).some(\n      currentLoadingName => loadingNamesToCheck.includes(currentLoadingName[0]) && currentLoadingName[1] > 0\n    );\n\n  render() {\n    const { currentLoadingNames } = this.state;\n    const { children } = this.props;\n    const checkIsLoading = this.checkIsLoading(currentLoadingNames);\n\n    return (\n      <LoadingNamesContext.Provider\n        value={{\n          checkIsLoading,\n          startLoading: this.handleStartLoading,\n          stopLoading: this.handleStopLoading\n        }}>\n        {children}\n      </LoadingNamesContext.Provider>\n    );\n  }\n}\n\nconst withLoadingNames = Cmp => props => (\n  <LoadingNamesContext.Consumer>{value => <Cmp {...value} {...props} />}</LoadingNamesContext.Consumer>\n);\n\nexport { LoadingNamesProvider, withLoadingNames };\n","const createHandleFetch = ({ startLoading, stopLoading, errorHandler }) => ({\n  loadingName,\n  requestHandler,\n  responseHandler,\n  googleToken\n}) =>\n  Promise.resolve(startLoading(loadingName))\n    .then(() => requestHandler(googleToken) || (r => r))\n    .then(responseHandler || (r => r))\n    .catch(errorHandler)\n    .finally(() => stopLoading(loadingName));\n\nexport default createHandleFetch;\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { compose } from \"recompose\";\nimport { withRouter } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\nimport notificationType from \"../constants/notifications-type\";\nimport routes from \"../routes\";\nimport { getErrorMessage } from \"../modules/handle-errors\";\n\nconst ErrorsContext = createContext({});\n\nclass ErrorsProviderCmp extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n  };\n\n  handleError = error => {\n    const { history, enqueueSnackbar } = this.props;\n    if(error.message === notificationType.error.forbidden) {\n      history.push(routes.login);\n    }\n    enqueueSnackbar(getErrorMessage(error), { variant: notificationType.info })\n  };\n\n  componentDidCatch(error, info) {\n    // eslint-disable-next-line\n    console.log(error, info);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <ErrorsContext.Provider\n        value={{\n          handleError: this.handleError,\n        }}>\n        {children}\n      </ErrorsContext.Provider>\n    );\n  }\n}\n\nconst ErrorProvider = compose(\n  withSnackbar,\n  withRouter,\n)(ErrorsProviderCmp);\n\nconst withErrors = Cmp => props => (\n  <ErrorsContext.Consumer>{value => <Cmp {...value} {...props} />}</ErrorsContext.Consumer>\n);\n\nexport { ErrorProvider, withErrors };\n","import React, { Component, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"recompose\";\nimport { withSnackbar } from 'notistack';\nimport { apiUser } from \"../api\";\nimport notificationType from \"../constants/notifications-type\";\nimport loadingNames from \"../constants/loading-names\";\nimport { withLoadingNames } from \"./loading-names\";\nimport createHandleFetch from \"../modules/handle-fetch\";\nimport { withErrors } from \"./errors\";\n\nconst UserContext = createContext({});\n\nconst userInitialState = {\n  googleToken: JSON.parse(window.localStorage.getItem(\"google\")),\n  user: {}\n};\nclass UserProviderCmp extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n    startLoading: PropTypes.func.isRequired,\n    stopLoading: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n  };\n\n  state = userInitialState;\n\n  handleFetch = createHandleFetch({\n    startLoading: this.props.startLoading,\n    stopLoading: this.props.stopLoading,\n    errorHandler: this.props.handleError,\n  });\n\n  componentDidMount() {\n    this.handleFetchUser();\n  }\n\n  handleFetchUser = () => {\n    const { googleToken } = this.state;\n    return this.fetchUser((googleToken && googleToken.googleId) || \"\", googleToken)\n      .then(user => user || this.createUser(googleToken && googleToken.profileObj, googleToken))\n      .then(this.setUserToState);\n  };\n\n  cleanUser = () => this.setState({ user: userInitialState.user });\n\n  cleanGoogleToken = callback => {\n    this.setState({ googleToken: null }, () => {\n      window.localStorage.clear(\"google\");\n      callback();\n    });\n  };\n\n  setGoogleToken = (googleToken, callback) =>\n    this.fetchUser(googleToken.googleId, googleToken).then(user =>\n      this.setState({ user, googleToken }, () => {\n        callback();\n        window.localStorage.setItem(\"google\", JSON.stringify(googleToken));\n      })\n    );\n\n  setUserToState = user => this.setState({ user });\n\n  fetchUser = (googleId, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.get(googleId, token)\n    });\n\n  createUser = (user, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.create({ ...user }, token),\n      responseHandler: () =>\n        this.props.enqueueSnackbar(\"The user has been saved successfully\", { variant: notificationType.success })\n    });\n\n  editUser = (word, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.update(word, token),\n      responseHandler: () =>\n        this.props.enqueueSnackbar(\"The user has been updated successfully\", { variant: notificationType.success })\n    });\n\n  deleteUser = (id, token) =>\n    this.handleFetch({\n      googleToken: this.state.googleToken,\n      loadingName: loadingNames.user.fetch,\n      requestHandler: () => apiUser.delete(id, token),\n      responseHandler: () => this.fetchWordsList()\n    }).then(() => this.props.enqueueSnackbar(\n      \"The user has been deleted successfully\",\n      { variant: notificationType.success }\n      ));\n\n  render() {\n    const { user, googleToken } = this.state;\n    const { children } = this.props;\n    const isUserLoggedIn = googleToken && googleToken.tokenObj.expires_at > Date.now();\n\n    return (\n      <UserContext.Provider\n        value={{\n          user,\n          googleToken,\n          isUserLoggedIn,\n          setGoogleToken: this.setGoogleToken,\n          cleanGoogleToken: this.cleanGoogleToken,\n          setUserToState: this.setUserToState,\n          cleanUser: this.cleanUser,\n          fetchUser: this.fetchUser,\n          createUser: this.createUser,\n          editUser: this.editUser,\n          deleteUser: this.deleteUser\n        }}>\n        {children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nconst UserProvider = compose(\n  withLoadingNames,\n  withSnackbar,\n  withErrors,\n)(UserProviderCmp);\n\nconst withUser = Cmp => props => <UserContext.Consumer>{value => <Cmp {...value} {...props} />}</UserContext.Consumer>;\n\nexport { UserProvider, withUser };\n","import injectSheet from 'react-jss';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport HeaderNavigation from './component';\nimport { withUser } from '../../context/user';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withRouter,\n  withUser,\n);\n\nexport default enhance(HeaderNavigation);\n","const styles = theme => ({\n  header: {\n    padding: `${theme.main.padding.large} 0`,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    \n  },\n  headerLinkWrapper: {\n    margin: 0,\n  },\n  headerLink: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    fontSize: '1.6rem',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { UserIcon } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport routes from \"../../routes\";\nimport styles from \"./styles\";\nimport loadingNames from \"../../constants/loading-names\";\n\nconst Header = ({ classes, isUserLoggedIn, checkIsLoading }) => {\n  const isLoading = checkIsLoading(loadingNames.user.fetch);\n  \n  return (\n    <div className={classes.header}>\n      <h1 className={classes.headerLinkWrapper}>\n        <Link to={routes.root} className={classes.headerLink}>\n          The dictionary\n        </Link>\n      </h1>\n      {isUserLoggedIn && <UserIcon isLoading={isLoading} />}\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  checkIsLoading: PropTypes.func.isRequired,\n  isUserLoggedIn: PropTypes.bool\n};\n\nHeader.defaultProps = {\n  classes: {},\n  isUserLoggedIn: false\n};\n\nexport default Header;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withUser } from '../../context/user';\nimport styles from './styles';\nimport Header from './component';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withLoadingNames,\n  withUser\n);\n\nexport default enhance(Header);\n","const styles = theme => ({\n  imageBlock: {\n    padding: `${theme.main.padding.medium} 0`,\n    width: props => `${props.width}px`,\n    height: props => `${props.height}px`,\n    background: props => `url(${props.src}) 50% 50% / cover no-repeat`,\n    borderRadius: theme.main.borderRadius.small\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Image = ({ src, width, height, classes }) => <div className={`${classes.imageBlock} ${src}${width}${height}`} />;\n\nImage.propTypes = {\n  src: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  classes: composeClassesPropTypes(styles)\n};\n\nImage.defaultProps = {\n  src: \"\",\n  width: 300,\n  height: 200,\n  classes: {}\n};\n\nexport default Image;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Image from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(Image);\n","const styles = theme => ({\n  inputsBlock: {\n    display: \"grid\",\n    rowGap: \"1em\",\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    borderRadius: theme.main.borderRadius.small,\n    background: theme.palette.background.paper,\n  },\n  topLine: {\n    display: \"grid\",\n    padding: \"5px 0\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  blockTitle: {\n    margin: 0\n  },\n  blockItems: {\n    minHeight: \"2em\"\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Button } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nclass InputsBlock extends Component {\n  static propTypes = {\n    classes: composeClassesPropTypes(styles),\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string,\n    control: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n    onAddItem: PropTypes.func\n  };\n\n  static defaultProps = {\n    classes: {},\n    title: null,\n    onAddItem: () => {},\n    control: false\n  };\n\n  state = {\n    input: \"\"\n  };\n\n  handleOnChange = event => this.setState({ input: event.target.value });\n\n  handleOnAddItem = () => {\n    this.props.onAddItem(this.state.input);\n    this.setState({ input: \"\" });\n  };\n\n  handleEnterPress = event => {\n    if (event.which === 13) {\n      this.handleOnAddItem();\n    }\n  };\n\n  render() {\n    const { input } = this.state;\n    const { children, title, control, classes } = this.props;\n\n    return (\n      <div className={classes.inputsBlock}>\n        <div className={classes.topLine}>\n          <h3 className={classes.blockTitle}>{title}</h3>\n          <div>\n            {control && control === true ? (\n              <TextField\n                placeholder=\"Add new option\"\n                value={input}\n                onChange={event => this.handleOnChange(event)}\n                onKeyPress={this.handleEnterPress}\n                control={\n                  <Button onClick={this.handleOnAddItem} title=\"Add new option\" disabled={!input} mini>\n                    <AddIcon />\n                  </Button>\n                }\n              />\n            ) : (\n              control\n            )}\n          </div>\n        </div>\n        <div className={classes.blockItems}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default InputsBlock;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport InputsBlock from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(InputsBlock);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Done from \"@material-ui/icons/Done\";\nimport DoneAll from \"@material-ui/icons/DoneAll\";\nimport ErrorOutline from \"@material-ui/icons/ErrorOutline\";\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\";\nimport { ControlsSeparator, TextFieldLoading, ButtonControl } from \"..\";\n\nconst LearningBoard = ({\n  loading,\n  onOptionChange,\n  inputValue,\n  word,\n  timesLearnt,\n  onCheckAnswer,\n  onGiveAHint,\n  onKnownWord,\n  onForgottenWord\n}) => {\n  const textLearnt = `Learnt ${timesLearnt} time${timesLearnt > 1 ? \"s\" : \"\"} before`;\n\n  return (\n    <div>\n      <TextFieldLoading\n        loading={loading}\n        onChange={onOptionChange}\n        label=\"Your option\"\n        value={inputValue}\n        disabled={loading}\n      />\n      <h3>{word}</h3>\n      <h5>{timesLearnt != null && textLearnt}</h5>\n      <ControlsSeparator align=\"center\">\n        <ButtonControl onClick={onCheckAnswer} disabled={loading} title=\"Submit my answer\">\n          <Done />\n        </ButtonControl>\n        <ButtonControl onClick={onGiveAHint} disabled={loading} title=\"Give me a hint\">\n          <RemoveRedEye />\n        </ButtonControl>\n        <ButtonControl onClick={onKnownWord} disabled={loading} title=\"I know this word\">\n          <DoneAll />\n        </ButtonControl>\n        <ButtonControl onClick={onForgottenWord} disabled={loading} title=\"I forgot this word, show me the translation\">\n          <ErrorOutline />\n        </ButtonControl>\n      </ControlsSeparator>\n    </div>\n  );\n};\n\nLearningBoard.propTypes = {\n  loading: PropTypes.bool,\n  onOptionChange: PropTypes.func.isRequired,\n  onCheckAnswer: PropTypes.func.isRequired,\n  onGiveAHint: PropTypes.func.isRequired,\n  onKnownWord: PropTypes.func.isRequired,\n  onForgottenWord: PropTypes.func.isRequired,\n  inputValue: PropTypes.string,\n  word: PropTypes.string,\n  timesLearnt: PropTypes.number\n};\n\nLearningBoard.defaultProps = {\n  loading: null,\n  inputValue: null,\n  word: null,\n  timesLearnt: null\n};\n\nexport default LearningBoard;\n","const styles = theme => ({\n  lineExplanation: {\n    display: 'grid',\n    gridTemplateColumns: props => (props.label ? \"1fr 2fr\" : \"1fr\"),\n    background: theme.palette.primary.light,\n    padding: theme.main.padding.medium,\n    marginBottom: theme.main.margin.medium,\n    borderRadius: theme.main.borderRadius.small\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst LineExplanation = ({ classes, label, children }) => (\n  <div className={classes.lineExplanation}>\n    {label && <div>{`${label}:`}</div>}\n    <div>{children}</div>\n  </div>\n);\n\nLineExplanation.propTypes = {\n  label: PropTypes.node,\n  children: PropTypes.node,\n  classes: composeClassesPropTypes(styles)\n};\n\nLineExplanation.defaultProps = {\n  label: null,\n  children: null,\n  classes: {}\n};\n\nexport default LineExplanation;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport styles from './styles';\nimport LineExplanation from './component';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(LineExplanation);\n","import React from \"react\";\nimport uuid from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { SearchableWord } from \"..\";\n\nconst ListOfSearchableWords = ({ items }) =>\n  items &&\n  items.map((item, index) => <SearchableWord key={uuid()} word={item} delimiter={index < items.length - 1 && \", \"} />);\n\nListOfSearchableWords.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string)\n};\n\nListOfSearchableWords.defaultProps = {\n  items: []\n};\n\nexport default ListOfSearchableWords;\n","const styles = {\n  multipleInputs: {\n    display: 'grid',\n    rowGap: '1em',\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\nimport { ButtonControl, TextField } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst MultipleInputs = ({ classes, items, placeholder, onRemoveItem, onChange, disabled }) => (\n  <div className={classes.multipleInputs}>\n    {items.map(({ id, value }) => (\n      <TextField\n        onChange={event => onChange(id, event.target.value)}\n        key={id}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n        control={\n          <ButtonControl color=\"primary\" onClick={() => onRemoveItem(id)} title=\"Remove example\" disabled={disabled}>\n            <DeleteIcon />\n          </ButtonControl>\n        }\n      />\n    ))}\n  </div>\n);\n\nMultipleInputs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ),\n  placeholder: PropTypes.string,\n  onRemoveItem: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nMultipleInputs.defaultProps = {\n  items: [],\n  placeholder: null,\n  disabled: false,\n  classes: {}\n};\n\nexport default MultipleInputs;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport MultipleInputs from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(MultipleInputs);\n","const styles = {\n  page: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, auto)\",\n    gap: \"1rem\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paginationInput: {\n    width: \"100px\"\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport { TextField, ButtonControl } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Pagination = ({ classes, pageNumber, maxPageCount, onChangePage }) => {\n  const prevPage = Number(pageNumber) > 1 ? Number(pageNumber) - 1 : 1;\n  const nextPage = Number(pageNumber) < maxPageCount ? Number(pageNumber) + 1 : maxPageCount;\n\n  return (\n    <div className={classes.page}>\n      <ButtonControl\n        onClick={() => onChangePage(prevPage)}\n        disabled={pageNumber === 1}\n        color=\"primary\"\n        title=\"Previous page\"\n      >\n        <KeyboardArrowLeft />\n      </ButtonControl>\n      <div className={classes.paginationInput}>\n        <TextField\n          label={maxPageCount ? `Page ${pageNumber} of ${maxPageCount}` : \"Page number\"}\n          onChange={event => {\n            const { value } = event.target;\n            let numberPage = parseInt(value, 10);\n\n            if (value > maxPageCount) numberPage = maxPageCount;\n            if (value < 1) numberPage = 1;\n            return onChangePage(numberPage);\n          }}\n          value={pageNumber}\n        />\n      </div>\n      <ButtonControl\n        onClick={() => onChangePage(nextPage)}\n        disabled={maxPageCount === pageNumber}\n        title=\"Next page\"\n        color=\"primary\"\n      >\n        <KeyboardArrowRight />\n      </ButtonControl>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  pageNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxPageCount: PropTypes.number,\n  onChangePage: PropTypes.func.isRequired\n};\n\nPagination.defaultProps = {\n  classes: {},\n  pageNumber: 1,\n  maxPageCount: 0\n};\n\nexport default Pagination;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Pagination from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(Pagination);\n","const styles = theme => ({\n  paginationPanel: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(0, auto))',\n    justifyContent: 'end',\n    gap: '1rem',\n    background: theme.palette.background.paper,\n    padding: '10px 10px',\n    width: '100%',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport { Pagination, SelectWithOptions } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst PaginationPanel = ({ countPerPage, page, maxPageCount, onChangePage, onChangeCount, classes }) => (\n  <List>\n    <ListItem>\n      <div className={classes.paginationPanel}>\n        <SelectWithOptions\n          onChange={onChangeCount}\n          value={countPerPage}\n          label=\"Words per page\"\n          options={[\n            { key: 1, title: 1 },\n            { key: 5, title: 5 },\n            { key: 10, title: 10 },\n            { key: 25, title: 25 },\n            { key: 50, title: 50 },\n            { key: 100, title: 100 }\n          ]}\n        />\n        <Pagination pageNumber={page} maxPageCount={maxPageCount} onChangePage={onChangePage} />\n      </div>\n    </ListItem>\n  </List>\n);\n\nPaginationPanel.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  countPerPage: PropTypes.number,\n  page: PropTypes.number,\n  maxPageCount: PropTypes.number,\n  onChangePage: PropTypes.func.isRequired,\n  onChangeCount: PropTypes.func.isRequired\n};\n\nPaginationPanel.defaultProps = {\n  countPerPage: 5,\n  page: 1,\n  maxPageCount: 0,\n  classes: {}\n};\n\nexport default PaginationPanel;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport PaginationPanel from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(PaginationPanel);\n","const styles = theme => ({\n  clickableWord: {\n    display: 'inline-block',\n    color: theme.palette.text.primary,\n    fontWeight: 'bolder',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { joinRoute } from \"url-joiner\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst SearchableWord = ({ word, classes, delimiter }) => (\n  <React.Fragment>\n    <Link\n      className={classes.clickableWord}\n      to={joinRoute({\n        pathname: routes.words.search,\n        searchParams: { query: word }\n      })}\n    >\n      {word}\n    </Link>\n    {delimiter}\n  </React.Fragment>\n);\n\nSearchableWord.propTypes = {\n  word: PropTypes.string.isRequired,\n  delimiter: PropTypes.node,\n  classes: composeClassesPropTypes(styles)\n};\n\nSearchableWord.defaultProps = {\n  delimiter: null,\n  classes: {}\n};\n\nexport default SearchableWord;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport SearchableWord from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(SearchableWord);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\n\nconst SelectBlock = ({ label, ...restProps }) => (\n  <FormControl color=\"primary\">\n    {label && <InputLabel htmlFor={label}>{label}</InputLabel>}\n    <Select {...restProps} />\n  </FormControl>\n);\n\nSelectBlock.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string\n};\n\nSelectBlock.defaultProps = {\n  label: null\n};\n\nexport default SelectBlock;\n","const styles = {\n  selectWithOptions: {\n    minWidth: '130px',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { Select } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst SelectWithOptions = ({ classes, label, value, onChange, options }) => (\n  <Select label={label} value={value} onChange={onChange} className={classes.selectWithOptions}>\n    {options.length === 0 ? (\n      <MenuItem value=\"\" disabled>\n        There are no appropriate options\n      </MenuItem>\n    ) : (\n      options.map(({ key, title }) => (\n        <MenuItem value={key} key={key}>\n          {title}\n        </MenuItem>\n      ))\n    )}\n  </Select>\n);\n\nSelectWithOptions.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  options: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func.isRequired,\n  classes: composeClassesPropTypes(styles)\n};\n\nSelectWithOptions.defaultProps = {\n  options: [],\n  value: \"\",\n  label: null,\n  classes: {}\n};\n\nexport default SelectWithOptions;\n","import { compose } from \"recompose\";\nimport injectSheet from \"react-jss\";\nimport SelectWithOptions from \"./component\";\nimport styles from \"./styles\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(SelectWithOptions);\n","const styles = theme => ({\n  textFieldControl: {\n    display: props => (props.control ? \"grid\" : \"initial\"),\n    rowGap: props => (props.control ? \".5rem\" : \"initial\"),\n    columnGap: props => (props.control ? \"1rem\" : \"initial\"),\n    justifyContent: props => (props.control ? \"space-between\" : \"initial\"),\n    alignItems: props => (props.control ? \"center\" : \"initial\"),\n    gridTemplateColumns: props => (props.control ? \"100fr 1fr\" : \"initial\"),\n    marginBottom: props =>\n      props.control ? \"initial\" : theme.main.margin.medium\n  },\n  textField: {\n    marginBottom: theme.main.margin.medium\n  },\n  root: {\n    width: \"100%\"\n  },\n  label: {\n    color: `${theme.main.colors.text} !important`,\n    opacity: 0.7\n  },\n  underline: {\n    \"&:after\": {\n      borderBottom: `${theme.main.colors.text} !important`\n    }\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"@material-ui/core\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst TextFieldCustomized = ({ classes, control, ...restProps }) => (\n  <div className={classes.textFieldControl}>\n    <TextField\n      {...restProps}\n      classes={{\n        root: classes.root\n      }}\n      InputProps={{\n        classes: {\n          underline: classes.underline\n        }\n      }}\n      InputLabelProps={{\n        className: classes.label\n      }}\n    />\n    {control}\n  </div>\n);\n\nTextFieldCustomized.propTypes = {\n  classes: composeClassesPropTypes(styles),\n  control: PropTypes.node\n};\n\nTextFieldCustomized.defaultProps = {\n  control: null,\n  classes: {}\n};\n\nexport default TextFieldCustomized;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport TextFieldCustomized from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(TextFieldCustomized);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Fade, LinearProgress } from \"@material-ui/core\";\nimport { TextField } from \"..\";\n\nconst TextFieldLoading = ({ loading, ...restProps }) => (\n  <div>\n    <TextField {...restProps} />\n    <Fade in={loading}>\n      <LinearProgress color=\"secondary\" />\n    </Fade>\n  </div>\n);\n\nTextFieldLoading.propTypes = {\n  loading: PropTypes.bool\n};\n\nTextFieldLoading.defaultProps = {\n  loading: false\n};\n\nexport default TextFieldLoading;\n","const styles = {\n  toolbarWrapper: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(0, auto))',\n    gap: '1rem',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, Zoom } from \"@material-ui/core\";\nimport KeyboardArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUp from \"@material-ui/icons/KeyboardArrowUp\";\nimport { SelectWithOptions, Button } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst Toolbar = ({\n  checkAllControl,\n  sortBy,\n  sortDirection,\n  onChangeSortDirection,\n  onChangeSortBy,\n  isAnyChecked,\n  children,\n  classes\n}) => (\n  <List>\n    <ListItem divider>\n      <div>{checkAllControl}</div>\n      <div className={classes.toolbarWrapper}>\n        {isAnyChecked ? (\n          <Zoom in={isAnyChecked}>{children}</Zoom>\n        ) : (\n          <Fragment>\n            <Button onClick={onChangeSortDirection} title=\"Sort direction\" color=\"primary\" variant=\"contained\" mini>\n              {sortDirection === \"descend\" ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n            </Button>\n            <div>\n              <SelectWithOptions\n                value={sortBy}\n                label=\"Sort by\"\n                onChange={onChangeSortBy}\n                options={[\n                  { key: \"word\", title: \"Word\" },\n                  { key: \"dateCreated\", title: \"Was added\" },\n                  { key: \"timesLearnt\", title: \"Was learnt times\" },\n                  { key: \"dateLastLearnt\", title: \"Was learnt last time\" }\n                ]}\n              />\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </ListItem>\n  </List>\n);\n\nToolbar.propTypes = {\n  checkAllControl: PropTypes.node,\n  sortBy: PropTypes.string,\n  sortDirection: PropTypes.string,\n  onChangeSortDirection: PropTypes.func.isRequired,\n  onChangeSortBy: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  isAnyChecked: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nToolbar.defaultProps = {\n  checkAllControl: null,\n  sortBy: \"dateCreated\",\n  sortDirection: \"ascend\",\n  isAnyChecked: false,\n  classes: {}\n};\n\nexport default Toolbar;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport Toolbar from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n);\n\nexport default enhance(Toolbar);\n","const styles = theme => ({\n  header: {\n    padding: `${theme.main.padding.large} 0`,\n  },\n  headerLinkWrapper: {\n    margin: 0,\n  },\n  headerLink: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    fontSize: '1.6rem',\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, Tooltip, CircularProgress } from \"@material-ui/core\";\n\nconst UserIcon = ({ user, isLoading }) =>\n  isLoading || Object.keys(user).length === 0 ? (\n    <CircularProgress />\n  ) : (\n    <Tooltip title={user.name}>\n      <Avatar alt={user.name} src={user.imageUrl} />\n    </Tooltip>\n  );\n\nUserIcon.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  googleToken: PropTypes.shape({}),\n  isLoading: PropTypes.bool\n};\n\nUserIcon.defaultProps = {\n  user: {},\n  googleToken: null,\n  isLoading: false\n};\n\nexport default UserIcon;\n","import injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withUser } from '../../context/user';\nimport styles from './styles';\nimport UserIcon from './component';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withUser,\n);\n\nexport default enhance(UserIcon);\n","const WORD_INITIAL_VALUES = {\n  word: \"\",\n  transcription: \"\",\n  partOfSpeech: [],\n  examples: [],\n  synonyms: [],\n};\n\nexport default WORD_INITIAL_VALUES;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fade, LinearProgress, TextField } from '@material-ui/core';\nimport uuid from 'uuid';\nimport { Button, MultipleInputs, InputsBlock, ChipSet, ControlsSeparator, SelectWithOptions } from '..';\nimport loadingNames from '../../constants/loading-names';\nimport WORD_INITIAL_VALUES from '../../constants/word-initial-values';\n\nclass WordForm extends Component {\n  static propTypes = {\n    checkIsLoading: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    wordItem: PropTypes.shape({\n      _id: PropTypes.string,\n      word: PropTypes.string,\n      transcription: PropTypes.string,\n      partOfSpeech: PropTypes.arrayOf(PropTypes.object),\n      synonyms: PropTypes.arrayOf(PropTypes.object),\n      examples: PropTypes.arrayOf(PropTypes.object)\n    })\n  };\n\n  static defaultProps = {\n    wordItem: null\n  };\n\n  state = {\n    wordItem: WORD_INITIAL_VALUES\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) =>\n    (nextProps.wordItem && nextProps.wordItem._id) !==\n    (prevState.wordItem && prevState.wordItem._id)\n      ? { wordItem: nextProps.wordItem }\n      : prevState;\n\n  handleFieldChange = (fieldKey, value) =>\n    this.setState(prevState => ({\n      wordItem: {\n        ...prevState.wordItem,\n        [fieldKey]: value\n      }\n    }));\n\n  handleRemoveItemFromArray = (fieldKey, id) =>\n    this.setState(prevState => ({\n      word: {\n        ...prevState.word,\n        [fieldKey]: prevState.word[fieldKey].filter(item => item.id !== id)\n      }\n    }));\n\n  handleAddItemToArray = (fieldKey, value) =>\n    this.setState(prevState => ({\n      wordItem: {\n        ...prevState.wordItem,\n        [fieldKey]: [{ id: uuid(), value }, ...prevState.wordItem[fieldKey]]\n      }\n    }));\n\n  handleOnChangeMultipleInputs = (fieldKey, id, value) =>\n    this.setState(prevState => ({\n      wordItem: {\n        ...prevState.wordItem,\n        [fieldKey]: prevState.wordItem[fieldKey].map(item => (item.id === id ? { ...item, value } : item))\n      }\n    }));\n\n  onResetForm = () => this.setState({ wordItem: this.props.wordItem });\n\n  render() {\n    const { onSubmit, checkIsLoading } = this.props;\n    const { wordItem } = this.state;\n    const { word, transcription, examples, partOfSpeech, synonyms } = wordItem;\n    const loading = checkIsLoading(loadingNames.words.fetch, loadingNames.words.save);\n    const freePartsOfSpeech = [\n      { key: 'noun', title: 'Noun' },\n      { key: 'pronoun', title: 'Pronoun' },\n      { key: 'verb', title: 'Verb' },\n      { key: 'adjective', title: 'Adjective' },\n      { key: 'adverb', title: 'Adverb' },\n      { key: 'preposition', title: 'Preposition' },\n      { key: 'conjunction', title: 'Conjunction' },\n      { key: 'interjection', title: 'Interjection' },\n      { key: 'article', title: 'Article' },\n      { key: 'determiner', title: 'Determiner' }\n    ].filter(option => !(partOfSpeech && partOfSpeech.map(part => part.value)\n      .includes(option.key)));\n    return (\n      <form onSubmit={onSubmit}>\n        <Fade in={loading}>\n          <LinearProgress color=\"secondary\"/>\n        </Fade>\n        <InputsBlock title=\"Main information\">\n          <TextField\n            label=\"Word\"\n            value={word}\n            onChange={event => this.handleFieldChange('word', event.target.value)}\n            disabled={loading}\n          />\n          <TextField\n            label=\"Transcription\"\n            value={transcription}\n            onChange={event => this.handleFieldChange('transcription', event.target.value)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <InputsBlock\n          title=\"Parts of speech\"\n          control={\n            <SelectWithOptions\n              value={freePartsOfSpeech[0] ? freePartsOfSpeech[0].key : ''}\n              label=\"Parts of speech\"\n              onChange={event => this.handleAddItemToArray('partOfSpeech', event.target.value)}\n              options={freePartsOfSpeech}\n              disabled={loading}\n            />\n          }\n        >\n          <ChipSet\n            items={partOfSpeech}\n            onRemoveItem={id => this.handleRemoveItemFromArray('partOfSpeech', id)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <InputsBlock onAddItem={value => this.handleAddItemToArray('synonyms', value)} title=\"Synonyms\" control>\n          <ChipSet\n            items={synonyms}\n            onRemoveItem={id => this.handleRemoveItemFromArray('synonyms', id)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <InputsBlock onAddItem={value => this.handleAddItemToArray('examples', value)} title=\"Examples\" control>\n          <MultipleInputs\n            items={examples}\n            placeholder=\"Example\"\n            onChange={(id, value) => this.handleOnChangeMultipleInputs('examples', id, value)}\n            onRemoveItem={id => this.handleRemoveItemFromArray('examples', id)}\n            disabled={loading}\n          />\n        </InputsBlock>\n        <ControlsSeparator align=\"right\">\n          <Button onClick={this.onResetForm} disabled={loading} variant=\"contained\" color=\"primary\" title=\"Reset\">\n            Reset changes\n          </Button>\n          <Button onClick={() => onSubmit(wordItem)} disabled={loading} variant=\"contained\" color=\"primary\"\n                  title=\"Save\">\n            Save\n          </Button>\n        </ControlsSeparator>\n      </form>\n    );\n  }\n}\n\nexport default WordForm;\n","const styles = theme => ({\n  wordItemWrapper: {\n    opacity: props =>\n      props.isLoading || props.isChecked ? theme.main.opacity.disabled : 1\n  },\n  description: {\n    padding: `${theme.main.padding.small} 0`\n  },\n  wordLink: {\n    color: theme.palette.primary.main\n  },\n  wordTime: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    fontSize: \"0.9em\"\n  }\n});\n\nexport default styles;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport Edit from '@material-ui/icons/Edit';\nimport { Checkbox, Fade, CircularProgress, Grid, ListItemText } from '@material-ui/core';\nimport { joinRoute } from 'url-joiner';\nimport routes from '../../routes';\nimport { ButtonWithRouter } from '..';\nimport composeClassesPropTypes from '../../modules/compose-classes-prop-types';\nimport styles from './styles';\n\nconst EMPTY_VALUE = '-';\n\nconst WordItemInList = props => {\n  const { isChecked, onWordCheck, wordItem, linkToWord, loading, classes } = props;\n  const { _id, word, transcription, dateCreated, dateLastLearnt, timesLearnt } = wordItem;\n  const lastLearnt =\n    dateLastLearnt && dateLastLearnt === new Date(0).toISOString() ? 'Never' : moment(dateLastLearnt).fromNow();\n\n  return (\n    <Grid container spacing={16} alignItems=\"center\" className={classes.wordItemWrapper}>\n      <Grid item xs={1}>\n        <Checkbox onChange={() => onWordCheck(_id)} checked={isChecked} disabled={loading}/>\n      </Grid>\n      <Grid item xs={7} className={classes.description}>\n        <ListItemText\n          primary={\n            loading ? (\n              <Fade in={loading}>\n                <CircularProgress color=\"secondary\" size={20}/>\n              </Fade>\n            ) : (\n              <Fragment>\n                {word && (\n                  <Link className={classes.wordLink} to={linkToWord}>\n                    {word}\n                  </Link>\n                )}\n                {[word && ' ', transcription && `[${transcription}]`].filter(Boolean)\n                  .join(' - ')}\n              </Fragment>\n            )\n          }\n          secondary={[timesLearnt != null && `Times learnt: ${timesLearnt}`, lastLearnt && `Last learnt: ${lastLearnt}`]\n            .filter(Boolean)\n            .join(` · `)}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <div className={classes.wordTime}>{(dateCreated && moment(dateCreated)\n          .fromNow()) || EMPTY_VALUE}</div>\n      </Grid>\n      <Grid item xs={1}>\n        <ButtonWithRouter\n          to={joinRoute({\n            pathname: routes.words.list.root,\n            paths: [_id, 'edit']\n          })}\n          disabled={loading}\n          title=\"Edit\"\n        >\n          <Edit/>\n        </ButtonWithRouter>\n      </Grid>\n    </Grid>\n  );\n};\n\nWordItemInList.propTypes = {\n  wordItem: PropTypes.shape({\n    _id: PropTypes.string,\n    word: PropTypes.string,\n    transcription: PropTypes.string,\n    dateCreated: PropTypes.string\n  }),\n  linkToWord: PropTypes.string,\n  onWordCheck: PropTypes.func,\n  isChecked: PropTypes.bool,\n  loading: PropTypes.bool,\n  classes: composeClassesPropTypes(styles)\n};\n\nWordItemInList.defaultProps = {\n  wordItem: {\n    _id: '',\n    word: '',\n    transcription: '',\n    dateCreated: ''\n  },\n  onWordCheck: () => {\n  },\n  linkToWord: '',\n  isChecked: false,\n  loading: false,\n  classes: {}\n};\n\nexport default WordItemInList;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport WordItemInList from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(WordItemInList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Fade, LinearProgress } from \"@material-ui/core\";\nimport { InputsBlock, LineExplanation, ListOfSearchableWords, Image } from \"..\";\n\nexport const mapValues = items => items.map(item => item.value).filter(Boolean);\n\nconst WordPreview = ({ wordItem, loading }) => {\n  const { word: wordText, transcription, partOfSpeech, synonyms, antonyms, similarTo, examples, gif } = wordItem;\n  return (\n    <div>\n      <Fade in={loading}>\n        <LinearProgress color=\"secondary\" />\n      </Fade>\n      <InputsBlock title=\"Main information\">\n        <Image src={gif} alt={wordText} />\n        <LineExplanation label=\"Word\">{wordText}</LineExplanation>\n        <LineExplanation label=\"Transcription\">{transcription && `[${transcription}]`}</LineExplanation>\n        <LineExplanation label=\"Part of speech\">\n          <ListOfSearchableWords items={partOfSpeech && mapValues(partOfSpeech)} />\n        </LineExplanation>\n        <LineExplanation label=\"Synonyms\">\n          <ListOfSearchableWords items={synonyms && mapValues(synonyms)} />\n        </LineExplanation>\n        <LineExplanation label=\"Antonyms\">\n          <ListOfSearchableWords items={antonyms && mapValues(antonyms)} />\n        </LineExplanation>\n        <LineExplanation label=\"Similar to\">\n          <ListOfSearchableWords items={similarTo && mapValues(similarTo)} />\n        </LineExplanation>\n      </InputsBlock>\n      <InputsBlock title=\"Examples\">\n        {examples ? examples.map(example => <LineExplanation key={example.id}>{example.value}</LineExplanation>) : \"\"}\n      </InputsBlock>\n    </div>\n  );\n};\n\nWordPreview.propTypes = {\n  wordItem: PropTypes.shape({\n    word: PropTypes.string,\n    transcription: PropTypes.string,\n    gif: PropTypes.string,\n    partOfSpeech: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    synonyms: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    antonyms: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    similarTo: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    examples: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.string\n      })\n    )\n  }),\n  loading: PropTypes.bool\n};\n\nWordPreview.defaultProps = {\n  wordItem: null,\n  loading: false\n};\n\nexport default WordPreview;\n","const styles = theme => ({\n  wordsList: {\n    background: theme.palette.background.paper\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport uuid from \"uuid\";\nimport { joinRoute } from \"url-joiner\";\nimport routes from \"../../routes\";\nimport { WordItemInList } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst WordsList = ({ wordsList, loading, countPerPage, checked, onWordCheck, classes }) => (\n  <List className={classes.wordsList} classes={{ root: classes.wordsList }}>\n    {loading\n      ? Array(countPerPage)\n          .fill(null)\n          .map(() => (\n            <ListItem key={uuid()} divider>\n              <WordItemInList loading={loading} />\n            </ListItem>\n          ))\n      : wordsList.map(wordItem => {\n          const { _id } = wordItem;\n          const linkToWord = joinRoute({\n            pathname: routes.words.list.root,\n            paths: [_id]\n          });\n          const isChecked = checked.includes(_id);\n\n          return (\n            <ListItem key={_id} divider>\n              <WordItemInList\n                wordItem={wordItem}\n                linkToWord={linkToWord}\n                onWordCheck={onWordCheck}\n                isChecked={isChecked}\n                loading={loading}\n              />\n            </ListItem>\n          );\n        })}\n  </List>\n);\n\nWordsList.propTypes = {\n  wordsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired\n    })\n  ),\n  loading: PropTypes.bool,\n  countPerPage: PropTypes.number,\n  checked: PropTypes.arrayOf(PropTypes.string),\n  onWordCheck: PropTypes.func.isRequired,\n  classes: composeClassesPropTypes(styles)\n};\n\nWordsList.defaultProps = {\n  wordsList: null,\n  loading: null,\n  countPerPage: null,\n  checked: null,\n  classes: {}\n};\n\nexport default WordsList;\n","\nimport { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport WordsList from './component';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles)\n);\n\nexport default enhance(WordsList);\n","import uuid from \"uuid\";\n\nconst mergeArrays = (data, field) =>\n  Array.from(\n    new Set(\n      data.reduce(\n        (res, val) => (val[field] ? [...res, ...val[field]] : [...res]),\n        []\n      )\n    )\n  );\n\nconst addIdForArrayItems = items =>\n  items.map(item => ({ value: item, id: uuid() }));\n\nconst normalizeWord = (wordData = {}) => {\n  const { results = [], ...rest } = wordData;\n\n  return {\n    examples: addIdForArrayItems(mergeArrays(results, \"examples\")),\n    definitions: addIdForArrayItems(results.map(item => item.definition)),\n    similarTo: addIdForArrayItems(mergeArrays(results, \"similarTo\")),\n    synonyms: addIdForArrayItems(mergeArrays(results, \"synonyms\")),\n    antonyms: addIdForArrayItems(mergeArrays(results, \"antonyms\")),\n    partOfSpeech: addIdForArrayItems(\n      Array.from(new Set(results.map(item => item.partOfSpeech)))\n    ),\n    ...rest\n  };\n};\n\nconst denormalizeWord = ({ _id, ...wordWithoutId }) => wordWithoutId;\n\nexport { mergeArrays, addIdForArrayItems, normalizeWord, denormalizeWord };\n","import React, { Component, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withSnackbar } from 'notistack';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { parseSearchParams } from 'url-joiner';\nimport { apiWord, apiGif } from '../api';\nimport notificationType from '../constants/notifications-type';\nimport loadingNames from '../constants/loading-names';\nimport { normalizeWord } from '../modules/word-utils';\nimport { withLoadingNames } from './loading-names';\nimport createHandleFetch from '../modules/handle-fetch';\nimport { withUser } from './user';\nimport { withErrors } from './errors';\n\nconst WordsContext = createContext({});\n\nconst INITIAL_WORD_SORT_DATA = {\n  sortBy: 'dateCreated',\n  sortDirection: 'descend',\n  page: 1,\n  countPerPage: 5\n};\n\nconst wordsInitialState = {\n  wordsList: [],\n  wordItem: {},\n  count: 0,\n  gif: ''\n};\n\nclass WordsProviderCmp extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n    startLoading: PropTypes.func.isRequired,\n    stopLoading: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    location: ReactRouterPropTypes.location.isRequired,\n    googleToken: PropTypes.shape({}),\n    user: PropTypes.shape({})\n  };\n\n  static defaultProps = {\n    googleToken: null,\n    user: null\n  };\n\n  state = wordsInitialState;\n\n  handleFetch = createHandleFetch({\n    startLoading: this.props.startLoading,\n    stopLoading: this.props.stopLoading,\n    errorHandler: this.props.handleError,\n  });\n\n  getSearchParams = () => {\n    const { location } = this.props;\n    const { sortBy, sortDirection, page, countPerPage } = INITIAL_WORD_SORT_DATA;\n    const parsedParams = parseSearchParams(location.search);\n\n    return {\n      sortBy: parsedParams.sortBy || sortBy,\n      sortDirection: parsedParams.sortDirection || sortDirection,\n      page: Number(parsedParams.page) || page,\n      countPerPage: Number(parsedParams.countPerPage) || countPerPage\n    };\n  };\n\n  cleanWordsList = () => this.setState({ wordsList: wordsInitialState.wordsList });\n\n  cleanWord = () => this.setState({ wordItem: wordsInitialState.wordItem });\n\n  setWordToState = wordItem => this.setState({ wordItem });\n\n  fetchWord = wordId =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.fetch,\n      requestHandler: token => apiWord.get(wordId, token),\n      responseHandler: wordItem => this.setState({ wordItem })\n    });\n\n  fetchWordsList = () => {\n    const { location } = this.props;\n    const { sortBy, sortDirection, page, countPerPage } = this.getSearchParams(location.search);\n    const query = {\n      skip: (page - 1) * countPerPage,\n      limit: Number(countPerPage),\n      sortDirection: sortDirection === 'descend' ? -1 : 1,\n      sortBy\n    };\n\n    return this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.list,\n      requestHandler: token => apiWord.getList({ query, googleId: token && token.googleId }, token),\n      responseHandler: ({ items = [], count = 0 } = {}) => this.setState({ wordsList: items, count })\n    });\n  };\n\n  createWord = (word, ownerId) =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.save,\n      requestHandler: token => apiWord.create({ ...word, googleId: token && token.googleId, ownerId }, token),\n      responseHandler: () =>\n        this.props.enqueueSnackbar('The word has been saved successfully', { variant: notificationType.success })\n    });\n\n  editWord = word =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.fetch,\n      requestHandler: token => apiWord.update(word, token),\n      responseHandler: () =>\n        this.props.enqueueSnackbar('The word has been updated successfully', { variant: notificationType.success })\n    });\n\n  deleteWord = id =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.delete,\n      requestHandler: token => apiWord.delete(id, token),\n      responseHandler: () => this.fetchWordsList()\n    })\n      .then(() => this.props.enqueueSnackbar(\n        'The word has been deleted successfully',\n        { variant: notificationType.success }\n        ));\n\n  searchWord = params =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.search,\n      requestHandler: token => apiWord.search(params, token),\n      responseHandler: foundWord => apiGif.get({ q: foundWord.word })\n        .then(gifs => {\n          const downsizedGifs = gifs && gifs.data && gifs.data.map(gif => gif.images.downsized_large.url);\n          const randomGif = downsizedGifs && downsizedGifs[Math.round(Math.random() * downsizedGifs.length)];\n\n          this.setState({\n            wordItem: {\n              ...normalizeWord(foundWord),\n              gif: randomGif\n            }\n          });\n        })\n    });\n\n  fetchWordsToLearn = () =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.learn,\n      requestHandler: token => apiWord.getListToLearn({ googleId: token && token.googleId }, token),\n      responseHandler: ({ items, count }) => this.setState({ wordsList: items, count })\n    });\n\n  learnWord = wordId =>\n    this.handleFetch({\n      googleToken: this.props.googleToken,\n      loadingName: loadingNames.words.learn,\n      requestHandler: token => apiWord.learn(wordId, token),\n      responseHandler: () =>\n        this.setState(prevState => ({\n          wordsList: [...prevState.wordsList.filter(word => word._id !== wordId)]\n        }))\n    });\n\n  relearnWord = wordId => {\n    this.setState(prevState => {\n      const wordToRelearn = prevState.wordsList.find(word => word._id === wordId);\n\n      return {\n        wordsList: [...prevState.wordsList.filter(word => word._id !== wordToRelearn._id), wordToRelearn]\n      };\n    });\n  };\n\n  render() {\n    const { wordsList, wordItem, count, gif } = this.state;\n    const { children, user } = this.props;\n\n    return (\n      <WordsContext.Provider\n        value={{\n          gif,\n          wordItem,\n          wordsList,\n          wordsCount: count,\n          getWordsSearchParams: this.getSearchParams,\n          setWordToState: this.setWordToState,\n          cleanWord: this.cleanWord,\n          cleanWordsList: this.cleanWordsList,\n          fetchWord: this.fetchWord,\n          fetchWordsList: this.fetchWordsList,\n          fetchWordsToLearn: this.fetchWordsToLearn,\n          editWord: this.editWord,\n          deleteWord: this.deleteWord,\n          learnWord: this.learnWord,\n          relearnWord: this.relearnWord,\n          saveWord: w => this.createWord(w, user._id),\n          searchWord: this.searchWord\n        }}>\n        {children}\n      </WordsContext.Provider>\n    );\n  }\n}\n\nconst WordsProvider = compose(\n  withRouter,\n  withUser,\n  withLoadingNames,\n  withSnackbar,\n  withErrors,\n)(WordsProviderCmp);\n\nconst withWords = Cmp => props => (\n  <WordsContext.Consumer>{value => <Cmp {...value} {...props} />}</WordsContext.Consumer>\n);\n\nexport { WordsProvider, withWords };\n","const styles = theme => ({\n  wordsTableWrapper: {\n    display: \"grid\",\n    margin: 0,\n    padding: 0,\n    borderRadius: theme.main.borderRadius.small,\n    overflow: \"hidden\",\n    rowGap: \"1px\",\n    background: theme.palette.background.paper\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { Checkbox } from \"@material-ui/core\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport { parseSearchParams, joinRoute } from \"url-joiner\";\nimport loadingNames from \"../../constants/loading-names\";\nimport { PaginationPanel, Toolbar, WordsList, ButtonControl } from \"..\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nclass WordsTable extends Component {\n  static propTypes = {\n    wordsList: PropTypes.arrayOf(\n      PropTypes.shape({\n        _id: PropTypes.string\n      })\n    ),\n    history: ReactRouterPropTypes.history.isRequired,\n    location: ReactRouterPropTypes.location.isRequired,\n    wordsCount: PropTypes.number,\n    deleteWord: PropTypes.func.isRequired,\n    getWordsSearchParams: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    wordsList: null,\n    wordsCount: 0,\n    classes: {}\n  };\n\n  state = {\n    checked: []\n  };\n\n  handleOnCheck = id =>\n    this.setState(prevState => ({\n      checked: prevState.checked.find(wordId => wordId === id)\n        ? prevState.checked.filter(wordId => wordId !== id)\n        : [...prevState.checked, id]\n    }));\n\n  handleOnCheckAll = () =>\n    this.setState(prevState => ({\n      checked:\n        prevState.checked.length !== this.props.wordsList.length ? [...this.props.wordsList.map(word => word._id)] : []\n    }));\n\n  handleDeleteWord = () =>\n    this.state.checked.length > 0 &&\n    Promise.resolve(this.state.checked.map(id => this.props.deleteWord(id))).then(() => this.setState({ checked: [] }));\n\n  generateUrl = params => {\n    const { location } = this.props;\n\n    return joinRoute({\n      pathname: location.pathname,\n      search: location.search,\n      searchParams: params\n    });\n  };\n\n  handleOnChangeSelect = (event, field) =>\n    this.props.history.push(this.generateUrl({ page: 1, [field]: event.target.value }));\n\n  handleOnChangeDirection = () => {\n    const { location, history } = this.props;\n\n    return history.push(\n      this.generateUrl({\n        sortDirection: parseSearchParams(location.search).sortDirection === \"descend\" ? \"ascend\" : \"descend\"\n      })\n    );\n  };\n\n  handleOnChangePage = pageNumber => this.props.history.push(this.generateUrl({ page: pageNumber }));\n\n  render() {\n    const { checked } = this.state;\n    const { wordsList, wordsCount, checkIsLoading, getWordsSearchParams, location, classes } = this.props;\n    const { countPerPage, sortBy, sortDirection, page } = getWordsSearchParams(location);\n    const loading = checkIsLoading(loadingNames.words.list);\n    const isCheckedAll = checked.length === wordsList.length && checked.length > 0;\n\n    return (\n      <main>\n        <div className={classes.wordsTableWrapper}>\n          <Toolbar\n            checkAllControl={<Checkbox onChange={this.handleOnCheckAll} checked={isCheckedAll} />}\n            isAnyChecked={checked.length > 0}\n            sortBy={sortBy}\n            sortDirection={sortDirection}\n            onChangeSortDirection={this.handleOnChangeDirection}\n            onChangeSortBy={event => this.handleOnChangeSelect(event, \"sortBy\")}\n          >\n            <ButtonControl\n              disabled={checked.length === 0}\n              onClick={this.handleDeleteWord}\n              color=\"primary\"\n              title=\"Delete\"\n            >\n              <Delete />\n            </ButtonControl>\n          </Toolbar>\n          <WordsList\n            wordsList={wordsList}\n            onWordCheck={this.handleOnCheck}\n            loading={loading}\n            countPerPage={countPerPage}\n            checked={checked}\n          />\n          <PaginationPanel\n            countPerPage={countPerPage}\n            page={page}\n            maxPageCount={Math.ceil(wordsCount / countPerPage)}\n            onChangeCount={event => this.handleOnChangeSelect(event, \"countPerPage\")}\n            onChangePage={this.handleOnChangePage}\n          />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default WordsTable;\n","import { compose } from \"recompose\";\nimport injectSheet from 'react-jss';\nimport { withRouter } from \"react-router-dom\";\nimport { withLoadingNames } from \"../../context/loading-names\";\nimport { withWords } from \"../../context/words\";\nimport WordsTable from \"./component\";\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withRouter,\n  withLoadingNames,\n  withWords\n);\n\nexport default enhance(WordsTable);\n","const styles = theme => ({\n  loginButton: {\n    background: theme.palette.primary.main,\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { GoogleLogin } from \"react-google-login\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Button } from \"../../components\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env;\n\nclass Login extends Component {\n  static propTypes = {\n    setGoogleToken: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    classes: {}\n  };\n\n  onSuccess = response => this.props.setGoogleToken(response, () => this.props.history.goBack());\n\n  onFailure = error => this.props.handleError(error);\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <GoogleLogin\n        className={classes.loginButton}\n        clientId={REACT_APP_GOOGLE_CLIENT_ID}\n        onSuccess={this.onSuccess}\n        onFailure={this.onFailure}\n        color=\"primary\"\n        render={renderProps => (\n          <Button onClick={renderProps.onClick} color=\"secondary\" variant=\"contained\" title=\"Login with google account\">\n            <AccountCircle />\n            Login with google account\n          </Button>\n        )}\n      />\n    );\n  }\n}\n\nexport default Login;\n","import { compose } from \"recompose\";\nimport injectSheet from 'react-jss';\nimport { withRouter } from \"react-router-dom\";\nimport { withUser } from \"../../context/user\";\nimport LoginCmp from \"./container\";\nimport styles from './styles';\nimport { withErrors } from \"../../context/errors\";\n\nconst Login = compose(\n  injectSheet(styles),\n  withRouter,\n  withUser,\n  withErrors,\n)(LoginCmp);\n\nexport default Login;\n","const styles = theme => ({\n  logoutButton: {\n    background: theme.palette.primary.main,\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { GoogleLogout } from \"react-google-login\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Button } from \"../../components\";\nimport routes from \"../../routes\";\nimport notificationType from \"../../constants/notifications-type\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nclass Logout extends Component {\n  static propTypes = {\n    cleanGoogleToken: PropTypes.func.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    classes: {}\n  };\n\n  onSuccess = () =>\n    this.props.cleanGoogleToken(() => {\n      this.props.enqueueSnackbar(\"You were successfully logged out!\", { variant: notificationType.success });\n      this.props.history.push(routes.login);\n    });\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <GoogleLogout\n        className={classes.logoutButton}\n        onLogoutSuccess={this.onSuccess}\n        render={renderProps => (\n          <Button onClick={renderProps.onClick} color=\"secondary\" variant=\"contained\" title=\"Logout\">\n            <AccountCircle /> Logout\n          </Button>\n        )}\n      >\n        <AccountCircle />\n      </GoogleLogout>\n    );\n  }\n}\n\nexport default Logout;\n","import { compose } from \"recompose\";\nimport injectSheet from \"react-jss\";\nimport { withRouter } from \"react-router-dom\";\nimport { withSnackbar } from 'notistack';\nimport { withUser } from \"../../context/user\";\nimport LogoutCmp from \"./container\";\nimport styles from \"./styles\";\n\nconst Logout = compose(\n  injectSheet(styles),\n  withRouter,\n  withUser,\n  withSnackbar,\n)(LogoutCmp);\n\nexport default Logout;\n","const styles = {\n  mainPage: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gap: '1rem',\n  },\n  quoteText: {\n    fontSize: '1.3em',\n    fontWeight: 'bolder',\n  },\n  quoteAuthor: {\n    textAlign: 'right',\n    fontSize: '1.2em',\n    margin: '0.5em 0'\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst MainContainer = ({ classes }) => (\n  <div className={classes.mainPage}>\n    <h1>This is the dictionary of definitions</h1>\n  </div>\n);\n\nMainContainer.propTypes = {\n  classes: composeClassesPropTypes(styles)\n};\n\nMainContainer.defaultProps = {\n  classes: {}\n};\n\nexport default MainContainer;\n","import injectSheet from \"react-jss\";\nimport { compose } from \"recompose\";\nimport MainPage from \"./container\";\nimport styles from \"./styles\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(MainPage);\n","const styles = {\n  notFoundWrapper: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"100%\"\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport { ButtonWithRouter } from \"../../components\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst PageNotFoundContainer = ({ classes }) => (\n  <div className={classes.notFoundWrapper}>\n    <h1>Page not found</h1>\n    <ButtonWithRouter to={routes.root}>Home</ButtonWithRouter>\n  </div>\n);\n\nPageNotFoundContainer.propTypes = {\n  classes: composeClassesPropTypes(styles)\n};\n\nPageNotFoundContainer.defaultProps = {\n  classes: {}\n};\n\nexport default PageNotFoundContainer;\n","import injectSheet from \"react-jss\";\nimport { compose } from \"recompose\";\nimport PageNotFound from \"./container\";\nimport styles from \"./styles\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(PageNotFound);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { WordForm } from \"../../components\";\nimport wordShape from \"../../constants/shapes\";\n\nclass AddWordContainer extends Component {\n  componentWillUnmount() {\n    this.props.cleanWord();\n  }\n\n  render() {\n    const { saveWord, wordItem, checkIsLoading } = this.props;\n\n    return (\n      <WordForm wordItem={wordItem} checkIsLoading={checkIsLoading} onSubmit={saveWord} />\n    );\n  }\n}\n\nAddWordContainer.propTypes = {\n  saveWord: PropTypes.func.isRequired,\n  checkIsLoading: PropTypes.func.isRequired,\n  cleanWord: PropTypes.func.isRequired,\n  wordItem: wordShape(PropTypes),\n};\n\nAddWordContainer.defaultProps = {\n  wordItem: null,\n};\n\nexport default AddWordContainer;\n","import { compose } from 'recompose';\nimport { withWords } from '../../context/words';\nimport AddWord from './container';\nimport { withLoadingNames } from '../../context/loading-names';\n\nconst enhance = compose(\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(AddWord);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { WordForm } from \"../../components\";\n\nclass WordEdit extends Component {\n  static propTypes = {\n    wordItem: PropTypes.shape({}),\n    fetchWord: PropTypes.func.isRequired,\n    cleanWord: PropTypes.func.isRequired,\n    match: ReactRouterPropTypes.match.isRequired,\n    editWord: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    wordItem: null\n  };\n\n  componentDidMount() {\n    this.props.fetchWord(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWord();\n  }\n\n  render() {\n    const { wordItem, editWord, checkIsLoading } = this.props;\n\n    return <WordForm wordItem={wordItem} onSubmit={editWord} checkIsLoading={checkIsLoading} />;\n  }\n}\n\nexport default WordEdit;\n","import { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withWords } from \"../../context/words\";\nimport WordEdit from \"./container\";\nimport { withLoadingNames } from \"../../context/loading-names\";\n\nconst enhance = compose(\n  withRouter,\n  withWords,\n  withLoadingNames,\n);\n\nexport default enhance(WordEdit);\n","const styles = {\n  learnWord: {\n    width: '300px',\n    margin: '0 auto'\n  }\n};\n\nexport default styles;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport notificationType from \"../../constants/notifications-type\";\nimport loadingNames from \"../../constants/loading-names\";\nimport { WordPreview, LearningBoard, Button } from \"../../components\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport styles from \"./styles\";\n\nconst MAX_COUNT_ATTEMPTS = 3;\n\nconst getIndexOfDiscrepancy = originString => stringToCompare =>\n  originString.split(\"\").findIndex((letter, index) => letter !== stringToCompare[index]);\n\nclass LearnWordsContainer extends Component {\n  static propTypes = {\n    fetchWordsToLearn: PropTypes.func.isRequired,\n    cleanWordsList: PropTypes.func.isRequired,\n    learnWord: PropTypes.func.isRequired,\n    relearnWord: PropTypes.func.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    classes: {}\n  };\n\n  state = {\n    countOfTry: 0,\n    guessed: false,\n    inputValue: \"\",\n    currentWord: {}\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) =>\n    nextProps.wordsList && nextProps.wordsList.length > 0\n      ? {\n          ...prevState,\n          currentWord: nextProps.wordsList[0]\n        }\n      : prevState;\n\n  componentDidMount() {\n    this.props.fetchWordsToLearn();\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWordsList();\n  }\n\n  onChangeInput = event => this.setState({ inputValue: event.target.value });\n\n  resetCountOfTry = () => this.setState({ countOfTry: 0 });\n\n  onCheckAnswer = () => {\n    const { enqueueSnackbar, relearnWord } = this.props;\n    const { inputValue, currentWord } = this.state;\n\n    if (currentWord && Object.keys(currentWord).length > 0) {\n      const { en, _id } = currentWord;\n      if (inputValue.toLowerCase() === en.toLowerCase()) {\n        this.setState({\n          guessed: true,\n          inputValue: \"\",\n          countOfTry: 0\n        });\n        enqueueSnackbar(\"You are right!\", { variant: notificationType.info });\n      }\n\n      this.setState(\n        prevState => ({\n          countOfTry: prevState.countOfTry + 1\n        }),\n        () => {\n          const { countOfTry } = this.state;\n          if (countOfTry < MAX_COUNT_ATTEMPTS) {\n            const attemptsLeft = MAX_COUNT_ATTEMPTS - this.state.countOfTry;\n            enqueueSnackbar(\n              `You are wrong! ${attemptsLeft} attempt${attemptsLeft > 1 ? \"s\" : \"\"} left`,\n              { variant: notificationType.info }\n            );\n          } else {\n            this.setState({ countOfTry: 0 });\n            enqueueSnackbar(\n              `You don't remember this word. Keep learning it!`,\n              { variant: notificationType.warning }\n              );\n            relearnWord(_id);\n          }\n        }\n      );\n    }\n  };\n\n  onGiveAHint = () => {\n    const { inputValue, currentWord } = this.state;\n\n    if (currentWord && Object.keys(currentWord).length > 0) {\n      const { en } = currentWord;\n      const discrepancyIndex = getIndexOfDiscrepancy(en)(inputValue);\n      const countOfHintsLetter = discrepancyIndex >= 0 ? discrepancyIndex : en.length - 1;\n\n      this.setState({\n        inputValue: en.slice(0, countOfHintsLetter < en.length ? countOfHintsLetter + 1 : countOfHintsLetter)\n      });\n    }\n  };\n\n  onKnownWord = () => this.props.learnWord(this.state.currentWord._id);\n\n  onForgottenWord = () => this.props.relearnWord(this.state.currentWord._id);\n\n  onLearnNextWord = () =>\n    this.props.learnWord(this.state.currentWord._id).then(() =>\n      this.setState({\n        countOfTry: 0,\n        guessed: false\n      })\n    );\n\n  render() {\n    const { checkIsLoading, classes } = this.props;\n    const { currentWord, inputValue, guessed } = this.state;\n    const loading = checkIsLoading(loadingNames.words.learn);\n\n    return guessed ? (\n      <Fragment>\n        <Button onClick={this.onLearnNextWord} variant=\"contained\" color=\"primary\">\n          Learn the next word\n        </Button>\n        <WordPreview wordItem={currentWord} />\n      </Fragment>\n    ) : (\n      <div className={classes.learnWord}>\n        <LearningBoard\n          loading={loading}\n          onOptionChange={this.onChangeInput}\n          inputValue={inputValue}\n          word={currentWord && currentWord.word}\n          timesLearnt={currentWord && currentWord.timesLearnt}\n          onCheckAnswer={this.onCheckAnswer}\n          onGiveAHint={this.onGiveAHint}\n          onKnownWord={this.onKnownWord}\n          onForgottenWord={this.onForgottenWord}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LearnWordsContainer;\n","import { compose } from 'recompose';\nimport injectSheet from 'react-jss';\nimport { withSnackbar } from 'notistack';\nimport { withLoadingNames } from '../../context/loading-names';\nimport LearnWords from './container';\nimport styles from './styles';\nimport { withWords } from '../../context/words';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withLoadingNames,\n  withSnackbar,\n  withWords,\n);\n\nexport default enhance(LearnWords);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { WordsTable } from \"../../components\";\n\nclass WordsListContainer extends Component {\n  static propTypes = {\n    fetchWordsList: PropTypes.func.isRequired,\n    cleanWordsList: PropTypes.func.isRequired,\n    location: ReactRouterPropTypes.location.isRequired\n  };\n\n  componentDidMount() {\n    this.props.fetchWordsList();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.props.fetchWordsList();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWordsList();\n  }\n\n  render() {\n    return <WordsTable />;\n  }\n}\n\nexport default WordsListContainer;\n","import { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withWords } from '../../context/words';\nimport WordsList from './container';\n\nconst enhance = compose(\n  withRouter,\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(WordsList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { WordPreview } from \"../../components\";\nimport loadingNames from \"../../constants/loading-names\";\n\nclass WordPreviewContainer extends Component {\n  static propTypes = {\n    fetchWord: PropTypes.func.isRequired,\n    cleanWord: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    match: ReactRouterPropTypes.match.isRequired,\n    wordItem: PropTypes.shape({})\n  };\n\n  static defaultProps = {\n    wordItem: {}\n  };\n\n  componentDidMount() {\n    const { fetchWord, match } = this.props;\n\n    fetchWord(match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.cleanWord();\n  }\n\n  render() {\n    const { wordItem, checkIsLoading } = this.props;\n    const loading = checkIsLoading(loadingNames.words.fetch);\n\n    return <WordPreview loading={loading} wordItem={wordItem} />;\n  }\n}\n\nexport default WordPreviewContainer;\n","import { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withWords } from '../../context/words';\nimport WordPreviewContainer from './container';\n\nconst enhance = compose(\n  withRouter,\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(WordPreviewContainer);\n","const styles = {\n  searchBlock: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n    gap: \"1em\"\n  }\n};\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactRouterPropTypes from \"react-router-prop-types\";\nimport { joinRoute, parseSearchParams } from \"url-joiner\";\nimport uuid from \"uuid\";\nimport {\n  Button,\n  ControlsSeparator,\n  TextFieldLoading,\n  WordPreview\n} from \"../../components\";\nimport loadingNames from \"../../constants/loading-names\";\nimport routes from \"../../routes\";\nimport composeClassesPropTypes from \"../../modules/compose-classes-prop-types\";\nimport wordShape from '../../constants/shapes';\nimport styles from \"./styles\";\n\nconst SEARCH_INPUT_TIMEOUT = 500;\n\nclass SearchWordContainer extends Component {\n  static propTypes = {\n    wordItem: wordShape(PropTypes),\n    history: ReactRouterPropTypes.history.isRequired,\n    location: ReactRouterPropTypes.location.isRequired,\n    saveWord: PropTypes.func.isRequired,\n    searchWord: PropTypes.func.isRequired,\n    cleanWord: PropTypes.func.isRequired,\n    checkIsLoading: PropTypes.func.isRequired,\n    setWordToState: PropTypes.func.isRequired,\n    classes: composeClassesPropTypes(styles)\n  };\n\n  static defaultProps = {\n    wordItem: null,\n    classes: {}\n  };\n\n  state = {\n    searchValue: \"\",\n    isToEditMode: false\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const searchParams = parseSearchParams(location.search);\n\n    if (searchParams.query) {\n      this.searchWord(searchParams.query);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    const searchParams = parseSearchParams(location.search);\n\n    if (this.props.location.search !== prevProps.location.search && searchParams.query) {\n      this.searchWord(searchParams.query);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.state.isToEditMode) {\n      this.props.cleanWord();\n    }\n  }\n\n  cleanSearchValue = () => this.setState({ searchValue: \"\" });\n\n  searchWord = word => {\n    clearTimeout(this.inputTimer);\n    this.setState({ searchValue: word });\n    this.inputTimer = setTimeout(() => {\n      this.props.searchWord({ word });\n    }, SEARCH_INPUT_TIMEOUT);\n  };\n\n  handleOnChangeSearchInput = event => {\n    clearTimeout(this.inputTimer);\n    const { value } = event.target;\n\n    this.setState({ searchValue: value });\n\n    this.inputTimer = setTimeout(() => {\n      this.props.history.push(\n        joinRoute({\n          pathname: routes.words.search,\n          searchParams: { query: value }\n        })\n      );\n    }, SEARCH_INPUT_TIMEOUT);\n  };\n\n  handleEditBeforeSaving = () => {\n    const { history, setWordToState, wordItem } = this.props;\n    this.setState({\n      isToEditMode: true,\n      searchValue: \"\"\n    }, () => {\n      setWordToState({ ...wordItem, _id: uuid() });\n      history.push(routes.words.add);\n    });\n  };\n\n  handleSaveWord = () => {\n    const { saveWord, wordItem, cleanWord } = this.props;\n\n    return saveWord(wordItem).then(() => {\n      this.cleanSearchValue();\n      return cleanWord();\n    });\n  };\n\n  render() {\n    const { searchValue } = this.state;\n    const { wordItem, checkIsLoading, classes } = this.props;\n    const isEmpty = !Object.keys(wordItem).length;\n    const loading = checkIsLoading(loadingNames.words.search);\n\n    return (\n      <main>\n        <div className={classes.searchBlock}>\n          <TextFieldLoading\n            label=\"Search a word\"\n            value={searchValue}\n            onChange={this.handleOnChangeSearchInput}\n            loading={loading}\n          />\n          <ControlsSeparator align=\"right\">\n            <Button\n              onClick={this.handleSaveWord}\n              disabled={isEmpty}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Save to my words\n            </Button>\n            <Button\n              onClick={this.handleEditBeforeSaving}\n              disabled={isEmpty}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Edit before saving\n            </Button>\n          </ControlsSeparator>\n        </div>\n        <WordPreview wordItem={wordItem} />\n      </main>\n    );\n  }\n}\n\nexport default SearchWordContainer;\n","import { withRouter } from 'react-router-dom';\nimport injectSheet from 'react-jss';\nimport { compose } from 'recompose';\nimport { withLoadingNames } from '../../context/loading-names';\nimport { withWords } from '../../context/words';\nimport SearchWord from './container';\nimport styles from './styles';\n\nconst enhance = compose(\n  injectSheet(styles),\n  withRouter,\n  withLoadingNames,\n  withWords,\n);\n\nexport default enhance(SearchWord);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadingNamesProvider } from './loading-names';\nimport { WordsProvider } from './words';\nimport { UserProvider } from './user';\nimport { ErrorProvider } from './errors';\n\nconst StateProvider = ({ children }) => (\n  <ErrorProvider>\n    <LoadingNamesProvider>\n      <UserProvider>\n        <WordsProvider>{children}</WordsProvider>\n      </UserProvider>\n    </LoadingNamesProvider>\n  </ErrorProvider>\n);\n\nStateProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default StateProvider;\n","import React from 'react';\nimport { ThemeProvider } from 'react-jss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider, Zoom } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport { Header, BlocksWrapper, Footer } from '../components';\nimport {\n  LoginContainer,\n  LogoutContainer,\n  MainContainer,\n  WordsListContainer,\n  WordsAddContainer,\n  WordsSearchContainer,\n  PageNotFoundContainer,\n  WordsLearnContainer,\n  WordsEditContainer,\n  WordPreviewContainer\n} from '../pages';\nimport StateProvider from '../context';\nimport routes from '../routes';\nimport muiTheme from './mui-theme';\n\nconst snackbarConfig = {\n  TransitionComponent: Zoom,\n  maxSnack: 5,\n  anchorOrigin: {\n    vertical: 'top',\n    horizontal: 'right',\n  },\n  action: [<Close key=\"close\"/>],\n};\n\nconst Root = () => (\n  <ThemeProvider theme={muiTheme}>\n    <MuiThemeProvider theme={muiTheme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <SnackbarProvider {...snackbarConfig}>\n          <StateProvider>\n            <BlocksWrapper>\n              <Header/>\n              <Switch>\n                <Route exact path={routes.root} component={MainContainer}/>\n                <Route exact path={routes.login} component={LoginContainer}/>\n                <Route exact path={routes.logout} component={LogoutContainer}/>\n                <Route exact path={routes.words.add} component={WordsAddContainer}/>\n                <Route exact path={routes.words.learn} component={WordsLearnContainer}/>\n                <Route exact path={routes.words.list.all} component={WordsListContainer}/>\n                <Route exact path={routes.words.list.preview} component={WordPreviewContainer}/>\n                <Route exact path={routes.words.list.edit} component={WordsEditContainer}/>\n                <Route exact path={routes.words.search} component={WordsSearchContainer}/>\n                <Route component={PageNotFoundContainer}/>\n              </Switch>\n              <Footer/>\n            </BlocksWrapper>\n          </StateProvider>\n        </SnackbarProvider>\n      </Router>\n    </MuiThemeProvider>\n  </ThemeProvider>\n);\n\nexport default Root;\n","import injectSheet from \"react-jss\";\nimport { compose } from \"recompose\";\nimport styles from \"./styles\";\nimport Root from \"./component\";\n\nconst enhance = compose(injectSheet(styles));\n\nexport default enhance(Root);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Index is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Root/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}